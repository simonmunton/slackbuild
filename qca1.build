#!/bin/bash
#
. build_funcs

TARNAME=qca
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/new/q
#TAR_EXT=.tar.gz
VERSION=1.0
VERSIONEXTRA=
BUILD=2

WEBPAGE="http://delta.affinix.com/qca/"

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=qca
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 #patch -p1 < ${CWD}/
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

QTDIR=${QTDIR:-/usr/lib/qt}
if [ -h ${QTDIR} ]
then
  USEQTDIR=`readlink -e ${QTDIR}`
else
  USEQTDIR=${QTDIR}
fi

if [ ${DO_CONFIGURE} == "yes" ]
then
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
./configure --prefix=${USEQTDIR} \
	    --qtdir=${USEQTDIR}
fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

make install DESTDIR=${PKG} INSTALL_ROOT=${PKG}

#strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "Qt Cryptographic Architecture"
QCA aims to provide a straightforward and cross-platform crypto API,
using Qt datatypes and conventions.  QCA separates the API from the
implementation, using plugins known as Providers.  The advantage of
this model is to allow applications to avoid linking to or explicitly
depending on any particular cryptographic library.  This allows one
to easily change or upgrade crypto implementations without needing
to recompile the application.

QCA was written by Justin Karneges.

EOF

post_install

cd ${PKG}
su -c "chown -R root:root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}:${GROUP} ${PKG}"
