# build utility functions
#
CWD=`pwd`



pre_unpack ()
{
USERNAME=`id -un`
GROUP=`id -gn`

: ${PKGNAME:=$TARNAME}
: ${BUILD_SUFFIX:=sm}

: ${ARCH:=i486}

# guess tar program and tar opts

case $TAR_EXT in
  .tar.gz|.tgz)
    : ${TAR_PROG:=tar}
    : ${TAR_OPTS:=xzvf}
    ;;

  .tar.bz2|.tbz)
    : ${TAR_PROG:=tar}
    : ${TAR_OPTS:=xjvf}
    ;;

  .zip)
    : ${TAR_PROG:=unzip}
    : ${TAR_OPTS:=}
    ;;

esac


}


pre_configure ()
{
rm -rf $PKG
mkdir -p $PKG
mkdir -p $PKG/usr/doc/$TARNAME-$VERSION


CPUOPT="-mcpu"
GCCVER=`gcc -v 2>&1 > /dev/null | grep "gcc version" | sed -e "s/.*gcc version *//"`
case $GCCVER in
  3.4*|4.*) CPUOPT="-mtune" ;;
esac

}


fix_links ()
{
# fix links
for f in `find $PKG -type l`
do
  if [[ `readlink $f` =~ "$PKG.*" ]]
  then
    (cd `dirname $f`
     linkname=`basename $f`
     ln -snf `readlink $linkname | sed -e "s@$PKG@@"` $linkname
    )
  fi
done
}

compress_manpages ()
{
if [ -d $PKG/usr/man ]
then
  # compress man pages
  find $PKG/usr/man -exec gzip {} \;

  # make links point to right places
  for f in `find $PKG/usr/man -type l`
  do
    mv $f $f.gz
    ln -sf `readlink $f.gz`.gz $f.gz
  done
fi

if [ -d $PKG/usr/X11R6/man ]
then
  # compress man pages
  find $PKG/usr/X11R6/man -exec gzip {} \;

  # make links point to right places
  for f in `find $PKG/usr/X11R6/man -type l`
  do
    mv $f $f.gz
    ln -sf `readlink $f.gz`.gz $f.gz
  done
fi
}

compress_info ()
{
if [ -d $PKG/usr/info ]
then
  rm $PKG/usr/info/dir

  # compress info pages
  find $PKG/usr/info -exec gzip {} \;
fi
}


fix_docs ()
{
if [ -d $PKG/usr/share/doc/$TARNAME-$VERSION ]
then
  mv $PKG/usr/share/doc/$TARNAME-$VERSION/* $PKG/usr/doc/$TARNAME-$VERSION
  rm -rf $PKG/usr/share/doc
fi

if [ -d $PKG/usr/share/doc/$TARNAME ]
then
  mv $PKG/usr/share/doc/$TARNAME/* $PKG/usr/doc/$TARNAME-$VERSION
  rm -rf $PKG/usr/share/doc
fi
}


post_install ()
{
##############################################################
# if info dir exists, do install-info
#
if [ -d $PKG/usr/info ]
then
  infos=`ls $PKG/usr/info | grep \.info\.gz | tr '\012' ' '`
  if [ -n "$infos" ]
  then
    cat <<EOF >> $PKG/install/doinst.sh
#
for n in $infos
do
  install-info --info-dir=/usr/info /usr/info/\$n
done
EOF
  fi
fi

##############################################################
# if gconf schemas exist, run gconftool
#
if [ -d $PKG/etc/gconf/schemas ]
then
  schemas=`ls $PKG/etc/gconf/schemas | tr '\012' ' '`
  if [ -n "$schemas" ]
  then
    cat <<EOF >> $PKG/install/doinst.sh
#
for n in $schemas
do
  GCONF_CONFIG_SOURCE=xml:merged:/etc/gconf/gconf.xml.defaults /usr/bin/gconftool-2 --makefile-install-rule /etc/gconf/schemas/\$n
done
EOF
  fi
fi

##############################################################
# if usr/share/applications exists, run update-desktop-database
#
if [ -d $PKG/usr/share/applications ]
then
  cat <<EOF >> $PKG/install/doinst.sh
#
/usr/bin/update-desktop-database
EOF
fi

##############################################################
# if usr/share/mime exists, run update-mime-database
#
if [ -d $PKG/usr/share/mime ]
then
  cat <<EOF >> $PKG/install/doinst.sh
#
/usr/bin/update-mime-database /usr/share/mime
EOF
fi

##############################################################
# if usr/share/icons exists, run gtk-update-icon-cache
#
if [ -d $PKG/usr/share/icons ]
then
  icons=`find $PKG/usr/share/icons -type d -maxdepth 1 | grep -v "^$PKG/usr/share/icons$" | sed -e 's@/.*/usr/share/icons/@@' | tr '\012' ' '`
  if [ -n "$icons" ]
  then
    cat <<EOF >> $PKG/install/doinst.sh
#
for n in $icons
do
  gtk-update-icon-cache -f -t /usr/share/icons/\$n
done
EOF
  fi
fi

##############################################################
# if var/lib/scrollkeeper or usr/share/omf exist, run
# scrollkeeper-update
#
if [ -d $PKG/var/lib/scrollkeeper -o -d $PKG/usr/share/omf ]
then
  if [ -d $PKG/var/lib/scrollkeeper ]
  then
    ( cd $PKG/var/lib/scrollkeeper && rm -r * )
  fi

  cat <<EOF >> $PKG/install/doinst.sh
#
if [ -x /usr/bin/scrollkeeper-update ]; then
  /usr/bin/scrollkeeper-update -p /var/lib/scrollkeeper 1> /dev/null 2> /dev/null
fi
EOF
fi

##############################################################
# if usr/lib/gtk-2.0/*/loaders exists, run
# gdk-pixbuf-query-loaders
#
if [ -d $PKG/usr/lib/gtk-2.0/*/loaders ]
then
  cat <<EOF >> $PKG/install/doinst.sh
#
if [ -x /usr/bin/gdk-pixbuf-query-loaders ]; then
  gdk-pixbuf-query-loaders > /etc/gtk-2.0/gdk-pixbuf.loaders
fi
EOF
fi

##############################################################
# if usr/lib/gtk-2.0/*/immodule exists, run
# gtk-query-immodules-2.0
#
if [ -d $PKG/usr/lib/gtk-2.0/*/immodule ]
then
  cat <<EOF >> $PKG/install/doinst.sh
#
if [ -x /usr/bin/gtk-query-immodules-2.0 ]; then
  gtk-query-immodules-2.0 > /etc/gtk-2.0/gtk.immodules
fi
EOF
fi

##############################################################
# warn if usr/local exists
#
if [ -d $PKG/usr/local ]
then
  echo WARNING --- usr/local directory exists
fi
}
