#!/bin/bash
#
. build_funcs

TARNAME=Noto-hinted
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/new/n
#TAR_EXT=.tar.gz
VERSION=20171026
VERSIONEXTRA=
BUILD=1

#TAR_PROG=
#TAR_OPTS=
PKGNAME=fonts_Noto
#PKGVERSION=
#BUILD_SUFFIX=
ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

pre_configure

DESTDIR=usr/share/fonts/truetype/Noto

mkdir -p ${PKG}/${DESTDIR}

(cd ${PKG}/usr/doc/${TARNAME}-${VERSION}
 ${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
 chmod o+r *
 mv *{ttf,otf} ${PKG}/${DESTDIR}
 mv ${TARNAME}/* .
 rmdir ${TARNAME}
 chmod -x,+X *
)

touch ${PKG}/${DESTDIR}/{fonts.dir,fonts.scale}

cat >> ${PKG}/install/doinst.sh << EOF
#
if [ -x usr/X11R6/bin/mkfontscale ]; then
  echo "Creating font.scale:  /usr/X11R6/bin/mkfontscale"
  usr/X11R6/bin/mkfontscale ${DESTDIR}
fi
if [ -x usr/X11R6/bin/mkfontdir ]; then
  echo "Creating font.dir:  /usr/X11R6/bin/mkfontdir"
  usr/X11R6/bin/mkfontdir ${DESTDIR}
fi
if [ -x usr/X11R6/bin/fc-cache ]; then
  echo "Updating X font indexes:  /usr/X11R6/bin/fc-cache"
  usr/X11R6/bin/fc-cache
fi

EOF

#strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc <<EOF "Noto Fonts - Beautiful and free fonts for all languages"
When text is rendered by a computer, sometimes characters are 
displayed as tofu. They are little boxes to indicate your device 
doesn't have a font to display the text.

Google has been developing a font family called Noto, which aims to 
support all languages with a harmonious look and feel. Noto is Googles 
answer to tofu. The name noto is to convey the idea that Googles goal 
is to see no more tofu. Noto has multiple styles and weights, and 
freely available to all. The comprehensive set of fonts and tools 
used in our development are available in our GitHub repositories. 

EOF

post_install

cd ${PKG}
su -c "chown -R root:root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}:${GROUP} ${PKG}"
