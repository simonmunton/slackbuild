#!/bin/bash
#
. build_funcs

TARNAME=qt-assistant-qassistantclient-library-compat
#TARNAME=qt
TARNAMEEXTRA=-src
TARDIR=~/tmp/new/q
#TAR_EXT=.tar.gz
VERSION=4.6.3
VERSIONEXTRA=
BUILD=2

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}-${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
mv qt-assistant-qassistantclient-library-compat-version-${VERSION} ${TARNAME}-${VERSION}
(cd ${TARNAME}-${VERSION}
 patch -p1 < ${CWD}/qt-assistant-01_build_system.diff
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

if [ ${DO_CONFIGURE} == "yes" ]
then
qmake CONFIG+=create_prl
(cd lib
 qmake CONFIG+=create_prl
)
fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} || exit
pushd lib
 make ${NUM_JOBS} || exit
popd
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

make install INSTALL_ROOT=$PKG
pushd lib
make install INSTALL_ROOT=$PKG
popd


# Link the shared libraries into /usr/lib:
( cd $PKG/usr/lib${LIBDIRSUFFIX}
  for file in qt/lib/*.so* ; do
    ln -sf $file .
  done
)

# Put a ton of links to more "normal" places.  I'd just use a prefix of /usr, but it
# creates a ton of new (and ambiguously named) /usr directories...
mkdir -p $PKG/usr/bin
( cd $PKG/usr/bin
  for file in \
    assistant_adp ;
  do
    ln -sf /usr/lib${LIBDIRSUFFIX}/qt/bin/$file .
  done
)

# Install missing headers
( cd $PKG/usr/lib${LIBDIRSUFFIX}/qt/include/QtAssistant
  cat > QtAssistant << EOF
#ifndef QT_QTASSISTANT_MODULE_H
#define QT_QTASSISTANT_MODULE_H
#include <QtNetwork/QtNetwork>
#include "qassistantclient.h"
#endif
EOF

  cat > QAssistantClient << EOF
#include "qassistantclient.h"
EOF
)

( cd $PKG/usr/lib${LIBDIRSUFFIX}/qt/lib/pkgconfig
  cat > QtAssistantClient.pc << EOF
prefix=/usr/lib${LIBDIRSUFFIX}/qt
exec_prefix=\${prefix}
libdir=\${prefix}/lib${LIBDIRSUFFIX}
includedir=\${prefix}/include/QtAssistant
qt_config=lex yacc warn_on uic resources qt warn_on release incremental link_prl exceptions no_mocdepend release stl qt_no_framework system-sqlite release shared largefile stl separate_debug_info mmx 3dnow sse sse2 dylib create_prl link_prl depend_includepath fix_output_dirs QTDIR_build use_libmysqlclient_r qt warn_on qt_install_headers create_pc moc thread dll shared

Name: Qtassistantclient
Description: Qtassistantclient Library
Version: ${VERSION}
Libs: -L\${libdir} -lQtAssistantClient 
Libs.private: -L/usr/lib${LIBDIRSUFFIX}/qt/lib  -lQtGui -L/usr/lib${LIBDIRSUFFIX}/qt/lib -lQtNetwork -lQtCore -lpthread   
Cflags: -I/usr/lib${LIBDIRSUFFIX}/qt/include -I\${includedir}
Requires: QtNetwork
EOF

 mkdir $PKG/usr/lib${LIBDIRSUFFIX}/pkgconfig
 cd $PKG/usr/lib${LIBDIRSUFFIX}/pkgconfig
 ln -s /usr/lib${LIBDIRSUFFIX}/qt/lib/pkgconfig/QtAssistantClient.pc .
)

# Fix wrong path in prl file
sed -i -e "/^QMAKE_PRL_BUILD_DIR/d" \
    ${PKG}/usr/lib${LIBDIRSUFFIX}/qt/lib/libQtAssistantClient.prl

# Install translations
(cd translations
 lrelease assistant_adp_*ts
)
mkdir -p ${PKG}/usr/share/qt4/translations/
install -p -m0644 translations/assistant_adp_*.qm \
    ${PKG}/usr/share/qt4/translations/

# Install prf file
install -D -p -m0644 features/assistant.prf \
    ${PKG}/usr/share/qt4/mkspecs/features/assistant.prf


#strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  GPL_EXCEPTION.TXT GPL_EXCEPTION_ADDENDUM.TXT INSTALL LICENSE.GPL \
  LICENSE.QPL OPENSOURCE-NOTICE.TXT changes-$VERSION \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

( cd $PKG/usr/doc/$TARNAME-$VERSION
  ln -sf /usr/lib/qt/doc/html .
)


fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "QT Assistant compat version"
QT Assistant compat version

EOF

post_install

cd ${PKG}
su -c "chown -R root:root ${PKG} ${PKG1}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}:${GROUP} ${PKG} ${PKG1}"
