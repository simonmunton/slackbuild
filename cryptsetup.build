#!/bin/bash
#
. build_funcs

TARNAME=cryptsetup
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/new/c
#TAR_EXT=.tar.gz
VERSION=1.6.4
VERSIONEXTRA=
BUILD=1

WEBPAGE="http://code.google.com/p/cryptsetup/"

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 #patch -p1 < ${CWD}/
)

#mkdir ${TARNAME}-${VERSION}.static
#cp -lr ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}.static
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

if [ ${DO_CONFIGURE} == "yes" ]
then
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --localstatedir=/var \
	    --mandir=/usr/man \
            --datarootdir=/usr \
            --datadir=/usr/share \
            --localedir=/usr/share/locale \
            --enable-libgcrypt \
            --enable-libdevmapper

#(cd ${CWD}/${TARNAME}-${VERSION}.static
#CFLAGS="${SLKCFLAGS}" \
#CXXFLAGS="${SLKCFLAGS}" \
#./configure --prefix=/usr \
#            --libdir=/usr/lib${LIBDIRSUFFIX} \
#            --localstatedir=/var \
#            --sysconfdir=/etc \
#            --libdir=/usr/lib${LIBDIRSUFFIX} \
#            --datarootdir=/usr \
#            --datadir=/usr/share \
#            --enable-libgcrypt \
#            --enable-libdevmapper \
#            --enable-static \
#            --disable-shared \
#            --disable-shared-library
#)
fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} || exit
#(cd ${CWD}/${TARNAME}-${VERSION}.static
#make ${NUM_JOBS} || exit
#)
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

make install DESTDIR=${PKG}

strip_binaries

# This is small, so save it:
#mv ${PKG}/usr/sbin/cryptsetup ${PKG}/usr/sbin/cryptsetup.dynamic

#(cd ${CWD}/${TARNAME}-${VERSION}.static
#mkdir -p ${PKG}/sbin
#cat src/cryptsetup > ${PKG}/sbin/cryptsetup.static
#chmod 755 ${PKG}/sbin/cryptsetup.static
#)

# Now that we have the .static version, it only makes sense to
# use it by default (even when calling /usr/sbin/cryptsetup).
# This avoids missing library issues if someone installs an
# encrypted system using only the A package series.
#
# Replace with a link:
#( cd ${PKG}/usr/sbin ; ln -sf ../../sbin/cryptsetup.static cryptsetup )
# Put one in /sbin too, in case someone tries to use /sbin/cryptsetup:
#( cd ${PKG}/sbin ; ln -sf cryptsetup.static cryptsetup )


# Move the shared library to ${PKG}/lib${LIBDIRSUFFIX}:
mkdir -p ${PKG}/lib${LIBDIRSUFFIX}
( cd ${PKG}/usr/lib${LIBDIRSUFFIX}
  for file in lib*.so.?.* ; do
    mv ${file} ../../lib${LIBDIRSUFFIX}
    ln -sf ../../lib${LIBDIRSUFFIX}/${file} .
  done
  cp -a lib*.so.? ../../lib${LIBDIRSUFFIX}
)

# Move the cryptsetup binary to ${PKG}/sbin:
mkdir -p ${PKG}/sbin
( cd ${PKG}/usr/sbin
  mv cryptsetup ../../sbin
  ln -sf ../../sbin/cryptsetup .
  mv veritysetup ../../sbin
  ln -sf ../../sbin/veritysetup .
)


fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* ChangeLog INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "utility for setting up encrypted filesystems"
LUKS is a standard for cross-platform hard disk encryption.
It provides secure management of multiple userpasswords and
stores setup information in the partition header.
LUKS for dm-crypt is now implemented in cryptsetup replacing the
original cryptsetup. It provides all the functionally of the
original version plus all LUKS features.

cryptsetup home: http://luks.endorphin.org/dm-crypt

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
