#!/bin/bash
#
. build_funcs

TARNAME=mesa
TARNAMEEXTRA=
TARDIR=~/tmp/new/m/Mesa3D
#TAR_EXT=.tar.gz
VERSION=22.1.0
VERSIONEXTRA=
BUILD=1

#TAR_PROG=
#TAR_OPTS=
PKGNAME=mesa
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}-${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

#FULL_TARNAME1=${TARDIR}/${TARNAME}GLUT-${VERSION}${VERSIONEXTRA}${TAR_EXT}
#FULL_TARNAME1=${TARDIR}/${TARNAME}GLUT-7.11.2${TAR_EXT}
#FULL_TARNAME2=${TARDIR}/${TARNAME}Demos-${VERSION}${VERSIONEXTRA}${TAR_EXT}

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME1}
#${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME2}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}

# ./autogen.sh
# autoreconf -v --install --force

# patch -p1 -R < ${CWD}/mesa-revert-72566fd92c27b39abe2057f6f23388ec40793dd9.patch
# patch -p1 -R < ${CWD}/mesa-revert-80817b6e344258ac9b955f824ebf9019a0fc1610.patch

# patch -p1 < ${CWD}/mesa-3e3d75d16abb00c0aacff3fc058d65d4ad5c1a29.patch
# patch -p1 < ${CWD}/mesa-b1d585ca36e189c65e724c6813e8a77be9a90df2.patch
# patch -p1 < ${CWD}/mesa-538356e3e62be205cae9fed373ab6e24ec4455de.patch
 patch -p1 < ${CWD}/mesa-459b361abb7b249654475077bb58d0b08edb26af.patch
 patch -p1 < ${CWD}/mesa-bc2a26f347cc51a9273af232db9e20f840242db2.patch
 patch -p1 < ${CWD}/mesa-588bc1073d96b8dbdbba0deed24c09eef449056d.patch
 patch -p1 < ${CWD}/mesa-4f571944b75ad512078ca5ca2703a159d405ad95.patch
 patch -p1 < ${CWD}/mesa-f9a503b48eac009d9878518a0b16a92388f557ea.patch

# sed -i -e 's/DRI_DIRS =/DRI_DIRS = swrast/' configs/linux-dri
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

case ${ARCH} in
  i486) SLKCFLAGS="-march=i686 -O2" ;;
  *) SLKCFLAGS="-O2 -fPIC" ;;
esac

# Be sure this list is up-to-date:
DRI_DRIVERS="i915,i965,r100,r200,nouveau"
GALLIUM_DRIVERS="nouveau,r300,r600,svga,radeonsi,swrast,virgl,iris,crocus,zink"

if [ ${DO_CONFIGURE} == "yes" ]
then
#true

#(cd configs && rm -f current && ln -s linux-dri-x86 current)

mkdir meson-build
cd meson-build

#make realclean
if [ -f ./configure_xx ]
then
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --localstatedir=/var \
            --mandir=/usr/man \
            --with-dri-driverdir=/usr/lib${LIBDIRSUFFIX}/xorg/modules/dri \
            --with-dri-drivers=i915,i965,r200,radeon,swrast \
            --enable-osmesa \
            --enable-shared-glapi \
            --enable-texture-float         \
            --enable-gles1                 \
            --enable-gles2                 \
            --enable-xa                    \
            --enable-gbm                   \
            --enable-gallium-egl           \
            --enable-gallium-gbm           \
            --enable-glx-tls               \
            --with-egl-platforms="drm,x11,wayland" \
            --with-gallium-drivers="i915,nouveau,r300,r600,radeonsi,svga,swrast"

#            --enable-openvg                \
#            --enable-opencl                \
#            --with-llvm-shared-libs        \
#            --with-gallium-drivers=i915,r600,svga,swrast \

#            --enable-gallium-osmesa \

#            --with-gallium-drivers=i915,nouveau,r300,r600,svga,swrast \
#            --with-dri-drivers=i915,i965,nouveau,r200,radeon,swrast

elif [ -f ./CMakeLists.txt ]
then
cmake -DCMAKE_C_FLAGS:STRING="${SLKCFLAGS}" \
      -DCMAKE_CXX_FLAGS:STRING="${SLKCFLAGS}" \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DMAN_INSTALL_DIR=/usr/man \
      -DLIB_SUFFIX=${LIBDIRSUFFIX} \
      -DSYSCONF_INSTALL_DIR=/etc \
      .
elif [ -f ../meson.build ]
then
  export CFLAGS="$SLKCFLAGS"
  export CXXFLAGS="$SLKCFLAGS"

  meson setup \
  --prefix=/usr \
  --libdir=lib${LIBDIRSUFFIX} \
  --libexecdir=/usr/libexec \
  --bindir=/usr/bin \
  --sbindir=/usr/sbin \
  --includedir=/usr/include \
  --datadir=/usr/share \
  --mandir=/usr/man \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --buildtype=release \
  -Dplatforms=x11,wayland \
  -Dgallium-opencl=icd \
  -Dgallium-nine=true \
  -Dosmesa=true \
  -Dgallium-drivers=$GALLIUM_DRIVERS \
  -Dvulkan-drivers=amd,intel,swrast \
  -Dvulkan-layers=device-select,intel-nullhw,overlay \
  -Dglvnd=true \
  -Dllvm=enabled \
  -Dshared-llvm=enabled \
  -Dshared-glapi=enabled \
  -Degl=enabled \
  -Dgles1=enabled \
  -Dgles2=enabled \
  -Dopengl=true \
  -Dglx=dri \
  .. || exit 1

#  -Ddri-drivers=$DRI_DRIVERS \


#  meson --prefix=/usr \
#        --buildtype=release \
#        -D b_ndebug=true \
#        -D dri-drivers-path=/usr/lib${LIBDIRSUFFIX}/xorg/modules/dri \
#        -D osmesa=gallium \
#        -D tools=all \
#        _BuilD_

fi

fi

if [ ${DO_MAKE} == "yes" ]
then
if [ -f ../meson.build ]
then
  ninja ${NUM_JOBS} || exit
else
#make ${NUM_JOBS} linux-dri-x86 INSTALL_DIR=/usr DRI_DRIVER_INSTALL_DIR=/usr/lib/xorg/modules/dri || exit
make ${NUM_JOBS} INSTALL_DIR=/usr DRI_DRIVER_INSTALL_DIR=/usr/lib${LIBDIRSUFFIX}/xorg/modules/dri || exit
# Make some "demos":
( cd progs/xdemos
  make -i INSTALL_DIR=/usr DRI_DRIVER_INSTALL_DIR=/usr/lib${LIBDIRSUFFIX}/xorg/modules/dri
)
fi
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

if [ -f ../meson.build ]
then
  DESTDIR=${PKG} ninja install
else
#make install DESTDIR=${PKG}
make install DESTDIR=${PKG} INSTALL_DIR=/usr DRI_DRIVER_INSTALL_DIR=/usr/lib${LIBDIRSUFFIX}/xorg/modules/dri
fi

cd ..

# Install /etc/drirc as a .new file:
if [ -r ${PKG}/etc/drirc ]; then
  mv ${PKG}/etc/drirc ${PKG}/etc/drirc.new
fi

# Add a default provider for glvnd when the vendor cannot be determined:
( cd ${PKG}/usr/lib${LIBDIRSUFFIX}
  if [ ! -r libGLX_system.so.0 ]; then
    ln -sf libGLX_mesa.so.0 libGLX_system.so.0
  fi
)

# Install some "demos":
#( cd progs/xdemos
#  mkdir -p ${PKG}/usr/bin
#  cp glthreads glxcontexts glxdemo glxgears glxgears_fbconfig glxheads \
#    glxinfo glxpbdemo glxpixmap \
#    ${PKG}/usr/bin
#)

#if [ -e ${PKG}/usr/lib${LIBDIRSUFFIX}/xorg/modules/drivers/radeon_drv.so ]
#then
#  mv ${PKG}/usr/lib${LIBDIRSUFFIX}/xorg/modules/drivers/radeon_drv.so ${PKG}/usr/lib${LIBDIRSUFFIX}/xorg/modules/drivers/radeong_drv.so
#fi

#strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  docs/COPYING* docs/relnotes/${VERSION}.html docs/README* docs/GL* \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

mkdir ${PKG}/usr/doc/${TARNAME}-${VERSION}/html
cp -a docs/*.html ${PKG}/usr/doc/${TARNAME}-${VERSION}/html

rm -f ${PKG}/usr/doc/${TARNAME}-${VERSION}/html/relnotes*.html

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc <<EOF "a 3-D graphics library"
Mesa is a 3-D graphics library with an API very similar to that of
another well-known 3-D graphics library.  :-)  The Mesa libraries are
used by X to provide both software and hardware accelerated graphics.

Mesa was written by Brian Paul.

EOF

post_install

cd ${PKG}
su -c "chown -R root:root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}:${GROUP} ${PKG}"
