--- SDL_sound-1.0.1/decoders/flac.c.orig	2003-03-10 22:44:14.000000000 +0000
+++ SDL_sound-1.0.1/decoders/flac.c	2007-06-02 20:38:51.000000000 +0100
@@ -44,6 +44,10 @@
 #define __SDL_SOUND_INTERNAL__
 #include "SDL_sound_internal.h"
 
+#include <FLAC/export.h>
+#if !defined(FLAC_API_VERSION_CURRENT) || FLAC_API_VERSION_CURRENT <= 7
+#define FLAC_LEGACY
+
 #include <FLAC/seekable_stream_decoder.h>
 
 #define D_END_OF_STREAM               FLAC__SEEKABLE_STREAM_DECODER_END_OF_STREAM
@@ -92,6 +96,49 @@
 typedef FLAC__StreamMetadata           d_metadata_t;
 typedef FLAC__StreamDecoderWriteStatus d_write_status_t;
 
+#else
+#include <FLAC/stream_decoder.h>
+
+#define D_END_OF_STREAM               FLAC__STREAM_DECODER_END_OF_STREAM
+
+#define d_new()                       FLAC__stream_decoder_new()
+#define d_init(x,a,b,c,d,e,f,g,h,i)   FLAC__stream_decoder_init_stream(x,a,b,c,d,e,f,g,h,i)
+#define d_process_metadata(x)         FLAC__stream_decoder_process_until_end_of_metadata(x)
+#define d_process_one_frame(x)        FLAC__stream_decoder_process_single(x)
+#define d_get_state(x)                FLAC__stream_decoder_get_state(x)
+#define d_finish(x)                   FLAC__stream_decoder_finish(x)
+#define d_delete(x)                   FLAC__stream_decoder_delete(x)
+
+typedef FLAC__StreamDecoder           decoder_t;
+typedef FLAC__StreamDecoderReadStatus d_read_status_t;
+
+#define D_SEEK_STATUS_OK              FLAC__STREAM_DECODER_SEEK_STATUS_OK
+#define D_SEEK_STATUS_ERROR           FLAC__STREAM_DECODER_SEEK_STATUS_ERROR
+#define D_TELL_STATUS_OK              FLAC__STREAM_DECODER_TELL_STATUS_OK
+#define D_TELL_STATUS_ERROR           FLAC__STREAM_DECODER_TELL_STATUS_ERROR
+#define D_LENGTH_STATUS_OK            FLAC__STREAM_DECODER_LENGTH_STATUS_OK
+#define D_LENGTH_STATUS_ERROR         FLAC__STREAM_DECODER_LENGTH_STATUS_ERROR
+
+#define d_seek_absolute(x, y)         FLAC__stream_decoder_seek_absolute(x, y)
+
+typedef FLAC__StreamDecoderSeekStatus   d_seek_status_t;
+typedef FLAC__StreamDecoderTellStatus   d_tell_status_t;
+typedef FLAC__StreamDecoderLengthStatus d_length_status_t;
+
+#define D_WRITE_CONTINUE     FLAC__STREAM_DECODER_WRITE_STATUS_CONTINUE
+#define D_READ_END_OF_STREAM FLAC__STREAM_DECODER_READ_STATUS_END_OF_STREAM
+#define D_READ_ABORT         FLAC__STREAM_DECODER_READ_STATUS_ABORT
+#define D_READ_CONTINUE      FLAC__STREAM_DECODER_READ_STATUS_CONTINUE
+
+#define d_error_status_string FLAC__StreamDecoderErrorStatusString
+
+typedef FLAC__StreamDecoderErrorStatus d_error_status_t;
+typedef FLAC__StreamMetadata           d_metadata_t;
+typedef FLAC__StreamDecoderWriteStatus d_write_status_t;
+
+#endif
+
+
 
 static int FLAC_init(void);
 static void FLAC_quit(void);
@@ -400,6 +447,7 @@
         BAIL_MACRO(ERR_OUT_OF_MEMORY, 0);
     } /* if */       
 
+#ifdef FLAC_LEGACY
     d_set_read_callback(decoder, read_callback);
     d_set_write_callback(decoder, write_callback);
     d_set_metadata_callback(decoder, metadata_callback);
@@ -419,7 +467,25 @@
 
     internal->decoder_private = f;
     d_init(decoder);
+#else
+    f->rw = internal->rw;
+    f->sample = sample;
+    f->decoder = decoder;
+    f->sample->actual.format = 0;
+    f->is_flac = 0 /* !!! FIXME: should be "has_extension", not "0". */;
 
+    internal->decoder_private = f;
+    d_init(decoder,
+	   read_callback,
+	   seek_callback,
+	   tell_callback,
+	   length_callback,
+	   eof_callback,
+	   write_callback,
+	   metadata_callback,
+	   error_callback,
+	   f);
+#endif
     sample->flags = SOUND_SAMPLEFLAG_NONE;
 
     pos = SDL_RWtell(f->rw);
--- SDL_sound-1.0.1/configure.orig	2003-10-12 19:54:57.000000000 +0100
+++ SDL_sound-1.0.1/configure	2007-06-02 20:21:20.000000000 +0100
@@ -7089,7 +7089,7 @@
 
 fi
 
-x="C__seekable_stream_decoder_process_single"
+x="C__stream_decoder_process_single"
 flcsym="FLA$x"
 # Check whether --enable-flac or --disable-flac was given.
 if test "${enable_flac+set}" = set; then
