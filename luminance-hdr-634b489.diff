--- luminance-hdr-634b489/CMakeLists.txt.orig	2025-08-16 16:34:47.000000000 +0100
+++ luminance-hdr-634b489/CMakeLists.txt	2025-08-16 17:18:48.242353794 +0100
@@ -4,6 +4,7 @@
 CMAKE_POLICY(SET CMP0054 NEW)
 CMAKE_POLICY(SET CMP0053 NEW)
 CMAKE_POLICY(SET CMP0070 NEW)
+CMAKE_POLICY(SET CMP0167 OLD)
 PROJECT("Luminance HDR")
 
 string(TOLOWER ${CMAKE_BUILD_TYPE} LOWERCASE_CMAKE_BUILD_TYPE)
@@ -180,7 +181,7 @@
 IF(WIN32)
     SET(Boost_USE_STATIC_LIBS ON)
 ENDIF()
-FIND_PACKAGE(Boost REQUIRED COMPONENTS program_options thread chrono system date_time atomic)
+FIND_PACKAGE(Boost REQUIRED COMPONENTS program_options thread chrono date_time atomic)
 INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
 
 FIND_PACKAGE(exiv2 REQUIRED 0.27.0)
--- luminance-hdr-634b489/src/Libpfs/manip/resize.hxx.orig	2025-08-16 16:34:47.000000000 +0100
+++ luminance-hdr-634b489/src/Libpfs/manip/resize.hxx	2025-08-16 16:35:18.242938155 +0100
@@ -29,6 +29,7 @@
 #endif
 
 #include <boost/math/constants/constants.hpp>
+#include <boost/numeric/conversion/bounds.hpp>
 #include "copy.h"
 #include "resize.h"
 #include "../../sleef.c"
--- luminance-hdr-634b489/build_files/Modules/CompilerSettings.cmake.orig	2025-08-16 16:34:47.000000000 +0100
+++ luminance-hdr-634b489/build_files/Modules/CompilerSettings.cmake	2025-09-08 08:47:08.162947269 +0100
@@ -14,8 +14,8 @@
     add_definitions(-DBRANCH_PREDICTION)
     execute_process(COMMAND ${CMAKE_CXX_COMPILER} -dumpversion OUTPUT_VARIABLE GCC_VERSION)
     if (GCC_VERSION VERSION_GREATER 4.7 OR GCC_VERSION VERSION_EQUAL 4.7)
-        message(STATUS "C++11 activated for GCC ${GCC_VERSION}")
-        set(CMAKE_CXX_STANDARD 11)
+        message(STATUS "C++14 activated for GCC ${GCC_VERSION}")
+        set(CMAKE_CXX_STANDARD 14)
         add_definitions(-DLHDR_CXX11_ENABLED)
     elseif(GCC_VERSION VERSION_GREATER 4.3 OR GCC_VERSION VERSION_EQUAL 4.3)
         message(WARNING "C++0x activated for GCC ${GCC_VERSION}. If you get any errors update to a compiler that fully supports C++11")
@@ -25,8 +25,8 @@
         message(WARNING "C++11 NOT available. GCC >= 4.3 is needed.")
     endif()
 elseif("${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang")
-    message(STATUS "C++11 activated for Clang")
-    set(CMAKE_CXX_STANDARD 11)
+    message(STATUS "C++14 activated for Clang")
+    set(CMAKE_CXX_STANDARD 14)
     if (APPLE)
         set(CMAKE_EXE_LINKER_FLAGS "-lc++abi -stdlib=libc++ -rpath @loader_path/../Frameworks/")
         set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
