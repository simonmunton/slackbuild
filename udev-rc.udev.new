#!/bin/sh

PATH="/sbin:/bin"

udev_start() {
	# disable hotplug helper, udevd listens to netlink
	echo "" > /proc/sys/kernel/hotplug

	# mount tmpfs on /dev, the SUSE kernel initramfs does this normally
	if ! grep -E -q "^[^[:space:]]+ /dev tmpfs" /proc/mounts; then
	    # umount shm if needed
	    if grep -E -q "^[^[:space:]]+ /dev/shm tmpfs" /proc/mounts; then
		umount -l /dev/shm
	    fi

	    # umount pts if needed, will remount it
	    if grep -E -q "^[^[:space:]]+ /dev/pts devpts" /proc/mounts; then
		umount -n -l /dev/pts
	    fi

	    # mount tmpfs on /dev
	    mount -n -o mode=0755 -t tmpfs tmpfs /dev

	    # we are on tmpfs anyway
	    mkdir /dev/shm

	    # remount pts
	    mkdir /dev/pts
	    mount -n -o mode=0620,gid=5 -t devpts devpts /dev/pts
	fi

	# if distro hasn't already done part of this ... load core,
	# and mount usbfs 
	modprobe -q usbcore >/dev/null 2>&1
	if [ -d /proc/bus/usb ]; then
	  # if it's not mounted, try to mount it
	  if [ -z "`grep " /proc/bus/usb " /proc/mounts`" ]; then
	    if grep -q -E "^[^#][^[:space:]]+[[:space:]]+/proc/bus/usb/?[[:space:]]" /etc/fstab; then
	      mount /proc/bus/usb
	    else
	      if grep -q usbfs /proc/filesystems; then
		mount -t usbfs usbfs /proc/bus/usb
	      else
		mount -t usbdevfs usbdevfs /proc/bus/usb
	      fi
	    fi
	  fi
	fi

	# populate initial /dev with the static nodes
	cp --preserve=all --recursive --remove-destination /lib/udev/devices/* /dev

	# start udevd
	/sbin/udevd --daemon	

	# trigger cold plug events
	/sbin/udevtrigger

	# Now wait for udevd to process the uevents we triggered
	/sbin/udevsettle

	# wait for the events to finish
	#sleep 2
	#loop=300
	#while test -d $udev_root/.udev/queue; do
	#  sleep 0.1;
	#  test "$loop" -gt 0 || break
	#  loop=$(($loop - 1))
	#done
}

udev_stop() {
    echo "/sbin/hotplug" > /proc/sys/kernel/hotplug
    killall udevd 
}

case "$1" in
    start)
	echo "Starting udevd "
	udev_start;
	;;
    stop)
        echo "Stopping udevd"
	udev_stop;
	;;
    restart)
	echo "Restarting udevd"
	udev_stop;
	sleep 5
	udev_start;
	;;
    reload)
	echo "Reloading udev rules"
	udevcontrol reload_rules
	cp --preserve=all --recursive --update /lib/udev/devices/* /dev
	;;
    *)
	echo "Usage: $0 {start|stop|restart|reload}"
	exit 1
	;;
esac
