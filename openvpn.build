#!/bin/bash
#
. build_funcs

TARNAME=openvpn
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/new/o
#TAR_EXT=.tar.gz
VERSION=2.1.1
VERSIONEXTRA=
BUILD=1

WEBPAGE="http://openvpn.net/"

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 #patch -p1 < ${CWD}/
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

PKGCFLAGS="-O2 -march=i686 ${CPUOPT}=i686"

if [ ${DO_CONFIGURE} == "yes" ]
then
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --localstatedir=/var/lib \
	    --mandir=/usr/man \
	    --enable-password-save \
	    --enable-iproute2

#cmake -DCMAKE_C_FLAGS:STRING="${SLKCFLAGS}" \
#      -DCMAKE_CXX_FLAGS:STRING="${SLKCFLAGS}" \
#      -DCMAKE_BUILD_TYPE=Release \
#      -DCMAKE_INSTALL_PREFIX=/usr \
#      -DMAN_INSTALL_DIR=/usr/man \
#      -DSYSCONF_INSTALL_DIR=/etc \
#      .

fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} || exit
make -C plugin/down-root ${NUM_JOBS} || exit
make -C plugin/auth-pam ${NUM_JOBS} || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

make install DESTDIR=${PKG}

mkdir -p ${PKG}/etc/rc.d
cp -a ${CWD}/openvpn.init ${PKG}/etc/rc.d/rc.openvpn.new
doinst_config etc/rc.d/rc.openvpn.new

# Install a reasonably generic sample config file:
mkdir -p ${PKG}/etc/openvpn/{certs,keys}
cp -a ${CWD}/openvpn.conf.sample ${PKG}/etc/openvpn/openvpn.conf.sample
chmod 644 ${PKG}/etc/openvpn/openvpn.conf.sample

mkdir -p ${PKG}/usr/share/openvpn/plugin/lib
for pi in auth-pam down-root
do
  cp plugin/${pi}/README ${PKG}/usr/doc/${TARNAME}-${VERSION}/README.${pi}
  if [ -e plugin/${pi}/openvpn-${pi}.so ]; then
    cp plugin/${pi}/openvpn-${pi}.so ${PKG}/usr/share/openvpn/plugin/lib/openvpn-${pi}.so
  fi
done

cp plugin/README ${PKG}/usr/doc/${TARNAME}-${VERSION}/README.plugins

cat >> ${PKG}/install/doinst.sh << EOF
if [ ! -e etc/rc.d/rc.local ]; then
        echo "#!/bin/sh" > etc/rc.d/rc.local
        chmod 755 etc/rc.d/rc.local
fi
if [ ! -e etc/rc.d/rc.local_shutdown ]; then
        echo "#!/bin/sh" > etc/rc.d/rc.local_shutdown
        chmod 755 etc/rc.d/rc.local_shutdown
fi
run=\`grep "/etc/rc.d/rc.openvpn" etc/rc.d/rc.local\`
if [[ "\${run}" == "" ]]; then
        echo "" >> etc/rc.d/rc.local
        echo "# start openvpn" >> etc/rc.d/rc.local
        echo "if [ -x /etc/rc.d/rc.openvpn ]; then" >> etc/rc.d/rc.local
        echo "  /etc/rc.d/rc.openvpn start" >> etc/rc.d/rc.local
        echo "fi" >> etc/rc.d/rc.local

        echo "" >> etc/rc.d/rc.local_shutdown
        echo "# stop openvpn" >> etc/rc.d/rc.local_shutdown
        echo "if [ -x /etc/rc.d/rc.openvpn ]; then" >> etc/rc.d/rc.local_shutdown
        echo "  /etc/rc.d/rc.openvpn stop" >> etc/rc.d/rc.local_shutdown
        echo "fi" >> etc/rc.d/rc.local_shutdown
fi
EOF


strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  contrib easy-rsa management sample-* \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "OpenVPN is a robust and highly flexible VPN daemon"
OpenVPN is a full-featured SSL VPN which can accomodate a wide range
of configurations, including remote access, site-to-site VPNs, WiFi
security, and enterprise-scale remote access with load balancing,
failover, and fine-grained access-controls.

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
chown root:nobody etc/openvpn/{certs,keys}; \
chmod 750 etc/openvpn/{certs,keys}; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
