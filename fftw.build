#!/bin/bash
#
. build_funcs

TARNAME=fftw
TARNAMEEXTRA=
TARDIR=~/tmp/new/f
#TAR_EXT=.tar.gz
VERSION=3.2.2
VERSIONEXTRA=
BUILD=2

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}-${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 #patch -p1 < ${CWD}/
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

if [ ${DO_CONFIGURE} == "yes" ]
then
true
fi

if [ ${DO_MAKE} == "yes" ]
then
true
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi


make clean

./configure --prefix=/usr \
            --sysconfdir=/etc \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --localstatedir=/var/lib \
            --enable-shared \
	    --enable-threads \
            --enable-sse2

make ${NUM_JOBS} || exit

make install DESTDIR=${PKG}

# now make a single precision version
make clean

./configure --prefix=/usr \
            --sysconfdir=/etc \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --localstatedir=/var/lib \
            --enable-shared \
	    --enable-threads \
            --enable-sse \
	    --enable-float

make ${NUM_JOBS} || exit

make install DESTDIR=${PKG}

# now make a long double precision version
make clean

./configure --prefix=/usr \
            --sysconfdir=/etc \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --localstatedir=/var/lib \
            --enable-shared \
	    --enable-threads \
	    --enable-long-double

make ${NUM_JOBS} || exit

make install DESTDIR=${PKG}

strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS CONVENTIONS COPYING* COPYRIGHT INSTALL NEWS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

cp -a doc/html ${PKG}/usr/doc/${PKGNAME}-${VERSION}
cp -a doc/FAQ/fftw-faq.html ${PKG}/usr/doc/${PKGNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "Fast Fourier Transform library"
FFTW is a free collection of fast C routines for computing the
Discrete Fourier Transform in one or more dimensions.  It includes
complex, real, symmetric, and parallel transforms, and can handle
arbitrary array sizes efficiently.  FFTW is typically faster than
other publically-available FFT implementations, and is even
competitive with vendor-tuned libraries.  (See our web page for
extensive benchmarks.)  To achieve this performance, FFTW uses novel
code-generation and runtime self-optimization techniques (along with
many other tricks).

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
