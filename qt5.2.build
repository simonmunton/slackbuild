#!/bin/bash
#
. build_funcs

#TARNAME=qt-everywhere-opensource-src
TARNAME=qt-everywhere-src
#TARNAME=qt
TARNAMEEXTRA=
TARDIR=~/tmp/new/q
#TAR_EXT=.tar.gz
VERSION=5.15.2
VERSIONEXTRA=
BUILD=6

#TAR_PROG=
#TAR_OPTS=
PKGNAME=qt5
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}-${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}
PKG1=/tmp/package-${PKGNAME}-debug

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv qt-kde-qt ${TARNAME}-${VERSION}
(cd ${TARNAME}-${VERSION}
# patch -p1 < ${CWD}/qt-everywhere-opensource-src-5.9.5.diff

 # set correct X11 prefix
# perl -pi -e "s,QMAKE_LIBDIR_X11.*,QMAKE_LIBDIR_X11\t=," mkspecs/*/*.conf
# perl -pi -e "s,QMAKE_INCDIR_X11.*,QMAKE_INCDIR_X11\t=," mkspecs/*/*.conf
# perl -pi -e "s,QMAKE_INCDIR_OPENGL.*,QMAKE_INCDIR_OPENGL\t=," mkspecs/*/*.conf
# perl -pi -e "s,QMAKE_LIBDIR_OPENGL.*,QMAKE_LIBDIR_OPENGL\t=," mkspecs/*/*.conf

 patch -p1 < ${CWD}/qt5.8-mysql.diff

 patch -p1 < ${CWD}/qt5-qtwebengine-everywhere-src-5.15.2-#1904652.patch

 patch -p1 < ${CWD}/qt5-pnm.diff

if echo "${ARCH}" | grep -q "i.86" 2>/dev/null; then
  sed -i "/^QMAKE_CFLAGS_RELEASE/ s|+=.*|+= ${SLKCFLAGS}|" qtbase/mkspecs/common/gcc-base.conf
fi
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

PRGNAM=qt5

if [ ${DO_CONFIGURE} == "yes" ]
then
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
OPENSOURCE_CXXFLAGS="${SLKCFLAGS}" \
./configure -v \
	    -confirm-license \
	    -opensource \
	    -prefix /usr \
	    -libdir /usr/lib${LIBDIRSUFFIX} \
	    -bindir /usr/lib${LIBDIRSUFFIX}/qt5/bin \
	    -sysconfdir /etc/xdg \
	    -headerdir /usr/include/qt5 \
	    -datadir /usr/share/qt5 \
	    -archdatadir /usr/lib${LIBDIRSUFFIX}/qt5 \
	    -docdir /usr/doc/qt5-${VERSION} \
	    -examplesdir /usr/doc/qt5-${VERSION}/examples \
	    -proprietary-codecs \
            -system-libpng \
            -system-libjpeg \
            -system-zlib \
	    -system-pcre \
	    -system-sqlite \
            -plugin-sql-mysql \
            -plugin-sql-odbc \
            -plugin-sql-sqlite \
	    -accessibility \
	    -dbus \
	    -alsa \
	    -glib \
	    -icu \
	    -opengl \
	    -openssl-linked \
	    -optimized-qmake \
	    -qpa "xcb;wayland" \
	    -system-harfbuzz \
	    -verbose \
	    -xcb \
	    -nomake examples \
	    -nomake tests \
	    -no-mimetype-database \
	    -webengine-proprietary-codecs \
	    -webengine-ffmpeg \
	    -no-pch \
	    -no-rpath \
	    -no-strip \
	    -force-debug-info \
	    -separate-debug-info \
	    -release \
	    -no-warnings-are-errors \
	    -libproxy \
	    -reduce-relocations \
	    2>&1 | tee _Build_config.log


#	    -sctp \
#	    -syslog \

#	    -javascript-jit \
#            -plugin-sql-psql \

#            -I /usr/include/mysql -L/usr/lib/mysql -R/usr/lib/mysql \
#            -no-g++-exceptions \
#           -release \
fi

NUM_JOBS="-j 4"

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

make install INSTALL_ROOT=${PKG}


# Fix internal linking for Qt5WebEngineCore.pc ,
# thanks to Larry Hajali's SBo script:
sed -i \
  -e 's|-Wl,--start-group.* -Wl,--end-group||' \
  -e "s|-L${CWD}/qtwebengine/src/core/api/Release||" \
  ${PKG}/usr/lib${LIBDIRSUFFIX}/pkgconfig/Qt5WebEngineCore.pc

# Fix the path in prl files:
find "${PKG}/usr/lib${LIBDIRSUFFIX}" -type f -name '*.prl' \
  -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d;s/\(QMAKE_PRL_LIBS =\).*/\1/' {} \;

# Fix the qmake path in pri file:
#sed -i "s,${QTDIR}/qtbase,/usr/lib${LIBDIRSUFFIX}/qt5," \
#  ${PKG}/usr/lib${LIBDIRSUFFIX}/qt5/mkspecs/modules/qt_lib_bootstrap_private.pri

# Install symlinks to the Qt5 binaries in the $PATH:
mkdir -p ${PKG}/usr/bin
for FILE in ${PKG}/usr/lib${LIBDIRSUFFIX}/qt5/bin/* ; do
  ln -s ../lib${LIBDIRSUFFIX}/qt5/bin/$(basename $FILE) ${PKG}/usr/bin/$(basename $FILE)-qt5
done

# Set the QT5DIR variable in the environment:
mkdir -p ${PKG}/etc/profile.d
sed -e "s,@LIBDIRSUFFIX@,${LIBDIRSUFFIX},g" $CWD/${PKGNAME}.sh \
  > ${PKG}/etc/profile.d/${PKGNAME}.sh
sed -e "s,@LIBDIRSUFFIX@,${LIBDIRSUFFIX},g" $CWD/${PKGNAME}.csh \
  > ${PKG}/etc/profile.d/${PKGNAME}.csh
chmod 0755 ${PKG}/etc/profile.d/*

# Add menu entries for all those hidden but great Qt applications:
# Qt5 logo:
mkdir -p ${PKG}/usr/share/icons/hicolor/48x48/apps
convert qtdoc/doc/src/images/qt-logo.png  -resize 48x48 ${PKG}/usr/share/icons/hicolor/48x48/apps/qt5-logo.png
# Assistant icons
install -p -m644 -D qttools/src/assistant/assistant/images/assistant.png ${PKG}/usr/share/icons/hicolor/32x32/apps/qt5-assistant.png
install -p -m644 -D qttools/src/assistant/assistant/images/assistant-128.png ${PKG}/usr/share/icons/hicolor/128x128/apps/qt5-assistant.png
# Designer icon
install -p -m644 -D qttools/src/designer/src/designer/images/designer.png ${PKG}/usr/share/icons/hicolor/128x128/apps/qt5-designer.png
# QDbusViewer icons
install -p -m644 qttools/src/qdbus/qdbusviewer/images/qdbusviewer.png ${PKG}/usr/share/icons/hicolor/32x32/apps/qt5-qdbusviewer.png
install -p -m644 qttools/src/qdbus/qdbusviewer/images/qdbusviewer-128.png ${PKG}/usr/share/icons/hicolor/128x128/apps/qt5-qdbusviewer.png
# Linguist icons
for icon in qttools/src/linguist/linguist/images/icons/linguist-*-32.png ; do
  size=$(echo $(basename ${icon}) | cut -d- -f2)
  install -p -m644 -D ${icon} ${PKG}/usr/share/icons/hicolor/${size}x${size}/apps/qt5-linguist.png
done

# And the .desktop files too:
mkdir -p ${PKG}/usr/share/applications
cat <<EOF > ${PKG}/usr/share/applications/qt5-designer.desktop
[Desktop Entry]
Name=Qt5 Designer
GenericName=Interface Designer
Comment=Design GUIs for Qt5 applications
Exec=designer-qt5
Icon=qt5-designer
MimeType=application/x-designer;
Terminal=false
Encoding=UTF-8
Type=Application
Categories=Qt;Development;
EOF
cat <<EOF > ${PKG}/usr/share/applications/qt5-assistant.desktop
[Desktop Entry]
Name=Qt5 Assistant 
Comment=Shows Qt5 documentation and examples
Exec=assistant-qt5
Icon=qt5-assistant
Terminal=false
Encoding=UTF-8
Type=Application
Categories=Qt;Development;Documentation;
EOF
cat <<EOF > ${PKG}/usr/share/applications/qt5-linguist.desktop
[Desktop Entry]
Name=Qt5 Linguist 
Comment=Add translations to Qt5 applications
Exec=linguist-qt5
Icon=qt5-linguist
MimeType=text/vnd.trolltech.linguist;application/x-linguist;
Terminal=false
Encoding=UTF-8
Type=Application
Categories=Qt;Development;
EOF
cat <<EOF > ${PKG}/usr/share/applications/qt5-qdbusviewer.desktop
[Desktop Entry]
Name=Qt5 QDbusViewer 
GenericName=Qt5 D-Bus Debugger
Comment=Debug D-Bus applications
Exec=qdbusviewer-qt5
Icon=qt5-qdbusviewer
Terminal=false
Type=Application
Categories=Qt;Development;Debugger;
EOF

























#ln -s ${PRGNAM} ${PKG}/usr/lib${LIBDIRSUFFIX}/qt-${VERSION}

# Put a ton of links to more "normal" places.  I'd just use a prefix of /usr, but it
# creates a ton of new (and ambiguously named) /usr directories...
#mkdir -p ${PKG}/usr/bin
#for BIN in ${PKG}/usr/lib${LIBDIRSUFFIX}/${PRGNAM}/bin/*; do
#  TMP_FILE=$(echo ${BIN} | sed -e "s|${PKG}||")
#  case $(basename ${BIN}) in
#    syncqt.pl)
#      ln -s ${TMP_FILE} ${PKG}/usr/bin/$(basename ${BIN})
#      ;;
#    *)
#      ln -s ${TMP_FILE} ${PKG}/usr/bin/$(basename ${BIN})-${PRGNAM}
#      ;;
#  esac
#done

#cat << EOF > ${PKG}/usr/lib${LIBDIRSUFFIX}/${PRGNAM}/bin/qt.conf
#[Paths]
#Prefix = /usr/lib${LIBDIRSUFFIX}/${PRGNAM}
#Plugins = /usr/lib${LIBDIRSUFFIX}/${PRGNAM}/plugins
#Headers = /usr/lib${LIBDIRSUFFIX}/${PRGNAM}/include
#Libraries = /usr/lib${LIBDIRSUFFIX}/${PRGNAM}/lib
#LibraryExecutables = /usr/lib${LIBDIRSUFFIX}/${PRGNAM}/libexec
#Binaries = /usr/lib${LIBDIRSUFFIX}/${PRGNAM}/bin
#Imports = /usr/lib${LIBDIRSUFFIX}/${PRGNAM}/imports
#Qml2Imports = /usr/lib${LIBDIRSUFFIX}/${PRGNAM}/qml
#ArchData = /usr/lib${LIBDIRSUFFIX}/${PRGNAM}
#EOF

#ln -s /usr/lib${LIBDIRSUFFIX}/${PRGNAM}/bin/qt.conf ${PKG}/usr/bin/qt.conf

#ln -s qt5/qml ${PKG}/usr/lib${LIBDIRSUFFIX}/qml

#for LIBS in ${PKG}/usr/lib${LIBDIRSUFFIX}/${PRGNAM}/lib/*so*; do
#  TMP_FILE=$(echo ${LIBS} | sed -e "s|${PKG}||")
#  ln -s ${TMP_FILE} ${PKG}/usr/lib${LIBDIRSUFFIX}/$(basename ${LIBS})
#done

# Add profile scripts
#mkdir -p ${PKG}/etc/profile.d
#sed -e "s|@LIBDIRSUFFIX@|${LIBDIRSUFFIX}|g" ${CWD}/${PRGNAM}.sh > ${PKG}/etc/profile.d/${PRGNAM}.sh
#sed -e "s#usr/lib/#usr/lib${LIBDIRSUFFIX}/#g" ${CWD}/${PRGNAM}.csh > ${PKG}/etc/profile.d/${PRGNAM}.csh
#chmod 755 ${PKG}/etc/profile.d/*

#cat > ${PKG}/usr/lib${LIBDIRSUFFIX}/${PRGNAM}/lib/pkgconfig/Qt5.pc << EOF
#prefix=/usr/lib${LIBDIRSUFFIX}/${PRGNAM}
#bindir=\${prefix}/bin
#datadir=\${prefix}
#docdir=/usr/doc/${PRGNAM}-${VERSION}
#archdatadir=\${prefix}
#examplesdir=\${prefix}/examples
#headerdir=\${prefix}/include
#importdir=\${prefix}/imports
#qmldir=\${prefix}/qml
#libdir=\${prefix}/lib
#libexec=\${prefix}/libexec
#moc=\${bindir}/moc
#plugindir=\${prefix}/plugins
#qmake=\${bindir}/qmake
#sysconfdir=/etc/xdg
#translationdir=\${prefix}/translations

#Name: Qt5
#Description: Qt5 Configuration
#Version: ${VERSION}
#EOF

# Fix internal linking for Qt5WebKit.pc.
#sed -i \
#  -e "s|-Wl,-whole-archive -lWebKit1 -Wl,-no-whole-archive -L${CWD}/qtwebkit/Source/WebKit[^ ]* ||" \
#  -e "s|-Wl,-whole-archive -lWebKit2 -Wl,-no-whole-archive -L${CWD}/qtwebkit/Source/WebKit2[^ ]* ||" \
#  -e "s|-Wl,-whole-archive -lWebCore -Wl,-no-whole-archive -L${CWD}/qtwebkit/Source/WebCore[^ ]* ||" \
#  -e "s|-Wl,-whole-archive -lANGLE -Wl,-no-whole-archive -L${CWD}/qtwebkit/Source/ThirdParty/ANGLE[^ ]* ||" \
#  -e "s|-Wl,-whole-archive -lJavaScriptCore -Wl,-no-whole-archive -L${CWD}/qtwebkit/Source/JavaScriptCore[^ ]* ||" \
#  -e "s|-Wl,-whole-archive -lWTF -Wl,-no-whole-archive -L${CWD}/qtwebkit/Source/WTF[^ ]* ||" \
#  ${PKG}/usr/lib${LIBDIRSUFFIX}/${PRGNAM}/lib/pkgconfig/Qt5WebKit.pc

# While we are at it, there isn't any reason to keep references to ${PKG} in the *.prl files.
#for PRL in ${PKG}/usr/lib${LIBDIRSUFFIX}/${PRGNAM}/lib/*.prl; do
#  sed -i '/^QMAKE_PRL_BUILD_DIR/d' ${PRL}
#done

# One more for the road.
#sed -i "s|${CWD}/qtbase|/usr/lib${LIBDIRSUFFIX}/${PRGNAM}|" \
#  ${PKG}/usr/lib${LIBDIRSUFFIX}/${PRGNAM}/mkspecs/modules/qt_lib_bootstrap_private.pri

#mkdir -p ${PKG}/usr/lib${LIBDIRSUFFIX}/pkgconfig
#for PKGCONFIG in ${PKG}/usr/lib${LIBDIRSUFFIX}/${PRGNAM}/lib/pkgconfig/*.pc; do
#  sed -i -e "s@-L${CWD}[^ ]* *@@g; s@${CWD}[^ ]*[.]a *@@g" ${PKGCONFIG}

#  TMP_FILE=$(echo ${PKGCONFIG} | sed -e "s|${PKG}||")
#  ln -s ${TMP_FILE} ${PKG}/usr/lib${LIBDIRSUFFIX}/pkgconfig/$(basename ${PKGCONFIG})
#done

#mkdir -p ${PKG}/usr/lib${LIBDIRSUFFIX}/cmake
#for CMAKE in $(find ${PKG}/usr/lib${LIBDIRSUFFIX}/${PRGNAM}/lib/cmake -maxdepth 1); do
#  TMP_FILE=$(echo ${CMAKE} | sed -e "s|${PKG}||")
#  ln -s ${TMP_FILE} ${PKG}/usr/lib${LIBDIRSUFFIX}/cmake/$(basename ${CMAKE})
#done

#for i in ${CWD}/${PRGNAM}-*.desktop; do
#  install -D -m 0644 ${i} ${PKG}/usr/share/applications/$(basename ${i})
#done
#sed -i "s|@LIBDIR@|${LIBDIRSUFFIX}|" ${PKG}/usr/share/applications/*

#for i in $(find . -name "assistant.ico" -o -name "designer.ico" \
#  -o -name "linguist.ico" -o -name "qdbusviewer.ico"); do
#  for j in 16 24 32 48 64 96 128; do
#    convert ${i} -resize ${j}x${j}! $(basename ${i})-${j}.png
#    install -D -m 0644 $(basename ${i})-${j}-0.png \
#      ${PKG}/usr/share/icons/hicolor/${j}x${j}/apps/$(basename ${i} | sed 's|.ico||')-${PRGNAM}.png
#  done
#done

# Remove executable bits from files.
find ${PKG} \( -name "*.qml" -o -name "*.app" \) -perm 755 -exec chmod 644 '{}' \;


# make a debug package for webkit if not there
if [ -e ${PKG}/usr/lib${LIBDIRSUFFIX}/${PRGNAM}/lib/libQtWebKit.so ]
then
  LQTWK=`readlink ${PKG}/usr/lib${LIBDIRSUFFIX}/${PRGNAM}/lib/libQtWebKit.so`
  if [ ! -e ${PKG}/usr/lib${LIBDIRSUFFIX}/${PRGNAM}/lib/${LQTWK}.debug ]
  then
    objcopy --only-keep-debug lib/${LQTWK} ${PKG}/usr/lib${LIBDIRSUFFIX}/${PRGNAM}/lib/${LQTWK}.debug
    (cd ${PKG}/usr/lib${LIBDIRSUFFIX}/${PRGNAM}/lib
      objcopy --add-gnu-debuglink=${LQTWK}.debug ${LQTWK}
    )
    chmod -x ${PKG}/usr/lib${LIBDIRSUFFIX}/${PRGNAM}/lib/${LQTWK}.debug
  fi
fi

# split out the debug stuff
rm -rf ${PKG1}
mkdir -p ${PKG1}
(cd ${PKG}
 for f in `find . -name "*.debug"`
 do
   mkdir -p ${PKG1}/`dirname ${f}`
   mv ${f} ${PKG1}/`dirname ${f}`
 done
)

#strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  GPL_EXCEPTION.TXT GPL_EXCEPTION_ADDENDUM.TXT INSTALL LICENSE.GPL \
  LICENSE.QPL OPENSOURCE-NOTICE.TXT changes-${VERSION} \
  README qtbase/{header*,LGPL_EXCEPTION.txt,LICENSE.*L} \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

( cd ${PKG}/usr/doc/${TARNAME}-${VERSION}
  ln -sf /usr/lib${LIBDIRSUFFIX}/${PRGNAM}/doc/html .
)


fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "a multi-platform C++ graphical user interface toolkit"
Qt is a complete and well-developed object-oriented framework for
developing graphical user interface (GUI) applications using C++.

This release is free only for development of free software for the X
Window System.  If you use Qt for developing commercial or other
non-free software, you must have a professional license.  Please see
http://www.trolltech.com/purchase.html for information on how to
obtain a professional license.

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG} ${PKG1}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
cd ${PKG1}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-debug-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG} ${PKG1}"
