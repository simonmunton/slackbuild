#!/bin/bash
#
. build_funcs

TARNAME=ffmpeg
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/new/f
#TAR_EXT=.tar.gz
VERSION=4.4.1
VERSIONEXTRA=
BUILD=4

#TAR_PROG=
#TAR_OPTS=
PKGNAME=ffmpeg
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
# patch -p1 < ${CWD}/ffmpeg-3.3.4.diff
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

if [ ${ARCH} == x86_64 ]
then
  SLKCFLAGS="-O4"
else
  SLKCFLAGS="-O4 -march=pentium4 -mtune=pentium4"
fi

if [ ${DO_CONFIGURE} == "yes" ]
then

OPTIONAL_ENABLES=""

if pkg_exist "frei0r-plugins"
then
  OPTIONAL_ENABLES="$OPTIONAL_ENABLES --enable-frei0r"
else
  echo "frei0r-plugins not found"
fi

if pkg_exist "gsm"
then
  OPTIONAL_ENABLES="$OPTIONAL_ENABLES --enable-libgsm"
else
  echo "gsm not found"
fi

#if pkg_exist "libnut"
#then
#  OPTIONAL_ENABLES="$OPTIONAL_ENABLES --enable-libnut"
#else
#  echo "libnut not found"
#fi

#if pkg_exist "schroedinger"
#then
#  OPTIONAL_ENABLES="$OPTIONAL_ENABLES --enable-libschroedinger"
#else
#  echo "schroedinger not found"
#fi

if pkg_exist "x265-build" "-+([0-9])"
then
  OPTIONAL_ENABLES="$OPTIONAL_ENABLES --enable-libx265"
else
  echo "x265 not found"
fi

if pkg_exist "libwebp"
then
  OPTIONAL_ENABLES="$OPTIONAL_ENABLES --enable-libwebp"
else
  echo "libwebp not found"
fi

if pkg_exist "libdc1394"
then
  OPTIONAL_ENABLES="$OPTIONAL_ENABLES --enable-libdc1394"
else
  echo "libdc1394 not found"
fi

if pkg_exist "opencore-amr"
then
  OPTIONAL_ENABLES="$OPTIONAL_ENABLES --enable-libopencore-amrnb --enable-libopencore-amrwb"
else
  echo "amrnb not found"
fi

if pkg_exist "rtmpdump"
then
  OPTIONAL_ENABLES="$OPTIONAL_ENABLES --enable-librtmp"
else
  echo "rtmpdump not found"
fi

if pkg_exist "speex"
then
  OPTIONAL_ENABLES="$OPTIONAL_ENABLES --enable-libspeex"
else
  echo "speex not found"
fi

if pkg_exist "opus"
then
  OPTIONAL_ENABLES="$OPTIONAL_ENABLES --enable-libopus"
else
  echo "opus not found"
fi

if pkg_exist "lame"
then
  OPTIONAL_ENABLES="$OPTIONAL_ENABLES --enable-libmp3lame"
else
  echo "lame not found"
fi

if pkg_exist "x264-build" "-+([0-9])"
then
  OPTIONAL_ENABLES="$OPTIONAL_ENABLES --enable-libx264"
else
  echo "x264 not found"
fi

if pkg_exist "xvidcore"
then
  OPTIONAL_ENABLES="$OPTIONAL_ENABLES --enable-libxvid"
else
  echo "xvidcore not found"
fi

if pkg_exist "vid.stab"
then
  OPTIONAL_ENABLES="$OPTIONAL_ENABLES --enable-libvidstab"
else
  echo "vid.stab not found"
fi

if pkg_exist "tesseract-ocr"
then
  OPTIONAL_ENABLES="$OPTIONAL_ENABLES --enable-libtesseract"
else
  echo "tesseract-ocr not found"
fi

if pkg_exist "SVT-AV1"
then
  OPTIONAL_ENABLES="$OPTIONAL_ENABLES --enable-libsvtav1"
else
  echo "SVT-AV1 not found"
fi

if pkg_exist "aom"
then
  OPTIONAL_ENABLES="$OPTIONAL_ENABLES --enable-libaom"
else
  echo "aom not found"
fi


CFLAGS="${SLKCFLAGS} -I/usr/include/gsm" \
CXXFLAGS="${SLKCFLAGS}" \
./configure --prefix=/usr \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --shlibdir=/usr/lib${LIBDIRSUFFIX} \
            --enable-libvorbis \
            --enable-libtheora \
            --enable-gpl \
            --enable-version3 \
            --enable-avresample \
            --enable-libvpx \
            --enable-shared \
            --enable-postproc \
            --enable-avfilter \
            --enable-libopenjpeg \
            --enable-libvpx \
            --enable-libfontconfig \
            --enable-libfreetype \
            --enable-libfribidi \
            --enable-nonfree \
            --enable-openssl \
            $OPTIONAL_ENABLES \
            --extra-ldflags="-lssl -lcrypto -lz"


#            --enable-libfaac \

#	    --enable-libdcadec \
#	    --enable-libdirac \
#	    --enable-avfilter-lavf \
#            --enable-libfaad \
#	    --enable-swscale \
#            --enable-liba52 \
#            --enable-pp \
#            --enable-libogg \
#            --enable-dc1394 \
#           --enable-swscaler \
#           --enable-libdts \
#           --enable-pthreads \
#           --enable-amr_nb-fixed \
#
#
fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} || exit
pushd doc
# make || exit
popd
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

mkdir -p ${PKG}/usr/lib${LIBDIRSUFFIX}

make install DESTDIR=${PKG}
# prefix=${PKG}/usr bindir=${PKG}/usr/bin mandir=${PKG}/usr/man

#cp version.h ${PKG}/usr/include/ffmpeg

# links for compatability
#mkdir -p ${PKG}/usr/include/ffmpeg ${PKG}/usr/include/postproc
#(cd ${PKG}/usr/include/ffmpeg
# ln -sf ../libavcodec/* .
# ln -sf ../libavdevice/* .
# ln -sf ../libavfilter/* .
# ln -sf ../libavformat/* .
# ln -sf ../libavutil/* .
# ln -sf ../libswscale/* .
# cd ../postproc
# ln -sf ../libpostproc/* .
#)

#strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  COPYING CREDITS INSTALL README* doc/TODO doc/*html doc/*conf \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "fast video and audio converter"
FFmpeg is a very fast video and audio converter. It can also grab
from a live audio/video source.

The command line interface is designed to be intuitive, in the sense
that FFmpeg tries to figure out all parameters that can possibly be
derived automatically. You usually only have to specify the target
bitrate you want.

FFmpeg can also convert from any sample rate to any other, and resize
video on the fly with a high quality polyphase filter.

EOF

post_install

cd ${PKG}
su -c "chown -R root:root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}:${GROUP} ${PKG}"
