#!/bin/bash
#
. build_funcs

TARNAME=qdbm
TARNAMEEXTRA=
TARDIR=~/tmp/new/q
#TAR_EXT=.tar.gz
VERSION=1.8.75
VERSIONEXTRA=
BUILD=3

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}-${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 #patch -p1 < ${CWD}/

## - remove rpath
for f in `find . -name Makefile.in` ; do
    sed -i.rpath -e '/^LDENV/d' $f
done

## - fix pc file to hide header files
sed -i.misc \
     -e '/^Libs/s|@LIBS@||' \
     -e '/Cflags/s|^\(.*\)|\1 -I\${includedir}/qdbm|' \
     qdbm.pc.in

)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

if [ ${DO_CONFIGURE} == "yes" ]
then
CFLAGS="-O2 -march=i486 ${CPUOPT}=i686" \
CXXFLAGS="-O2 -march=i486 ${CPUOPT}=i686" \
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --localstatedir=/var/lib \
            --enable-pthread \
            --enable-zlib \
            --enable-lzo \
            --enable-bzip \
            --enable-iconv

# c++ api
(cd plus
 ./configure --prefix=/usr \
            --sysconfdir=/etc \
            --localstatedir=/var/lib
)
# cgi scripts
(cd cgi
 ./configure --prefix=/usr \
            --sysconfdir=/etc \
            --localstatedir=/var/lib
)
#ruby api
(cd ruby
 ./configure --prefix=/usr \
            --sysconfdir=/etc \
            --localstatedir=/var/lib
)
#perl api
(cd perl
 ./configure --prefix=/usr \
            --sysconfdir=/etc \
            --localstatedir=/var/lib
)
#java api
(cd java
 ./configure --prefix=/usr \
            --sysconfdir=/etc \
            --localstatedir=/var/lib \
            --with-gcj
)

fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} || exit
# c++ api
(cd plus
 make ${NUM_JOBS} || exit
)
# cgi scripts
(cd cgi
 make ${NUM_JOBS} || exit
)
#ruby api
(cd ruby
 make ${NUM_JOBS} || exit
)
#perl api
(cd perl
 make ${NUM_JOBS} LDDLFLAGS="-shared" LD_RUN_PATH="/lib:/usr/lib" INSTALLDIRS=vendor || exit
)
#java api
(cd java
 make ${NUM_JOBS} || exit
)
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

make install DESTDIR=${PKG}

# c++ api
(cd plus
 make install DESTDIR=${PKG} || exit
)

# cgi scripts
(cd cgi
 make install DESTDIR=${PKG} || exit
)

#ruby api
(cd ruby
 make install DESTDIR=${PKG} || exit
)

#perl api
(cd perl
 make install DESTDIR=${PKG} || exit

 find ${PKG}/usr/lib/perl5 -name \*.bs -or -name .packlist | xargs rm -f
 find ${PKG}/usr/lib/perl5 -name \*.so | xargs chmod 0755
)

#java api
(cd java
 make install DESTDIR=${PKG} || exit
)

## hide header files to name specific directory
(cd ${PKG}/usr/include
 for f in *.h ; do
    for g in *.h ; do
        eval sed -i -e \'s\|include \<$g\>\|include \"$g\"\|\' $f
    done
 done

 mkdir qdbm
 mv *.h qdbm/
)

mv ${PKG}/usr/share/qdbm/* ${PKG}/usr/doc/${TARNAME}-${VERSION}
rmdir -p ${PKG}/usr/share/qdbm

#strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

mkdir -p ${PKG}/install
cat <<EOF > ${PKG}/install/slack-desc
# HOW TO EDIT THIS FILE:
# The "handy ruler" below makes it easier to edit a package description.  Line
# up the first '|' above the ':' following the base package name, and the '|'
# on the right side marks the last column you can put a character in.  You must
# make exactly 11 lines for the formatting to be correct.  It's also
# customary to leave one space after the ':'.

          |-----handy-ruler------------------------------------------------------|
${PKGNAME}: ${PKGNAME} ${VERSION}
${PKGNAME}:
${PKGNAME}: QDBM is an embedded database library compatible with GDBM and
${PKGNAME}: NDBM. It features hash database and B+ tree database and is
${PKGNAME}: developed referring to GDBM for the purpose of the following three
${PKGNAME}: points: higher processing speed, smaller size of a database file,
${PKGNAME}: and simpler API.
${PKGNAME}:
${PKGNAME}:
${PKGNAME}:
${PKGNAME}:
EOF

post_install

cd ${PKG}
su -c "chown -R root.root *; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
