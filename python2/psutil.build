#!/bin/bash
#
. build_funcs

TARNAME=psutil
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/new/p
#TAR_EXT=.tar.gz
VERSION=2.1.1
VERSIONEXTRA=
BUILD=1

WEBPAGE="https://pypi.python.org/pypi/psutil"

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 #patch -p1 < ${CWD}/
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

PKGCFLAGS="-O2 -march=i686 ${CPUOPT}=i686"

if [ ${DO_CONFIGURE} == "yes" ]
then
:
#CFLAGS="${SLKCFLAGS}" \
#CXXFLAGS="${SLKCFLAGS}" \
#./configure --prefix=/usr \
#            --sysconfdir=/etc \
#            --libdir=/usr/lib${LIBDIRSUFFIX} \
#            --localstatedir=/var/lib \
#	    --mandir=/usr/man

#cmake -DCMAKE_C_FLAGS:STRING="${SLKCFLAGS}" \
#      -DCMAKE_CXX_FLAGS:STRING="${SLKCFLAGS}" \
#      -DCMAKE_BUILD_TYPE=Release \
#      -DCMAKE_INSTALL_PREFIX=/usr \
#      -DMAN_INSTALL_DIR=/usr/man \
#      -DSYSCONF_INSTALL_DIR=/etc \
#      .

fi

if [ ${DO_MAKE} == "yes" ]
then
#make ${NUM_JOBS} || exit
python setup.py build || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

#make install DESTDIR=${PKG}
python setup.py install --root=${PKG}

strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "psutil is a python library for retrieving information on running processes and system utilization"
psutil (python system and process utilities) is a cross-platform 
library for retrieving information on running processes and system 
utilization (CPU, memory, disks, network) in Python. It is useful 
mainly for system monitoring, profiling and limiting process resources 
and management of running processes. It implements many functionalities 
offered by command line tools such as: ps, top, lsof, netstat, ifconfig, 
who, df, kill, free, nice, ionice, iostat, iotop, uptime, pidof, tty, 
taskset, pmap. It currently supports Linux, Windows, OSX, FreeBSD and 
Sun Solaris, both 32-bit and 64-bit architectures, with Python 
versions from 2.4 to 3.4. Pypi is also known to work.

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
