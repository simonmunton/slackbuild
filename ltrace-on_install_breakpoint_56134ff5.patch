From 56134ff5442bee4e128b189bb86cfc97dcb6f60a Mon Sep 17 00:00:00 2001
From: Petr Machata <pmachata@redhat.com>
Date: Fri, 10 Jan 2014 20:05:15 +0100
Subject: Add a new per-breakpoint callback on_install

---
 breakpoint.h  |    9 ++++++++-
 breakpoints.c |   11 ++++++++++-
 2 files changed, 18 insertions(+), 2 deletions(-)

Index: b/breakpoint.h
===================================================================
--- a/breakpoint.h
+++ b/breakpoint.h
@@ -1,6 +1,6 @@
 /*
  * This file is part of ltrace.
- * Copyright (C) 2012 Petr Machata, Red Hat Inc.
+ * Copyright (C) 2012,2013,2014 Petr Machata, Red Hat Inc.
  * Copyright (C) 2009 Juan Cespedes
  *
  * This program is free software; you can redistribute it and/or
@@ -48,6 +48,7 @@ struct breakpoint;
 struct bp_callbacks {
 	void (*on_hit)(struct breakpoint *bp, struct Process *proc);
 	void (*on_continue)(struct breakpoint *bp, struct Process *proc);
+	void (*on_install)(struct breakpoint *bp, struct Process *proc);
 	void (*on_retract)(struct breakpoint *bp, struct Process *proc);
 };
 
@@ -67,6 +68,12 @@ void breakpoint_on_hit(struct breakpoint
  * continue_after_breakpoint.  */
 void breakpoint_on_continue(struct breakpoint *bp, struct Process *proc);
 
+/* Call ON_INSTALL handler of BP, if any is set.  This should be
+ * called after the breakpoint is enabled for the first time, not
+ * every time it's enabled (such as after stepping over a site of a
+ * temporarily disabled breakpoint).  */
+void breakpoint_on_install(struct breakpoint *bp, struct Process *proc);
+
 /* Call on-retract handler of BP, if any is set.  This should be
  * called before the breakpoints are destroyed.  The reason for a
  * separate interface is that breakpoint_destroy has to be callable
Index: b/breakpoints.c
===================================================================
--- a/breakpoints.c
+++ b/breakpoints.c
@@ -1,6 +1,6 @@
 /*
  * This file is part of ltrace.
- * Copyright (C) 2006,2007,2011,2012 Petr Machata, Red Hat Inc.
+ * Copyright (C) 2006,2007,2011,2012,2013,2014 Petr Machata, Red Hat Inc.
  * Copyright (C) 2009 Juan Cespedes
  * Copyright (C) 1998,2001,2002,2003,2007,2008,2009 Juan Cespedes
  * Copyright (C) 2006 Ian Wienand
@@ -78,6 +78,14 @@ breakpoint_on_continue(struct breakpoint
 }
 
 void
+breakpoint_on_install(struct breakpoint *bp, struct Process *proc)
+{
+	assert(bp != NULL);
+	if (bp->cbs != NULL && bp->cbs->on_install != NULL)
+		(bp->cbs->on_install)(bp, proc);
+}
+
+void
 breakpoint_on_retract(struct breakpoint *bp, struct Process *proc)
 {
 	assert(bp != NULL);
@@ -181,6 +189,7 @@ breakpoint_turn_on(struct breakpoint *bp
 	if (bp->enabled == 1) {
 		assert(proc->pid != 0);
 		enable_breakpoint(proc, bp);
+		breakpoint_on_install(bp, proc);
 	}
 	return 0;
 }
