--- mlt-0.2.4/src/modules/avformat/configure.orig	2007-07-15 08:43:48.000000000 +0100
+++ mlt-0.2.4/src/modules/avformat/configure	2008-10-07 07:03:27.000000000 +0100
@@ -125,9 +125,10 @@
 			echo 0
 		fi
 	else 
-		if [ -d "$shared_ffmpeg/include/ffmpeg" -a -f "$shared_ffmpeg/$LIBDIR/libavformat$avformat_suffix$LIBSUF" ]
+		if [ -d "$shared_ffmpeg/include/libavformat" -a -f "$shared_ffmpeg/$LIBDIR/libavformat$avformat_suffix$LIBSUF" ]
 		then
-			echo "CFLAGS+=-I$shared_ffmpeg/include/ffmpeg " >> config.mak
+			echo "CFLAGS+=-I$shared_ffmpeg/include/libavformat " >> config.mak
+			echo "CFLAGS+=-I$shared_ffmpeg/include/libswscale " >> config.mak
 			echo "LDFLAGS+=-L$shared_ffmpeg/$LIBDIR" >> config.mak
 			[ "$swscale" != "" ] && echo "SWSCALE=1" >> config.mak
 		else
--- mlt-0.2.4/src/modules/avformat/producer_avformat.c.orig	2007-07-14 23:34:45.000000000 +0100
+++ mlt-0.2.4/src/modules/avformat/producer_avformat.c	2008-10-07 07:03:27.000000000 +0100
@@ -203,7 +203,7 @@
 			params->width = 640;
 			params->height = 480;
 			params->time_base= (AVRational){1,25};
-			params->device = file;
+			//params->device = file;
 			params->channels = 2;
 			params->sample_rate = 48000;
 		}
--- mlt-0.2.4/src/modules/avformat/consumer_avformat.c.orig	2007-07-30 20:11:49.000000000 +0100
+++ mlt-0.2.4/src/modules/avformat/consumer_avformat.c	2008-10-07 07:08:56.000000000 +0100
@@ -720,7 +720,7 @@
 	// Check for audio codec overides
 	if ( acodec != NULL )
 	{
-		AVCodec *p = first_avcodec;
+		AVCodec *p = av_codec_next (NULL);
 		while( p != NULL ) 
 		{
 			if ( !strcmp( p->name, acodec ) && p->type == CODEC_TYPE_AUDIO )
@@ -736,7 +736,7 @@
 	// Check for video codec overides
 	if ( vcodec != NULL )
 	{
-		AVCodec *p = first_avcodec;
+		AVCodec *p = av_codec_next (NULL);
 		while( p != NULL ) 
 		{
 			if ( !strcmp( p->name, vcodec ) && p->type == CODEC_TYPE_VIDEO )
--- mlt-0.2.4/src/modules/sox/configure.orig	2005-05-04 20:37:08.000000000 +0100
+++ mlt-0.2.4/src/modules/sox/configure	2008-10-07 07:03:27.000000000 +0100
@@ -6,7 +6,7 @@
 	which libst-config > /dev/null 2>&1
 	disable_sox=$?
 
-	if [ "$disable_sox" = "0" ]
+	if [ "$disable_sox" = "0" -o -e /usr/lib/libsfx.so ]
 	then
 		echo "sox		libmltsox$LIBSUF" >> ../filters.dat
 	else
--- mlt-0.2.4/src/modules/sox/filter_sox.c.orig	2007-03-31 01:29:56.000000000 +0100
+++ mlt-0.2.4/src/modules/sox/filter_sox.c	2008-10-07 21:28:35.000000000 +0100
@@ -28,7 +28,7 @@
 #include <string.h>
 #include <math.h>
 
-#include <st.h>
+#include <sox.h>
 
 #define BUFFER_LEN 8192
 #define AMPLITUDE_NORM 0.2511886431509580 /* -12dBFS */
@@ -61,7 +61,7 @@
 static int create_effect( mlt_filter this, char *value, int count, int channel, int frequency )
 {
 	mlt_tokeniser tokeniser = mlt_tokeniser_init();
-	eff_t eff = mlt_pool_alloc( sizeof( struct st_effect ) );
+	sox_effect_t *eff; // = mlt_pool_alloc( sizeof( struct sox_effect ) );
 	char id[ 256 ];
 	int error = 1;
 
@@ -69,22 +69,25 @@
 	mlt_tokeniser_parse_new( tokeniser, value, " " );
 
 	// Locate the effect
-	int opt_count = st_geteffect_opt( eff, tokeniser->count, tokeniser->tokens );
+	sox_effect_handler_t *handler = sox_find_effect (tokeniser->tokens[0]);
 	
 	// If valid effect
-	if ( opt_count != ST_EOF )
+	if ( handler != NULL )
 	{
+		//sox_create_effect (eff, handler);
+		eff = sox_create_effect (handler);
+
 		// Supply the effect parameters
-		if ( ( * eff->h->getopts )( eff, opt_count, &tokeniser->tokens[ tokeniser->count - opt_count ] ) == ST_SUCCESS )
+		if ( ( * eff->handler.getopts )( eff, tokeniser->count - 1, &tokeniser->tokens[ 1 ] ) == SOX_SUCCESS )
 		{
 			// Set the sox signal parameters
-			eff->ininfo.rate = frequency;
-			eff->outinfo.rate = frequency;
-			eff->ininfo.channels = 1;
-			eff->outinfo.channels = 1;
+			eff->in_signal.rate = frequency;
+			eff->out_signal.rate = frequency;
+			eff->in_signal.channels = 1;
+			eff->out_signal.channels = 1;
 			
 			// Start the effect
-			if ( ( * eff->h->start )( eff ) == ST_SUCCESS )
+			if ( ( * eff->handler.start )( eff ) == SOX_SUCCESS )
 			{
 				// Construct id
 				sprintf( id, "_effect_%d_%d", count, channel );
@@ -97,7 +100,7 @@
 	}
 	// Some error occurred so delete the temp effect state
 	if ( error == 1 )
-		mlt_pool_release( eff );
+		free(eff); //mlt_pool_release( eff );
 	
 	mlt_tokeniser_close( tokeniser );
 	
@@ -119,8 +122,8 @@
 	mlt_properties filter_properties = MLT_FILTER_PROPERTIES( filter );
 
 	// Get the properties
-	st_sample_t *input_buffer = mlt_properties_get_data( filter_properties, "input_buffer", NULL );
-	st_sample_t *output_buffer = mlt_properties_get_data( filter_properties, "output_buffer", NULL );
+	sox_sample_t *input_buffer = mlt_properties_get_data( filter_properties, "input_buffer", NULL );
+	sox_sample_t *output_buffer = mlt_properties_get_data( filter_properties, "output_buffer", NULL );
 	int channels_avail = *channels;
 	int i; // channel
 	int count = mlt_properties_get_int( filter_properties, "effect_count" );
@@ -177,11 +180,11 @@
 		sprintf( id, "_effect_0_%d", i );
 		
 		// Get an existing effect state
-		eff_t e = mlt_properties_get_data( filter_properties, id, NULL );
+		sox_effect_t *e = mlt_properties_get_data( filter_properties, id, NULL );
 		
 		// Validate the existing effect state
-		if ( e != NULL && ( e->ininfo.rate != *frequency || 
-							e->outinfo.rate != *frequency ) )
+		if ( e != NULL && ( e->in_signal.rate != *frequency || 
+							e->out_signal.rate != *frequency ) )
 			e = NULL;
 		
 		// (Re)Create the effect state
@@ -216,26 +219,26 @@
 		}
 		if ( *samples > 0 && count > 0 )
 		{
-			st_sample_t *p = input_buffer;
-			st_sample_t *end = p + *samples;
+			sox_sample_t *p = input_buffer;
+			sox_sample_t *end = p + *samples;
 			int16_t *q = *buffer + i;
-			st_size_t isamp = *samples;
-			st_size_t osamp = *samples;
+			sox_size_t isamp = *samples;
+			sox_size_t osamp = *samples;
 			double rms = 0;
 			int j;
 			char *normalise = mlt_properties_get( filter_properties, "normalise" );
 			double normalised_gain = 1.0;
-#if (ST_LIB_VERSION_CODE >= ST_LIB_VERSION(13,0,0))
-			st_sample_t dummy_clipped_count = 0;
+#if (SOX_LIB_VERSION_CODE >= SOX_LIB_VERSION(13,0,0))
+			sox_sample_t dummy_clipped_count = 0;
 #endif
 			
 			// Convert to sox encoding
 			while( p != end )
 			{
-#if (ST_LIB_VERSION_CODE >= ST_LIB_VERSION(13,0,0))
-				*p = ST_SIGNED_WORD_TO_SAMPLE( *q, dummy_clipped_count );
+#if (SOX_LIB_VERSION_CODE >= SOX_LIB_VERSION(13,0,0))
+				*p = SOX_SIGNED_16BIT_TO_SAMPLE( *q, dummy_clipped_count );
 #else
-				*p = ST_SIGNED_WORD_TO_SAMPLE( *q );
+				*p = SOX_SIGNED_WORD_TO_SAMPLE( *q );
 #endif
 				// Compute rms amplitude while we are accessing each sample
 				rms += ( double )*p * ( double )*p;
@@ -243,9 +246,12 @@
 				p ++;
 				q += *channels;
 			}
-			
+
+#define SOX_SSIZE_MAX 0x7fffffff
+#define SOX_SSIZE_MIN (-SOX_SSIZE_MAX - 1)
+
 			// Compute final rms amplitude
-			rms = sqrt( rms / *samples / ST_SSIZE_MIN / ST_SSIZE_MIN );
+			rms = sqrt( rms / *samples / SOX_SSIZE_MIN / SOX_SSIZE_MIN );
 			
 			if ( normalise )
 			{
@@ -295,7 +301,7 @@
 					float saved_gain = 1.0;
 					
 					// XXX: hack to apply the normalised gain level to the vol effect
-					if ( normalise && strcmp( e->name, "vol" ) == 0 )
+					if ( normalise && strcmp( e->handler.name, "vol" ) == 0 )
 					{
 						float *f = ( float * )( e->priv );
 						saved_gain = *f;
@@ -303,7 +309,7 @@
 					}
 					
 					// Apply the effect
-					if ( ( * e->h->flow )( e, input_buffer, output_buffer, &isamp, &osamp ) == ST_SUCCESS )
+					if ( ( * e->handler.flow )( e, input_buffer, output_buffer, &isamp, &osamp ) == SOX_SUCCESS )
 					{
 						// Swap input and output buffer pointers for subsequent effects
 						p = input_buffer;
@@ -312,7 +318,7 @@
 					}
 					
 					// XXX: hack to restore the original vol gain to prevent accumulation
-					if ( normalise && strcmp( e->name, "vol" ) == 0 )
+					if ( normalise && strcmp( e->handler.name, "vol" ) == 0 )
 					{
 						float *f = ( float * )( e->priv );
 						*f = saved_gain;
@@ -326,10 +332,10 @@
 			end = p + *samples;
 			while ( p != end )
 			{
-#if (ST_LIB_VERSION_CODE >= ST_LIB_VERSION(13,0,0))
-				*q = ST_SAMPLE_TO_SIGNED_WORD( *p ++, dummy_clipped_count );
+#if (SOX_LIB_VERSION_CODE >= SOX_LIB_VERSION(13,0,0))
+				*q = SOX_SAMPLE_TO_SIGNED_16BIT( *p ++, dummy_clipped_count );
 #else
-				*q = ST_SAMPLE_TO_SIGNED_WORD( *p ++ );
+				*q = SOX_SAMPLE_TO_SIGNED_WORD( *p ++ );
 #endif
 				q += *channels;
 			}
--- mlt-0.2.4/src/modules/sox/Makefile.orig	2005-12-05 11:35:55.000000000 +0000
+++ mlt-0.2.4/src/modules/sox/Makefile	2008-10-07 07:03:27.000000000 +0100
@@ -5,8 +5,8 @@
 OBJS = factory.o \
 	   filter_sox.o 
 
-CFLAGS += `libst-config --cflags` -I../../ 
-LDFLAGS += -lst `libst-config --libs`
+CFLAGS += -I../../ 
+LDFLAGS += -lsfx
 LDFLAGS += -L../../framework -lmlt
 
 SRCS := $(OBJS:.o=.c)
