--- YafaRay-0.1.1/src/backgrounds/SConscript.orig	2009-04-30 21:03:31.000000000 +0100
+++ YafaRay-0.1.1/src/backgrounds/SConscript	2011-04-16 21:56:02.000000000 +0100
@@ -11,16 +11,16 @@
 append_includes(backg_env, ['PTHREAD'])
 
 sunsky=backg_env.SharedLibrary (target='sunsky', source=['sunsky.cc', 'sunspectrum.cc'])
-backg_env.Install('${YF_PLUGINPATH}',sunsky)
+backg_env.Install('${DESTDIR}${YF_PLUGINPATH}',sunsky)
 
 textureback=backg_env.SharedLibrary (target='textureback', source=['textureback.cc'])
-backg_env.Install('${YF_PLUGINPATH}',textureback)
+backg_env.Install('${DESTDIR}${YF_PLUGINPATH}',textureback)
 
 gradientback=backg_env.SharedLibrary (target='gradientback', source=['gradientback.cc'])
-backg_env.Install('${YF_PLUGINPATH}',gradientback)
+backg_env.Install('${DESTDIR}${YF_PLUGINPATH}',gradientback)
 
 DarkSky=backg_env.SharedLibrary (target='DarkSky', source=['DarkSky/darksky.cc'])
-backg_env.Install('${YF_PLUGINPATH}', DarkSky)
+backg_env.Install('${DESTDIR}${YF_PLUGINPATH}', DarkSky)
 
-backg_env.Install('${YF_PACKPATH}${YF_PLUGINPATH}',[gradientback, textureback, sunsky, DarkSky])
-backg_env.Alias('install_backg','${YF_PLUGINPATH}')
+backg_env.Install('${DESTDIR}${YF_PACKPATH}${YF_PLUGINPATH}',[gradientback, textureback, sunsky, DarkSky])
+backg_env.Alias('install_backg','${DESTDIR}${YF_PLUGINPATH}')
--- YafaRay-0.1.1/src/lights/SConscript.orig	2008-09-21 21:04:15.000000000 +0100
+++ YafaRay-0.1.1/src/lights/SConscript	2011-04-16 21:59:28.000000000 +0100
@@ -14,29 +14,29 @@
 
 sunlight=lights_env.SharedLibrary (target='sunlight', source=['sunlight.cc'])
 #lights_env.Depends(sunlight,'../yafraycore');
-lights_env.Install('${YF_PLUGINPATH}',sunlight)
+lights_env.Install('${DESTDIR}${YF_PLUGINPATH}',sunlight)
 
 pointlight=lights_env.SharedLibrary (target='pointlight', source=['pointlight.cc'])
 #lights_env.Depends(pointlight,'../yafraycore');
-lights_env.Install('${YF_PLUGINPATH}',pointlight)
+lights_env.Install('${DESTDIR}${YF_PLUGINPATH}',pointlight)
 
 directional=lights_env.SharedLibrary (target='directional', source=['directional.cc'])
 #lights_env.Depends(directional,'../yafraycore');
-lights_env.Install('${YF_PLUGINPATH}',directional)
+lights_env.Install('${DESTDIR}${YF_PLUGINPATH}',directional)
 
 spotlight=lights_env.SharedLibrary (target='spotlight', source=['spotlight.cc'])
-lights_env.Install('${YF_PLUGINPATH}',spotlight)
+lights_env.Install('${DESTDIR}${YF_PLUGINPATH}',spotlight)
 
 bglight=static_env.Library (target='bglight', source=['bglight.cc'])
 #lights_env.Install(config.pluginpath,bglight)
 
 arealight=lights_env.SharedLibrary (target='arealight', source=['arealight.cc', 'meshlight.cc', 'bgportallight.cc'])
 #lights_env.Depends(arealight,'../yafraycore');
-lights_env.Install('${YF_PLUGINPATH}',arealight)
+lights_env.Install('${DESTDIR}${YF_PLUGINPATH}',arealight)
 
 spherelight=lights_env.SharedLibrary (target='spherelight', source=['spherelight.cc'])
-lights_env.Install('${YF_PLUGINPATH}',spherelight)
+lights_env.Install('${DESTDIR}${YF_PLUGINPATH}',spherelight)
 
-lights_env.Install('${YF_PACKPATH}${YF_PLUGINPATH}',[sunlight,pointlight,directional,spotlight,arealight,spherelight])
+lights_env.Install('${DESTDIR}${YF_PACKPATH}${YF_PLUGINPATH}',[sunlight,pointlight,directional,spotlight,arealight,spherelight])
 
-lights_env.Alias('install_lights','${YF_PLUGINPATH}')
+lights_env.Alias('install_lights','${DESTDIR}${YF_PLUGINPATH}')
--- YafaRay-0.1.1/src/materials/SConscript.orig	2008-09-16 17:01:50.000000000 +0100
+++ YafaRay-0.1.1/src/materials/SConscript	2011-04-16 22:00:12.000000000 +0100
@@ -8,29 +8,29 @@
 append_includes(mat_env, ['PTHREAD'])
 
 glass=mat_env.SharedLibrary (target='glass', source=['glass.cc', 'roughglass.cc'])
-mat_env.Install('${YF_PLUGINPATH}',glass)
+mat_env.Install('${DESTDIR}${YF_PLUGINPATH}',glass)
 
 blendermat=mat_env.SharedLibrary (target='blendermat', source=['blendmat.cc'])
-mat_env.Install('${YF_PLUGINPATH}',blendermat)
+mat_env.Install('${DESTDIR}${YF_PLUGINPATH}',blendermat)
 
 glossymat=mat_env.SharedLibrary (target='glossymat', source=['glossy_mat.cc', 'microfacet.cc'])
-mat_env.Install('${YF_PLUGINPATH}',glossymat)
+mat_env.Install('${DESTDIR}${YF_PLUGINPATH}',glossymat)
 
 shinydiffuse=mat_env.SharedLibrary (target='shinydiffuse', source=['shinydiff.cc'])
-mat_env.Install('${YF_PLUGINPATH}',shinydiffuse)
+mat_env.Install('${DESTDIR}${YF_PLUGINPATH}',shinydiffuse)
 
 coatedglossy=mat_env.SharedLibrary (target='coatedglossy', source=['coatedglossy.cc', 'microfacet.cc'])
-mat_env.Install('${YF_PLUGINPATH}',coatedglossy)
+mat_env.Install('${DESTDIR}${YF_PLUGINPATH}',coatedglossy)
 
 simplemats=mat_env.SharedLibrary (target='simplemats', source=['simplemats.cc', 'maskmat.cc'])
-mat_env.Install('${YF_PLUGINPATH}',simplemats)
+mat_env.Install('${DESTDIR}${YF_PLUGINPATH}',simplemats)
 
 volumetrics=mat_env.SharedLibrary(target='volumetrics', source=['beer.cc'])
-mat_env.Install('${YF_PLUGINPATH}',volumetrics)
+mat_env.Install('${DESTDIR}${YF_PLUGINPATH}',volumetrics)
 #rgbe_texture=mat_env.SharedLibrary (target='rgbe_texture', source=['rgbe_texture.cc'])
 #mat_env.Depends(rgbe_texture,'../yafraycore');
 #mat_env.Install(config.pluginpath,rgbe_texture)
 
-mat_env.Install('${YF_PACKPATH}${YF_PLUGINPATH}',[glass,blendermat,glossymat,shinydiffuse,coatedglossy,simplemats,volumetrics])
+mat_env.Install('${DESTDIR}${YF_PACKPATH}${YF_PLUGINPATH}',[glass,blendermat,glossymat,shinydiffuse,coatedglossy,simplemats,volumetrics])
 
-mat_env.Alias('install_mat','${YF_PLUGINPATH}')
+mat_env.Alias('install_mat','${DESTDIR}${YF_PLUGINPATH}')
--- YafaRay-0.1.1/src/volumes/SConscript.orig	2008-09-15 15:30:29.000000000 +0100
+++ YafaRay-0.1.1/src/volumes/SConscript	2011-04-16 22:01:42.000000000 +0100
@@ -8,20 +8,20 @@
 volume_env = plugin_env.Clone()
 
 uniformvolume=volume_env.SharedLibrary (target='UniformVolume', source=['UniformVolume.cc'])
-volume_env.Install('${YF_PLUGINPATH}',uniformvolume)
+volume_env.Install('${DESTDIR}${YF_PLUGINPATH}',uniformvolume)
 
 ExpDensityVolume=volume_env.SharedLibrary (target='ExpDensityVolume', source=['ExpDensityVolume.cc'])
-volume_env.Install('${YF_PLUGINPATH}',ExpDensityVolume)
+volume_env.Install('${DESTDIR}${YF_PLUGINPATH}',ExpDensityVolume)
 
 NoiseVolume=volume_env.SharedLibrary (target='NoiseVolume', source=['NoiseVolume.cc'])
-volume_env.Install('${YF_PLUGINPATH}',NoiseVolume)
+volume_env.Install('${DESTDIR}${YF_PLUGINPATH}',NoiseVolume)
 
 GridVolume=volume_env.SharedLibrary (target='GridVolume', source=['GridVolume.cc'])
-volume_env.Install('${YF_PLUGINPATH}',GridVolume)
+volume_env.Install('${DESTDIR}${YF_PLUGINPATH}',GridVolume)
 
 SkyVolume=volume_env.SharedLibrary (target='SkyVolume', source=['SkyVolume.cc'])
-volume_env.Install('${YF_PLUGINPATH}',SkyVolume)
+volume_env.Install('${DESTDIR}${YF_PLUGINPATH}',SkyVolume)
 
-volume_env.Install('${YF_PACKPATH}${YF_PLUGINPATH}',[uniformvolume,ExpDensityVolume,NoiseVolume,SkyVolume])
+volume_env.Install('${DESTDIR}${YF_PACKPATH}${YF_PLUGINPATH}',[uniformvolume,ExpDensityVolume,NoiseVolume,SkyVolume])
 
-volume_env.Alias('install_volumes','${YF_PLUGINPATH}')
+volume_env.Alias('install_volumes','${DESTDIR}${YF_PLUGINPATH}')
--- YafaRay-0.1.1/src/interface/SConscript.orig	2008-09-15 15:30:29.000000000 +0100
+++ YafaRay-0.1.1/src/interface/SConscript	2011-04-16 21:58:54.000000000 +0100
@@ -10,8 +10,8 @@
 append_includes(interf_env, ['PTHREAD'])
 
 interf=interf_env.SharedLibrary (target='yafarayplugin', source=['yafrayinterface.cc', 'xmlinterface.cc'])
-interf_env.Install('${YF_LIBOUT}',interf)
+interf_env.Install('${DESTDIR}${YF_LIBOUT}',interf)
 
-interf_env.Install('${YF_PACKPATH}${YF_LIBOUT}',interf)
+interf_env.Install('${DESTDIR}${YF_PACKPATH}${YF_LIBOUT}',interf)
 
-interf_env.Alias('install_interf','${YF_LIBOUT}')
+interf_env.Alias('install_interf','${DESTDIR}${YF_LIBOUT}')
--- YafaRay-0.1.1/src/integrators/SConscript.orig	2008-10-02 02:15:35.000000000 +0100
+++ YafaRay-0.1.1/src/integrators/SConscript	2011-04-16 21:58:21.000000000 +0100
@@ -8,32 +8,32 @@
 append_lib(integr_env, ['PTHREAD', 'MISC'])
 
 directlight=integr_env.SharedLibrary (target='directlight', source=['directlight.cc', 'common.cc'])
-integr_env.Install('${YF_PLUGINPATH}',directlight)
+integr_env.Install('${DESTDIR}${YF_PLUGINPATH}',directlight)
 
 photonmap=integr_env.SharedLibrary (target='photonmap', source=['photonintegr.cc', 'photonintegr_cache.cc', 'common.cc'])
-integr_env.Install('${YF_PLUGINPATH}',photonmap)
+integr_env.Install('${DESTDIR}${YF_PLUGINPATH}',photonmap)
 
 pathtrace=integr_env.SharedLibrary (target='pathtrace', source=['pathtracer.cc', 'common.cc'])
-integr_env.Install('${YF_PLUGINPATH}',pathtrace)
+integr_env.Install('${DESTDIR}${YF_PLUGINPATH}',pathtrace)
 
 bidirpath=integr_env.SharedLibrary (target='bidirpath', source=['bidirpath.cc'])
-integr_env.Install('${YF_PLUGINPATH}',bidirpath)
+integr_env.Install('${DESTDIR}${YF_PLUGINPATH}',bidirpath)
 
 EmissionIntegrator=integr_env.SharedLibrary (target='EmissionIntegrator', source=['EmissionIntegrator.cc'])
-integr_env.Install('${YF_PLUGINPATH}',EmissionIntegrator)
+integr_env.Install('${DESTDIR}${YF_PLUGINPATH}',EmissionIntegrator)
 
 SingleScatterIntegrator=integr_env.SharedLibrary (target='SingleScatterIntegrator', source=['SingleScatterIntegrator.cc'])
-integr_env.Install('${YF_PLUGINPATH}',SingleScatterIntegrator)
+integr_env.Install('${DESTDIR}${YF_PLUGINPATH}',SingleScatterIntegrator)
 
 EmptyVolumeIntegrator=integr_env.SharedLibrary (target='EmptyVolumeIntegrator', source=['EmptyVolumeIntegrator.cc'])
-integr_env.Install('${YF_PLUGINPATH}',EmptyVolumeIntegrator)
+integr_env.Install('${DESTDIR}${YF_PLUGINPATH}',EmptyVolumeIntegrator)
 
 DebugIntegrator=integr_env.SharedLibrary (target='DebugIntegrator', source=['DebugIntegrator.cc'])
-integr_env.Install('${YF_PLUGINPATH}',DebugIntegrator)
+integr_env.Install('${DESTDIR}${YF_PLUGINPATH}',DebugIntegrator)
 
 SkyIntegrator=integr_env.SharedLibrary (target='SkyIntegrator', source=['SkyIntegrator.cc'])
-integr_env.Install('${YF_PLUGINPATH}',SkyIntegrator)
+integr_env.Install('${DESTDIR}${YF_PLUGINPATH}',SkyIntegrator)
 
-integr_env.Install('${YF_PACKPATH}${YF_PLUGINPATH}',[directlight,photonmap,pathtrace,bidirpath,EmissionIntegrator,
+integr_env.Install('${DESTDIR}${YF_PACKPATH}${YF_PLUGINPATH}',[directlight,photonmap,pathtrace,bidirpath,EmissionIntegrator,
 	SingleScatterIntegrator,EmptyVolumeIntegrator,DebugIntegrator,SkyIntegrator])
-integr_env.Alias('install_integr','${YF_PLUGINPATH}')
+integr_env.Alias('install_integr','${DESTDIR}${YF_PLUGINPATH}')
--- YafaRay-0.1.1/src/gui/SConscript.orig	2009-06-04 17:47:34.000000000 +0100
+++ YafaRay-0.1.1/src/gui/SConscript	2011-04-16 21:57:15.000000000 +0100
@@ -20,8 +20,8 @@
 gui_env.Depends('yafarayqt', 'windowbase.h')
 Alias('qtgui', qt_qui )
 
-gui_env.Install('${YF_LIBOUT}', qt_qui )
-gui_env.Install('${YF_PACKPATH}${YF_LIBOUT}', qt_qui )
+gui_env.Install('${DESTDIR}${YF_LIBOUT}', qt_qui )
+gui_env.Install('${DESTDIR}${YF_PACKPATH}${YF_LIBOUT}', qt_qui )
 
 #swig_env = shared_env.Clone(SWIGFLAGS=['-c++', '-python'], SHLIBPREFIX="_")
 #swig_env.Append(CPPPATH=[distutils.sysconfig.get_python_inc()] )
--- YafaRay-0.1.1/src/testsuite/SConscript.orig	2008-09-15 15:30:29.000000000 +0100
+++ YafaRay-0.1.1/src/testsuite/SConscript	2011-04-16 22:00:36.000000000 +0100
@@ -39,9 +39,9 @@
 #loader_env.Install(config.binpath,testsuite)
 #loader_env.Install(config.binpath,photontest)
 #loader_env.Install(config.rootpath + os.sep + 'build/bin',testloader)
-loader_env.Install('${YF_BINPATH}',testloader)
+loader_env.Install('${DESTDIR}${YF_BINPATH}',testloader)
 
-loader_env.Install('${YF_PACKPATH}${YF_BINPATH}',testloader)
+loader_env.Install('${DESTDIR}${YF_PACKPATH}${YF_BINPATH}',testloader)
 
-loader_env.Alias('install_testsuite','${YF_BINPATH}')
+loader_env.Alias('install_testsuite','${DESTDIR}${YF_BINPATH}')
 
--- YafaRay-0.1.1/src/yafraycore/SConscript.orig	2008-10-02 02:15:35.000000000 +0100
+++ YafaRay-0.1.1/src/yafraycore/SConscript	2011-04-16 22:02:09.000000000 +0100
@@ -55,7 +55,7 @@
 #core_env.Install(config.libpath, core_env.SharedLibrary(target=config.corelib, source=source_files) )
 #core_env.Alias('install_core',config.libpath)
 yafcore = core_env.SharedLibrary(target='${YF_CORELIB}', source=source_files);
-core_env.Install('${YF_LIBOUT}', yafcore )
-core_env.Install('${YF_PACKPATH}${YF_LIBOUT}', yafcore )
-core_env.Alias('install_core','${YF_LIBOUT}')
+core_env.Install('${DESTDIR}${YF_LIBOUT}', yafcore )
+core_env.Install('${DESTDIR}${YF_PACKPATH}${YF_LIBOUT}', yafcore )
+core_env.Alias('install_core','${DESTDIR}${YF_LIBOUT}')
 
--- YafaRay-0.1.1/src/textures/SConscript.orig	2008-09-15 15:30:29.000000000 +0100
+++ YafaRay-0.1.1/src/textures/SConscript	2011-04-16 22:00:57.000000000 +0100
@@ -16,12 +16,12 @@
 	image_sources += ['png.cc']
 
 basictex=image_env.SharedLibrary (target='basictex', source=image_sources)
-image_env.Install('${YF_PLUGINPATH}',basictex)
+image_env.Install('${DESTDIR}${YF_PLUGINPATH}',basictex)
 
 # nodes:
 basicnodes=tex_env.SharedLibrary (target='basicnodes', source=['basicnodes.cc', 'layernode.cc'])
-tex_env.Install('${YF_PLUGINPATH}',basicnodes)
+tex_env.Install('${DESTDIR}${YF_PLUGINPATH}',basicnodes)
 
-tex_env.Install('${YF_PACKPATH}${YF_PLUGINPATH}',[basictex,basicnodes])
+tex_env.Install('${DESTDIR}${YF_PACKPATH}${YF_PLUGINPATH}',[basictex,basicnodes])
 
-tex_env.Alias('install_tex','${YF_PLUGINPATH}')
+tex_env.Alias('install_tex','${DESTDIR}${YF_PLUGINPATH}')
--- YafaRay-0.1.1/config/linux2-config.py.orig	2009-06-03 16:38:25.000000000 +0100
+++ YafaRay-0.1.1/config/linux2-config.py	2011-04-16 22:07:40.000000000 +0100
@@ -1,10 +1,12 @@
 
 PREFIX = '/usr/local'
+DESTDIR = ''
+LIBDIRSUFFIX = ''
 CCFLAGS = '-Wall'
 REL_CCFLAGS = '-O3 -ffast-math'
 DEBUG_CCFLAGS = '-ggdb'
-YF_LIBOUT = '${PREFIX}/lib'
-YF_PLUGINPATH = '${PREFIX}/lib/yafaray'
+YF_LIBOUT = '${PREFIX}/lib${LIBDIRSUFFIX}'
+YF_PLUGINPATH = '${PREFIX}/lib${LIBDIRSUFFIX}/yafaray'
 YF_BINPATH = '${PREFIX}/bin'
 YF_BINDINGS = '${PREFIX}/share/yafaray/blender'
 
--- YafaRay-0.1.1/tools/buildtools.py.orig	2009-06-03 16:38:25.000000000 +0100
+++ YafaRay-0.1.1/tools/buildtools.py	2011-04-16 22:08:15.000000000 +0100
@@ -9,6 +9,8 @@
 	opts = Options.Options(cfiles, cargs)
 	opts.AddOptions(
 		('PREFIX', 'prefix for default installation paths', ''),
+		('DESTDIR', 'where to install to', ''),
+		('LIBDIRSUFFIX', 'lib dir suffix', ''),
 		('CCFLAGS', 'C(++) compiler flags', ''),
 		('REL_CCFLAGS', 'Additional flags f. release build', ''),
 		('DEBUG_CCFLAGS', 'Additional flags f. debug build', ''),
--- YafaRay-0.1.1/bindings/SConscript.orig	2009-06-03 16:38:25.000000000 +0100
+++ YafaRay-0.1.1/bindings/SConscript	2011-04-16 21:54:04.000000000 +0100
@@ -36,8 +36,8 @@
 else:
 	pytargets = Install(dir = '#bindings/python', source = pyif )
 	Alias('swig', pytargets )
-	Alias('swig_install', shared_env.InstallAs('$YF_BINDINGS/_yafrayinterface.so', pyif))
-	Alias('swig_install', shared_env.InstallAs('$YF_BINDINGS/yafrayinterface.py', '#build/bindings/yafrayinterface.py'))
+	Alias('swig_install', shared_env.InstallAs('${DESTDIR}$YF_BINDINGS/_yafrayinterface.so', pyif))
+	Alias('swig_install', shared_env.InstallAs('${DESTDIR}$YF_BINDINGS/yafrayinterface.py', '#build/bindings/yafrayinterface.py'))
 
 swig_env.Command( '#bindings/python/yafrayinterface.py', '#build/bindings/yafrayinterface.py', Copy('$TARGET', '$SOURCE'))
 Alias('swig', '#bindings/python/yafrayinterface.py')
@@ -55,8 +55,8 @@
 		Alias('swig', pyqttarget )
 	else:
 		pyqttarget = Install(dir = '#bindings/python', source = pyqt )
-		Alias('swig_install', shared_env.InstallAs('$YF_BINDINGS/_yafqt.so', pyqt))
-		Alias('swig_install', shared_env.InstallAs('$YF_BINDINGS/yafqt.py', '#build/bindings/yafqt.py'))
+		Alias('swig_install', shared_env.InstallAs('${DESTDIR}$YF_BINDINGS/_yafqt.so', pyqt))
+		Alias('swig_install', shared_env.InstallAs('${DESTDIR}$YF_BINDINGS/yafqt.py', '#build/bindings/yafqt.py'))
 		Alias('swig', pyqttarget )
 	swig_env.Command( '#bindings/python/yafqt.py', '#build/bindings/yafqt.py', Copy('$TARGET', '$SOURCE'))
 	Alias('swig', '#bindings/python/yafqt.py')
