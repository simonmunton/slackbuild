#!/bin/bash
#
. build_funcs

TARNAME=stunnel
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/new/s
#TAR_EXT=.tar.gz
VERSION=5.33
VERSIONEXTRA=
BUILD=1

WEBPAGE=""

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
# patch -p1 < ${CWD}/stunnel-5.08.diff
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

PKGCFLAGS="-O2 -march=i686 ${CPUOPT}=i686"

if [ ${DO_CONFIGURE} == "yes" ]
then
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --localstatedir=/var \
	    --mandir=/usr/man \
	    --datadir=/usr/share \
	    --sbindir=/usr/sbin \
	    --bindir=/usr/bin \
	    --localstatedir=/var \


#	    --libdir=/usr/lib \
#	    --exec-prefix= \
#	    --datadir=/usr/share \
#	    --sbindir=/usr/sbin

#cmake -DCMAKE_C_FLAGS:STRING="${SLKCFLAGS}" \
#      -DCMAKE_CXX_FLAGS:STRING="${SLKCFLAGS}" \
#      -DCMAKE_BUILD_TYPE=Release \
#      -DCMAKE_INSTALL_PREFIX=/usr \
#      -DMAN_INSTALL_DIR=/usr/man \
#      -DSYSCONF_INSTALL_DIR=/etc \
#      .

fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

mkdir -p ${PKG}/var/run/stunnel

# This will produce a useless key.
make install DESTDIR=${PKG} pkglibdir=/usr/lib${LIBDIRSUFFIX}

# Get rid of key, so nobody tries to use it:
rm -f ${PKG}/etc/stunnel/stunnel.pem
# Add cnf:
cat tools/stunnel.conf-sample > ${PKG}/etc/stunnel/stunnel.conf.new
doinst_config etc/stunnel/stunnel.conf.new

cat tools/openssl.cnf > ${PKG}/etc/stunnel/openssl.cnf.new
doinst_config etc/stunnel/openssl.cnf.new

cat ${CWD}/stunnel-generate-stunnel-key.sh > ${PKG}/etc/stunnel/generate-stunnel-key.sh
chmod 755 ${PKG}/etc/stunnel/generate-stunnel-key.sh

mkdir -p ${PKG}/usr/man/pl/man8
mv ${PKG}/usr/man/man8/stunnel.pl.8 ${PKG}/usr/man/pl/man8/stunnel.8
mkdir -p ${PKG}/usr/man/fr/man8
mv ${PKG}/usr/man/man8/stunnel.fr.8 ${PKG}/usr/man/fr/man8/stunnel.8

# The 4.15 version of stunnel caused some bizarre perms, so
# we'll protect against that:
chmod 0755 ${PKG}/var/lib

# This used to be installed in /usr/sbin, so it would probably be nice to
# link from there:
mkdir -p ${PKG}/usr/sbin
( cd ${PKG}/usr/sbin
  ln -sf ../bin/stunnel .
  ln -sf ../bin/stunnel3 .
)

strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "Universal SSL tunnel"
The stunnel program is designed to work as an SSL encryption wrapper
between remote client and local (inetd-startable) or remote servers.
The goal is to facilitate SSL encryption and authentication for
non-SSL-aware programs.

stunnel can be used to add SSL functionality to commonly used inetd
daemons like POP-2, POP-3 and IMAP servers without any changes in the
programs' code.

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
