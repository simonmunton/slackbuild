--- Python-3.3.0/Makefile.pre.in.orig	2012-09-29 09:00:41.000000000 +0100
+++ Python-3.3.0/Makefile.pre.in	2012-12-28 08:31:32.932306069 +0000
@@ -108,7 +108,7 @@
 MANDIR=		@mandir@
 INCLUDEDIR=	@includedir@
 CONFINCLUDEDIR=	$(exec_prefix)/include
-SCRIPTDIR=	$(prefix)/lib
+SCRIPTDIR=	$(prefix)/lib64
 ABIFLAGS=	@ABIFLAGS@
 
 # Detailed destination directories
--- Python-3.3.0/setup.py.orig	2012-09-29 09:00:50.000000000 +0100
+++ Python-3.3.0/setup.py	2012-12-28 08:34:24.302353226 +0000
@@ -396,6 +396,8 @@
         if multiarch_path_component != '':
             add_dir_to_list(self.compiler.library_dirs,
                             '/usr/lib/' + multiarch_path_component)
+            add_dir_to_list(self.compiler.library_dirs,
+                            '/usr/lib64/' + multiarch_path_component)
             add_dir_to_list(self.compiler.include_dirs,
                             '/usr/include/' + multiarch_path_component)
             return
@@ -417,6 +419,8 @@
                     multiarch_path_component = fp.readline().strip()
                 add_dir_to_list(self.compiler.library_dirs,
                                 '/usr/lib/' + multiarch_path_component)
+                add_dir_to_list(self.compiler.library_dirs,
+                                '/usr/lib64/' + multiarch_path_component)
                 add_dir_to_list(self.compiler.include_dirs,
                                 '/usr/include/' + multiarch_path_component)
         finally:
@@ -460,6 +464,7 @@
         # 10520.
         if not cross_compiling:
             add_dir_to_list(self.compiler.library_dirs, '/usr/local/lib')
+            add_dir_to_list(self.compiler.library_dirs, '/usr/local/lib64')
             add_dir_to_list(self.compiler.include_dirs, '/usr/local/include')
         # only change this for cross builds for 3.3, issues on Mageia
         if cross_compiling:
@@ -729,11 +734,11 @@
             elif curses_library:
                 readline_libs.append(curses_library)
             elif self.compiler.find_library_file(lib_dirs +
-                                                     ['/usr/lib/termcap'],
+                                                     ['/usr/lib64/termcap'],
                                                      'termcap'):
                 readline_libs.append('termcap')
             exts.append( Extension('readline', ['readline.c'],
-                                   library_dirs=['/usr/lib/termcap'],
+                                   library_dirs=['/usr/lib64/termcap'],
                                    extra_link_args=readline_extra_link_args,
                                    libraries=readline_libs) )
         else:
@@ -770,8 +775,8 @@
             if krb5_h:
                 ssl_incs += krb5_h
         ssl_libs = find_library_file(self.compiler, 'ssl',lib_dirs,
-                                     ['/usr/local/ssl/lib',
-                                      '/usr/contrib/ssl/lib/'
+                                     ['/usr/local/ssl/lib64',
+                                      '/usr/contrib/ssl/lib64/'
                                      ] )
 
         if (ssl_incs is not None and
--- Python-3.3.0/Modules/Setup.dist.orig	2012-09-29 09:00:42.000000000 +0100
+++ Python-3.3.0/Modules/Setup.dist	2012-12-28 08:31:32.934306071 +0000
@@ -354,7 +354,7 @@
 # Andrew Kuchling's zlib module.
 # This require zlib 1.1.3 (or later).
 # See http://www.gzip.org/zlib/
-#zlib zlibmodule.c -I$(prefix)/include -L$(exec_prefix)/lib -lz
+#zlib zlibmodule.c -I$(prefix)/include -L$(exec_prefix)/lib64 -lz
 
 # Interface to the Expat XML parser
 #
--- Python-3.3.0/Modules/getpath.c.orig	2012-09-29 09:00:45.000000000 +0100
+++ Python-3.3.0/Modules/getpath.c	2012-12-28 08:37:34.564405917 +0000
@@ -122,8 +122,8 @@
 #endif
 
 #ifndef PYTHONPATH
-#define PYTHONPATH PREFIX "/lib/python" VERSION ":" \
-              EXEC_PREFIX "/lib/python" VERSION "/lib-dynload"
+#define PYTHONPATH PREFIX "/lib64/python" VERSION ":" \
+              EXEC_PREFIX "/lib64/python" VERSION "/lib-dynload"
 #endif
 
 #ifndef LANDMARK
@@ -135,7 +135,7 @@
 static wchar_t progpath[MAXPATHLEN+1];
 static wchar_t *module_search_path = NULL;
 static int module_search_path_malloced = 0;
-static wchar_t *lib_python = L"lib/python" VERSION;
+static wchar_t *lib_python = L"lib64/python" VERSION;
 
 static void
 reduce(wchar_t *dir)
@@ -677,7 +677,7 @@
     }
     else
         wcsncpy(zip_path, _prefix, MAXPATHLEN);
-    joinpath(zip_path, L"lib/python00.zip");
+    joinpath(zip_path, L"lib64/python00.zip");
     bufsz = wcslen(zip_path);   /* Replace "00" with version */
     zip_path[bufsz - 6] = VERSION[0];
     zip_path[bufsz - 5] = VERSION[2];
@@ -687,7 +687,7 @@
             fprintf(stderr,
                 "Could not find platform dependent libraries <exec_prefix>\n");
         wcsncpy(exec_prefix, _exec_prefix, MAXPATHLEN);
-        joinpath(exec_prefix, L"lib/lib-dynload");
+        joinpath(exec_prefix, L"lib64/lib-dynload");
     }
     /* If we found EXEC_PREFIX do *not* reduce it!  (Yet.) */
 
--- Python-3.3.0/Lib/distutils/sysconfig.py.orig	2012-09-29 09:00:28.000000000 +0100
+++ Python-3.3.0/Lib/distutils/sysconfig.py	2012-12-28 08:31:32.935306072 +0000
@@ -140,7 +140,7 @@
 
     if os.name == "posix":
         libpython = os.path.join(prefix,
-                                 "lib", "python" + get_python_version())
+                                 "lib64", "python" + get_python_version())
         if standard_lib:
             return libpython
         else:
--- Python-3.3.0/Lib/distutils/command/install.py.orig	2012-09-29 09:00:27.000000000 +0100
+++ Python-3.3.0/Lib/distutils/command/install.py	2012-12-28 08:31:32.935306072 +0000
@@ -44,15 +44,15 @@
 
 INSTALL_SCHEMES = {
     'unix_prefix': {
-        'purelib': '$base/lib/python$py_version_short/site-packages',
-        'platlib': '$platbase/lib/python$py_version_short/site-packages',
+        'purelib': '$base/lib64/python$py_version_short/site-packages',
+        'platlib': '$platbase/lib64/python$py_version_short/site-packages',
         'headers': '$base/include/python$py_version_short$abiflags/$dist_name',
         'scripts': '$base/bin',
         'data'   : '$base',
         },
     'unix_home': {
-        'purelib': '$base/lib/python',
-        'platlib': '$base/lib/python',
+        'purelib': '$base/lib64/python',
+        'platlib': '$base/lib64/python',
         'headers': '$base/include/python/$dist_name',
         'scripts': '$base/bin',
         'data'   : '$base',
--- Python-3.3.0/Lib/site.py.orig	2012-09-29 09:00:31.000000000 +0100
+++ Python-3.3.0/Lib/site.py	2012-12-28 08:31:32.935306072 +0000
@@ -303,12 +303,17 @@
         if sys.platform in ('os2emx', 'riscos'):
             sitepackages.append(os.path.join(prefix, "Lib", "site-packages"))
         elif os.sep == '/':
+            sitepackages.append(os.path.join(prefix, "lib64",
+                                        "python" + sys.version[:3],
+                                        "site-packages"))
             sitepackages.append(os.path.join(prefix, "lib",
                                         "python" + sys.version[:3],
                                         "site-packages"))
+            sitepackages.append(os.path.join(prefix, "lib64", "site-python"))
             sitepackages.append(os.path.join(prefix, "lib", "site-python"))
         else:
             sitepackages.append(prefix)
+            sitepackages.append(os.path.join(prefix, "lib64", "site-packages"))
             sitepackages.append(os.path.join(prefix, "lib", "site-packages"))
         if sys.platform == "darwin":
             # for framework builds *only* we add the standard Apple
