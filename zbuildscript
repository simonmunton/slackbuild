

if [ -z "$1" ]
then
  echo "Need arg"
  exit 1
fi


declare -A BLACKLIST

BLACKLIST=(
[xxxx]=1
)

JOBS=8

DODISTCC=0

COUNT=0

while read f opts
do
  if [ -z $f ]; then continue; fi
  if [[ $f =~ ^#  ]]; then continue; fi
  FILES[$COUNT]="$f"
  OPTS[$COUNT]="$opts"
  : $(( COUNT++ ))
done < $1

for ((n = 0; n < COUNT; n++))
do
  f=${FILES[$n]}
  opts=${OPTS[$n]}

  (
  cd `dirname $f`
  f=`basename $f`

  TARNAME=""
  PKGNAME=""

  eval `grep -E "^(TAR|PKG)NAME" $f.build | grep -v "module"`
  if [ -z "${PKGNAME}" ]
  then
    PKGNAME=${TARNAME}
  fi

  if [ ! -e /tmp/packages/${PKGNAME}.built ]
  then

    if [ "${BLACKLIST[$f]}" == "1" ]
    then
      unset CC
      unset CXX
      unset DISTCC_HOSTS

      ./$f.build -j1 2>&1 | tee $f.log
    else
      if [ "$DODISTCC" == "1" ]
      then
        :
#        export CC="distcc gcc"
#        export CXX="distcc g++"
#        export DISTCC_HOSTS="hades/6 localhost"
      fi

      ./$f.build -j$JOBS $opts 2>&1 | tee $f.log
    fi

    su -c "upgradepkg --install-new --reinstall /tmp/packages/${PKGNAME}-*"

    touch /tmp/packages/${PKGNAME}.built
  fi
  )
done

echo alldone
touch /tmp/packages/alldone
