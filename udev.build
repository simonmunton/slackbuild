#!/bin/bash
#
. build_funcs

TARNAME=udev
TARNAMEEXTRA=
TARDIR=~/tmp/new/u
#TAR_EXT=.tar.gz
VERSION=120
VERSIONEXTRA=
BUILD=1

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}-${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 #patch -p1 < ${CWD}/
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

EXTRAS="extras/ata_id extras/cdrom_id extras/edd_id extras/firmware \
	extras/floppy extras/path_id extras/rule_generator \
	extras/scsi_id extras/usb_id extras/volume_id"

if [ ${DO_CONFIGURE} == "yes" ]
then
  true
fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} EXTRAS="${EXTRAS}" || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

make install DESTDIR=${PKG} EXTRAS="${EXTRAS}"

#scsi_id is needed by multipath
mkdir -p ${PKG}/sbin
( cd ${PKG}
  ln -s /lib/udev/scsi_id sbin/scsi_id
)

#vol_id is needed by multipath, too
( cd ${PKG}
  ln -s /lib/udev/vol_id sbin/vol_id
)

mv ${PKG}/usr/share/man ${PKG}/usr
rmdir ${PKG}/usr/share

mkdir -p ${PKG}/lib/firmware \
         ${PKG}/etc/modprobe.d \
         ${PKG}/etc/rc.d

cp etc/udev/rules.d/*rules ${PKG}/etc/udev/rules.d
cp ${CWD}/udev.conf ${PKG}/etc/udev/udev.conf
cp ${CWD}/udev.rules ${PKG}/etc/udev/rules.d/50-udev.rules

#cat > ${PKG}/etc/udev/rules.d/50-firmware.rules << EOF
## firmware loader
#SUBSYSTEM=="firmware", ACTION=="add", RUN+="/lib/udev/firmware.sh"
#EOF

chmod -x ${PKG}/etc/udev/rules.d/*

mkdir -p ${PKG}/lib/udev/devices

(cd ${PKG}/lib/udev/devices
 ln -snf /proc/self/fd fd
 ln -snf fd/0 stdin
 ln -snf fd/1 stdout
 ln -snf fd/2 stderr
 ln -snf /proc/kcore core
)

#cat ${CWD}/udev-doinst.sh > ${PKG}/install/doinst.sh

cp ${CWD}/udev-rc.udev.new ${PKG}/etc/rc.d/rc.udev.new
#cp ${CWD}/udev-rc.udev_retry.new ${PKG}/etc/rc.d/rc.udev_retry.new
chmod 755 ${PKG}/etc/rc.d/rc.udev.new

cp ${CWD}/udev-blacklist.new ${PKG}/etc/modprobe.d/blacklist.new
cp ${CWD}/udev-isapnp.new ${PKG}/etc/modprobe.d/isapnp.new

for f in cdrom-symlinks.sh floppy-extra-devs.sh modalias_ieee1394 modprobe.sh nethelper.sh rc.optical-symlinks
do
  cp ${CWD}/udev-${f} ${PKG}/lib/udev/${f}
done

chmod 755 ${PKG}/lib/udev/*
chmod -x ${PKG}/lib/udev/rc.optical-symlinks

doinst_config etc/rc.d/rc.udev.new etc/modprobe.d/blacklist.new etc/modprobe.d/isapnp.new

# etc/rc.d/rc.udev_retry.new


#strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* FAQ INSTALL NEWS PLANS README* RELEASE-NOTES TODO docs \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

mkdir -p ${PKG}/install
cat <<EOF > ${PKG}/install/slack-desc
# HOW TO EDIT THIS FILE:
# The "handy ruler" below makes it easier to edit a package description.  Line
# up the first '|' above the ':' following the base package name, and the '|'
# on the right side marks the last column you can put a character in.  You must
# make exactly 11 lines for the formatting to be correct.  It's also
# customary to leave one space after the ':'.

          |-----handy-ruler------------------------------------------------------|
${PKGNAME}: ${PKGNAME} ${VERSION}
${PKGNAME}:
${PKGNAME}: udev provides a dynamic device directory containing only the files for
${PKGNAME}: actually present devices. It creates or removes device node files in
${PKGNAME}: the /dev directory, or it renames network interfaces.
${PKGNAME}:
${PKGNAME}: Kay Sievers is the udev maintainer.
${PKGNAME}:
${PKGNAME}:
${PKGNAME}:
${PKGNAME}:
EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
mknod ${PKG}/lib/udev/devices/null c 1 3; \
mknod ${PKG}/lib/udev/devices/zero c 1 5; \
mknod ${PKG}/lib/udev/devices/ppp c 108 0; \
mkfifo -m 600 ${PKG}/lib/udev/devices/initctl; \
chmod 666 ${PKG}/lib/udev/devices/{null,zero}; \
chown root.uucp ${PKG}/lib/udev/devices/ppp; \
chmod 660 ${PKG}/lib/udev/devices/ppp; \
makepkg -l y -c n ${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
