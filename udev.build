#!/bin/bash
#
. build_funcs

TARNAME=udev
TARNAMEEXTRA=
TARDIR=~/tmp/new/u
#TAR_EXT=.tar.gz
VERSION=160
VERSIONEXTRA=
BUILD=1

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}-${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 patch -p1 -b -z .orig < ${CWD}/udev-rule_generator.patch
 patch -p1 -b -z .orig < ${CWD}/udev.dialout.to.uucp.diff
# patch -p1 < ${CWD}/udev-142fix.diff
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

EXTRAS="extras/ata_id extras/cdrom_id extras/edd_id extras/firmware \
	extras/floppy extras/path_id extras/rule_generator \
	extras/scsi_id extras/usb_id extras/volume_id"

if [ ${DO_CONFIGURE} == "yes" ]
then
./configure --prefix=/usr \
	    --exec-prefix=/ \
            --sysconfdir=/etc \
            --localstatedir=/var/lib \
            --mandir=/usr/man \
	    --with-rootlibdir=/lib \
	    --libexecdir=/lib/udev \
	    --libdir=/usr/lib \
	    --enable-static
fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} EXTRAS="${EXTRAS}" || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

make install DESTDIR=${PKG} EXTRAS="${EXTRAS}" sharepkgconfigdir=/usr/lib/pkgconfig

#(cd ${PKG}/usr/lib
# SONAME=`readlink libvolume_id.so`
# ln -sf /lib/${SONAME##*/} libvolume_id.so
#)

#udevinfo needed by hal
mkdir -p ${PKG}/usr/bin
(cd ${PKG}/usr/bin
 ln -sf /sbin/udevadm udevinfo
)

#scsi_id is needed by multipath
mkdir -p ${PKG}/sbin
( cd ${PKG}
  ln -s /lib/udev/scsi_id sbin/scsi_id
)

#vol_id is needed by multipath, too
#( cd ${PKG}
#  ln -s /lib/udev/vol_id sbin/vol_id
#)

#mv ${PKG}/usr/share/man ${PKG}/usr
#rmdir ${PKG}/usr/share

mkdir -p ${PKG}/etc/udev/rules.d \
	 ${PKG}/lib/firmware \
         ${PKG}/etc/modprobe.d \
         ${PKG}/etc/rc.d

cp ${CWD}/udev.conf ${PKG}/etc/udev/udev.conf

## slackware rules
cp -a ${CWD}/udev-40-slackware.rules ${PKG}/lib/udev/rules.d/40-slackware.rules
#cp -a ${CWD}/udev-40-video.rules ${PKG}/lib/udev/rules.d/40-video.rules
cp -a ${CWD}/udev-59-non-libata-devices.rules ${PKG}/lib/udev/rules.d/59-non-libata-devices.rules
cp -a ${CWD}/udev-65-permissions.rules ${PKG}/lib/udev/rules.d/65-permissions.rules
cp -a ${CWD}/udev-90-network.rules ${PKG}/lib/udev/rules.d/90-network.rules

## upstream rule
#cp -a rules/packages/40-alsa.rules ${PKG}/lib/udev/rules.d
#cp -a rules/packages/40-isdn.rules ${PKG}/lib/udev/rules.d/
#cp -a rules/packages/40-infiniband.rules ${PKG}/lib/udev/rules.d/
#cp -a rules/packages/40-zaptel.rules ${PKG}/lib/udev/rules.d/
#cp -a rules/packages/40-pilot-links.rules ${PKG}/etc/udev/rules.d/
#cp -a rules/packages/64-md-raid.rules ${PKG}/lib/udev/rules.d
# This one is shared with Gentoo
#cp -a rules/gentoo/40-video.rules $PKG/lib/udev/rules.d/

## slackware rc.udev
cp ${CWD}/udev-rc.udev.new ${PKG}/etc/rc.d/rc.udev.new

cp ${CWD}/udev-blacklist.new ${PKG}/etc/modprobe.d/blacklist.conf.new
cp ${CWD}/udev-isapnp.new ${PKG}/etc/modprobe.d/isapnp.conf.new
cp ${CWD}/udev-psmouse.new ${PKG}/etc/modprobe.d/psmouse.conf.new
cp ${CWD}/udev-usb-controller.new ${PKG}/etc/modprobe.d/usb-controller.conf.new

mkdir -p ${PKG}/lib/udev/devices/shm

(cd ${PKG}/lib/udev/devices
 ln -snf /proc/self/fd fd
 ln -snf /proc/self/fd/0 stdin
 ln -snf /proc/self/fd/1 stdout
 ln -snf /proc/self/fd/2 stderr
 ln -snf /proc/kcore core
 ln -snf null X0R
# mknod, mkfifo done later
)

for f in nethelper.sh
do
  cp ${CWD}/udev-${f} ${PKG}/lib/udev/${f}
done

chmod 755 ${PKG}/etc/rc.d/rc.udev.new
chmod 755 ${PKG}/lib/udev/*
#chmod -x ${PKG}/lib/udev/rc.optical-symlinks

#chmod -x ${PKG}/etc/udev/rules.d/*
chmod -x ${PKG}/lib/udev/rules.d/*

doinst_same_perm etc/rc.d/rc.udev

doinst_config etc/rc.d/rc.udev.new etc/modprobe.d/blacklist.conf.new etc/modprobe.d/isapnp.conf.new \
	      etc/modprobe.d/psmouse.conf.new etc/modprobe.d/usb-controller.conf.new

#strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* FAQ INSTALL NEWS PLANS README* RELEASE-NOTES TODO docs \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "dynamic device directory system"
udev provides a dynamic device directory containing only the files for
actually present devices. It creates or removes device node files in
the /dev directory, or it renames network interfaces.

udev requires a 2.6 or newer kernel.

Kay Sievers is the udev maintainer.

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
mknod ${PKG}/lib/udev/devices/null c 1 3; \
mknod ${PKG}/lib/udev/devices/zero c 1 5; \
mknod ${PKG}/lib/udev/devices/ppp c 108 0; \
mkfifo -m 600 ${PKG}/lib/udev/devices/initctl; \
chmod 666 ${PKG}/lib/udev/devices/{null,zero}; \
chown root.uucp ${PKG}/lib/udev/devices/ppp; \
chmod 660 ${PKG}/lib/udev/devices/ppp; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
