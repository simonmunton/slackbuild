#!/bin/bash
#
. build_funcs

TARNAME=ndiswrapper
TARNAMEEXTRA=
TARDIR=~/tmp/new/n
#TAR_EXT=.tar.gz
VERSION=1.53
VERSIONEXTRA=
BUILD=1

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}-${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}
PKG_MODULE=/tmp/package-${PKGNAME}-module
rm -rf ${PKG_MODULE}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 #patch -p1 < ${CWD}/
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

KERNELRELEASE=`(cd /usr/src/linux; make kernelrelease)`

if [ ${DO_CONFIGURE} == "yes" ]
then
true
fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} KVERS=${KERNELRELEASE} || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

make install DESTDIR=${PKG} KVERS=${KERNELRELEASE}

mkdir -p ${PKG}/etc/ndiswrapper

mkdir -p ${PKG_MODULE}/install

rm -rf ${PKG_MODULE}/lib
mv ${PKG}/lib ${PKG_MODULE}
rm ${PKG_MODULE}/lib/modules/${KERNELRELEASE}/modules.*

cat > ${PKG_MODULE}/install/doinst.sh << EOF
#
/sbin/depmod ${KERNELRELEASE}

EOF

#strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
PKGNAME=${PKGNAME}-module \
make_slack_desc << EOF "ndiswrapper kernel module"
ndiswrapper kernel module

EOF

mv ${PKG}/install/slack-desc ${PKG_MODULE}/install

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "ndiswrapper user space tools"
Some wireless LAN vendors refuse to release hardware specifications or
drivers for their products for operating systems other than Microsoft
Windows. The ndiswrapper project makes it possible to use such
hardware with Linux by means of a loadable kernel module that "wraps
around" NDIS (Windows network driver API) drivers. This package 
contains just the userspace tools. You will also need the kernel 
module.

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG} ${PKG_MODULE}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
cd ${PKG_MODULE}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGNAME}-module-${PKGVERSION}_${KERNELRELEASE//-/_}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG} ${PKG_MODULE}; "
