#!/bin/bash
#
. build_funcs

TARNAME=apcupsd
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/new/a
#TAR_EXT=.tar.gz
VERSION=3.14.4
VERSIONEXTRA=
BUILD=1

WEBPAGE=""

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 #patch -p1 < ${CWD}/
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

if [ ${DO_CONFIGURE} == "yes" ]
then
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
./configure --prefix=/usr \
            --sysconfdir=/etc/apcupsd \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --localstatedir=/var/lib \
	    --mandir=/usr/man
fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} || exit
(cd doc/latex
 make
)
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

make install DESTDIR=${PKG}

mv ${PKG}/etc/apcupsd/apcupsd.conf ${PKG}/etc/apcupsd/apcupsd.conf.new
mv ${PKG}/etc/rc.d/rc.apcupsd ${PKG}/etc/rc.d/rc.apcupsd.new
doinst_config etc/apcupsd/apcupsd.conf.new etc/rc.d/rc.apcupsd.new

rm ${PKG}/etc/rc.d/rc.6*

cp platforms/slackware/rc6.patch ${PKG}/install/slack-rc6.patch
cat >> ${PKG}/install/doinst.sh <<EOF
#
if ! grep -q etc/apcupsd/apccontrol etc/rc.d/rc.6
then
  echo "PATCH etc/rc.d/rc.6"
  cp -p etc/rc.d/rc.6 etc/rc.d/rc.6.`date +%Y%m%d%M%S`
  if ! patch -s etc/rc.d/rc.6 install/slack-rc6.patch
  then 
     echo "Patches could not be properly applied.  Please check"
     echo "etc/rc.d/rc.6 and edit it manually."
  fi
fi

EOF

cat >> ${PKG}/install/doinst.sh << EOF
if [ ! -e etc/rc.d/rc.local ]; then
        echo "#!/bin/sh" > etc/rc.d/rc.local
        chmod 755 etc/rc.d/rc.local
fi
run=\`grep "/etc/rc.d/rc.apcupsd" etc/rc.d/rc.local\`
if [[ "\${run}" == "" ]]; then
        echo "" >> etc/rc.d/rc.local
        echo "# start apcupsd" >> etc/rc.d/rc.local
        echo "if [ -x /etc/rc.d/rc.apcupsd ]; then" >> etc/rc.d/rc.local
        echo "  /etc/rc.d/rc.apcupsd start" >> etc/rc.d/rc.local
        echo "fi" >> etc/rc.d/rc.local
fi
EOF



#strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  ABOUT* AUTHORS COPYING* INSTALL* NEWS PLANS README* TODO DISCLAIMER ReleaseNotes VERIFYING doc/latex/apcupsd doc/latex/apcupsd.pdf \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "a daemon for controlling APC UPSes"
Apcupsd can be used for power mangement and controlling most of APC's 
UPS models on Unix and Windows machines. Apcupsd works with most of
APC's Smart-UPS models as well as most simple signalling models such 
a Back-UPS, and BackUPS-Office. During a power failure, apcupsd will
inform the users about the power failure and that a shutdown may 
occur. If power is not restored, a system shutdown will follow when 
the battery is exhausted, a timeout (seconds) expires, or runtime 
expires based on internal APC calculations determined by power 
consumption rates.

EOF

post_install

cd ${PKG}
su -c "chown -R root:root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}:${GROUP} ${PKG}"
