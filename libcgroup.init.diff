--- ./scripts/init.d/cgred.in.orig	2014-01-13 08:05:56.000000000 -0600
+++ ./scripts/init.d/cgred.in	2017-02-28 12:41:11.307424565 -0600
@@ -39,13 +39,12 @@
 # Sanity checks
 [ -x $CGRED_BIN ] || exit 1
 
-# Source function library & LSB routines
+# Source function library
 . /etc/rc.d/init.d/functions
-. /lib/lsb/init-functions
 
 # Read in configuration options.
-if [ -f "/etc/sysconfig/cgred.conf" ] ; then
-	. /etc/sysconfig/cgred.conf
+if [ -f /etc/cgred.conf ] ; then
+       . /etc/cgred.conf
 	OPTIONS="$NODAEMON $LOG"
 	if [ -n "$LOG_FILE" ]; then
 		OPTIONS="$OPTIONS --logfile=$LOG_FILE"
@@ -70,13 +69,13 @@
 {
 	echo -n $"Starting CGroup Rules Engine Daemon: "
 	if [ -f "$lockfile" ]; then
-		log_failure_msg "$servicename is already running with PID `cat ${pidfile}`"
+		echo "$servicename is already running with PID `cat ${pidfile}`"
 		return 0
 	fi
 	num=`grep "cgroup" /proc/mounts | awk '$3=="cgroup"' | wc -l`
 	if [ $num -eq 0 ]; then
 		echo
-		log_failure_msg $"Cannot find cgroups, is cgconfig service running?"
+		echo $"Cannot find cgroups, is cgconfig service running?"
 		return 1
 	fi
 	daemon --check $servicename --pidfile $pidfile $CGRED_BIN $OPTIONS
@@ -97,7 +96,7 @@
 {
 	echo -n $"Stopping CGroup Rules Engine Daemon..."
 	if [ ! -f $pidfile ]; then
-		log_success_msg
+		#log_success_msg
 		return 0
 	fi
 	killproc -p $pidfile -TERM "$processname"
@@ -143,13 +142,13 @@
 			echo $"Reloading rules configuration..."
 			kill -s 12 `cat ${pidfile}`
 			RETVAL=$?
-			if [ $RETVAL -eq 0 ] ; then
-				log_success_msg
-			else
-				log_failure_msg
-			fi
+			#if [ $RETVAL -eq 0 ] ; then
+			#	log_success_msg
+			#else
+			#	log_failure_msg
+			#fi
 		else
-			log_failure_msg "$servicename is not running."
+			echo "$servicename is not running."
 		fi
 		;;
 	*)
--- ./scripts/init.d/cgconfig.in.orig	2014-01-13 08:05:56.000000000 -0600
+++ ./scripts/init.d/cgconfig.in	2017-02-28 12:42:13.278423245 -0600
@@ -36,11 +36,6 @@
 servicename=cgconfig
 lockfile=/var/lock/subsys/$servicename
 
-#
-# Source LSB routines
-#
-. /lib/lsb/init-functions
-
 # read the config
 CREATE_DEFAULT=yes
 if [ -e /etc/sysconfig/cgconfig ]; then
@@ -54,8 +49,8 @@
 	    read user ctrl defaultcgroup <<< \
 		    $(grep -m1 '^\*[[:space:]]\+' /etc/cgrules.conf)
             if [ -n "$defaultcgroup" -a "$defaultcgroup" = "*" ]; then
-                log_warning_msg "/etc/cgrules.conf incorrect"
-                log_warning_msg "Overriding it"
+                echo "/etc/cgrules.conf incorrect"
+                echo "Overriding it"
                 defaultcgroup=
             fi
         fi
@@ -98,20 +93,20 @@
 start() {
         echo -n "Starting cgconfig service: "
 	if [ -f "$lockfile" ]; then
-            log_warning_msg "lock file already exists"
+            echo "lock file already exists"
             return 0
         fi
 
         if [ $? -eq 0 ]; then
                 if [ ! -s $CONFIG_FILE ]; then
-                    log_failure_msg $CONFIG_FILE "is not configured"
+                    echo $CONFIG_FILE "is not configured"
                     return 6
                 fi
 
                 $CGCONFIGPARSER_BIN -l $CONFIG_FILE
                 retval=$?
                 if [ $retval -ne 0 ]; then
-                    log_failure_msg "Failed to parse " $CONFIG_FILE
+                    echo "Failed to parse " $CONFIG_FILE
                     return 1
                 fi
         fi
@@ -123,18 +118,18 @@
         touch "$lockfile"
         retval=$?
         if [ $retval -ne 0 ]; then
-            log_failure_msg "Failed to touch $lockfile"
+            echo "Failed to touch $lockfile"
             return 1
         fi
-        log_success_msg
+        #log_success_msg
         return 0
 }
 
 stop() {
     echo -n "Stopping cgconfig service: "
-    cgclear
+    /usr/sbin/cgclear -l /etc/cgconfig.conf
     rm -f "$lockfile"
-    log_success_msg
+    #log_success_msg
     return 0
 }
 
