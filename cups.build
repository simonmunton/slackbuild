#!/bin/bash
#
. build_funcs

TARNAME=cups
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/new/c
#TAR_EXT=.tar.gz
VERSION=1.4.8
VERSIONEXTRA=-source
BUILD=1

WEBPAGE="http://www.cups.org/"

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 #patch -p1 < ${CWD}/
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

if [ ${DO_CONFIGURE} == "yes" ]
then
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
./configure \
            --disable-pam \
	    --disable-ssl

#--prefix=/usr \
#            --sysconfdir=/etc \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
#            --localstatedir=/var/lib \
#	    --mandir=/usr/man
fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

mkdir -p ${PKG}/etc/cups
mkdir -p ${PKG}/var/spool

make install BUILDROOT=${PKG}

# For full CUPS SMB support, you'll need to install the cups-samba
# package from the source in this directory.  There's no easy way
# to add that to a package build, and the requests aren't pouring in,
# so you'll have to install it yourself.  It's easy to do.

# However, this will get you the most useful SMB support for free.
( cd ${PKG}/usr/lib/cups/backend
  if [ ! -e smb ]; then
    ln -sf /usr/bin/smbspool smb
  fi
)

# Adjust for BSD init scripts.  Note that rc.cups will have to be
# started from somewhere, like rc.M or rc.inet2.
#( cd ${PKG}/etc/rc.d
#  mv init.d/cups rc.cups
#  rm -r init.d rc?.d )
( cd ${PKG}/etc
  mkdir rc.d
  mv init.d/cups rc.d/rc.cups
  rm -r init.d rc?.d )

# Handle this as a config file, and non-executable in a default install:
mv ${PKG}/etc/rc.d/rc.cups ${PKG}/etc/rc.d/rc.cups.new
chmod 644 ${PKG}/etc/rc.d/rc.cups.new

# Adjust/expand docs:
( mkdir -p ${PKG}/usr/doc
  mv ${PKG}/usr/share/doc/cups/* ${PKG}/usr/doc/cups-${VERSION}
  rm -rf ${PKG}/usr/share/doc
  cd ${PKG}/usr/doc
  ln -sf cups-${VERSION} cups )

# Apply no-clobber fix to conffiles:
( cd ${PKG}/etc/cups
  for file in * ; do
    if [ -f ${file} ]; then
      mv ${file} ${file}.new
    fi
  done )

# Use symlinks to certain binaries so that CUPS and LPRng can coexist:
SUFFIX=cups
for file in \
usr/bin/cancel \
usr/bin/lp \
usr/bin/lpq \
usr/bin/lpr \
usr/bin/lprm \
usr/bin/lpstat \
usr/sbin/lpc ; do
  ( cd ${PKG}
    mv ${file} ${file}-${SUFFIX}
    ( cd `dirname ${file}` ; ln -sf `basename ${file}`-${SUFFIX} `basename ${file}` )
  )
done

# Now fix the associated man pages:
mv ${PKG}/usr/share/man ${PKG}/usr
mv ${PKG}/usr/man/man1/cancel.1.gz ${PKG}/usr/man/man1/cancel-${SUFFIX}.1.gz
mv ${PKG}/usr/man/man1/lp.1.gz ${PKG}/usr/man/man1/lp-${SUFFIX}.1.gz
mv ${PKG}/usr/man/man1/lpq.1.gz ${PKG}/usr/man/man1/lpq-${SUFFIX}.1.gz
mv ${PKG}/usr/man/man1/lpr.1.gz ${PKG}/usr/man/man1/lpr-${SUFFIX}.1.gz
mv ${PKG}/usr/man/man1/lprm.1.gz ${PKG}/usr/man/man1/lprm-${SUFFIX}.1.gz
mv ${PKG}/usr/man/man1/lpstat.1.gz ${PKG}/usr/man/man1/lpstat-${SUFFIX}.1.gz
mv ${PKG}/usr/man/man8/lpc.8.gz ${PKG}/usr/man/man8/lpc-${SUFFIX}.8.gz
( cd ${PKG}/usr/man/man1
  ln -sf cancel-${SUFFIX}.1.gz cancel.1.gz
  ln -sf lp-${SUFFIX}.1.gz lp.1.gz
  ln -sf lpq-${SUFFIX}.1.gz lpq.1.gz
  ln -sf lpr-${SUFFIX}.1.gz lpr.1.gz
  ln -sf lprm-${SUFFIX}.1.gz lprm.1.gz
  ln -sf lpstat-${SUFFIX}.1.gz lpstat.1.gz
)
( cd ${PKG}/usr/man/man8
  ln -sf lpc-${SUFFIX}.8.gz lpc.8.gz
)

doinst_config etc/rc.d/rc.cups.new
cat << EOF >> ${PKG}/install/doinst.sh
for file in etc/cups/*.new ; do
  config \$file
done
EOF

mkdir -p ${PKG}/etc/modprobe.d
echo "blacklist usblp" > ${PKG}/etc/modprobe.d/blacklist.cups.conf

strip_binaries

fix_links

#compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

#fix_docs

(cd ${PKG}/usr/doc
 ln -sf cups-${VERSION} cups
)


#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "Common UNIX Printing System"
The Common UNIX Printing System provides a portable printing layer for
UNIX(R)-like operating systems. It has been developed by Easy Software
Products to promote a standard printing solution for all UNIX vendors
and users.  CUPS uses the Internet Printing Protocol ("IPP") as the
basis for managing print jobs and queues.  The CUPS package includes
System V and Berkeley command-line interfaces, a PostScript RIP
package for supporting non-PostScript printer drivers, and tools for
creating additional printer drivers and other CUPS services.

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
chmod 775 ${PKG}/var/cache/cups/rss ${PKG}/var/cache/cups; \
chmod 700 ${PKG}/etc/cups/ssl; \
chmod 511 ${PKG}/var/run/cups/certs; \
chmod 710 ${PKG}/var/spool/cups; \
chmod 1770 ${PKG}/var/spool/cups/tmp; \
chgrp lp ${PKG}/etc/cups ${PKG}/etc/cups/interfaces ${PKG}/etc/cups/ppd ${PKG}/etc/cups/ssl \
         ${PKG}/var/spool/cups ${PKG}/var/spool/cups/tmp ${PKG}/var/cache/cups ${PKG}/var/cache/cups/rss \
         ${PKG}/etc/cups/cupsd.conf.default.new ${PKG}/etc/cups/cupsd.conf.new ${PKG}/etc/cups/snmp.conf.new; \
chgrp sys ${PKG}/var/run/cups/certs; \
chmod 4755 ${PKG}/usr/bin/lppasswd; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
