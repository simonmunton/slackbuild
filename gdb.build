#!/bin/bash
#
. build_funcs

TARNAME=gdb
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/gnu/gdb
#TAR_EXT=.tar.gz
VERSION=7.6.2
VERSIONEXTRA=
BUILD=1

WEBPAGE=""

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
# patch -p0 < ${CWD}/gdb-backtrace-6.8.diff
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

if [ ${DO_CONFIGURE} == "yes" ]
then
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --localstatedir=/var/lib \
	    --mandir=/usr/man
fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

make install DESTDIR=${PKG}

# None of this stuff has ever been included in this package:
rm -f $PKG/usr/lib/{libbfd*,libiberty*,libopcodes*}
rmdir $PKG/usr/lib
rm -f $PKG/usr/info/{annotate*,bfd*,configure*,standards*}
rm -rf $PKG/usr/include

# Use the -tui option if you want this.
# Including a whole extra copy of the gdb binary is obnoxious:
rm -f $PKG/usr/bin/gdbtui $PKG/usr/man/man1/gdbtui.1*

strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

mkdir -p ${PKG}/usr/doc/${TARNAME}-${VERSION}/gdb
(cd gdb
 cp -a NEWS README TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}/gdb
 cp -a gdbserver/README \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}/README.gdbserver
)

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "the GNU symbolic debugger"
GDB, the GNU Project debugger, allows you to see what is going on 
inside another program while it executes -- or what another program
was doing at the moment it crashed.  GDB can do four main kinds of
things to help you catch bugs in the act:   1) Start your program,
specifying anything that might affect its behavior.  2) Make your
program stop on specified conditions.  3) Examine what has happened,
when your program has stopped.  4) Change things in your program, so
you can experiment with correcting the effects of one bug and go on
to learn about another.  The program being debugged can be written in
Ada, C, C++, Objective-C, Pascal and many other languages.

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
