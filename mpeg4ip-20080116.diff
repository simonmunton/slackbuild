--- mpeg4ip-20080116/common/video/iso-mpeg4/src/Makefile.am.orig	2006-02-09 17:57:29.000000000 +0000
+++ mpeg4ip-20080116/common/video/iso-mpeg4/src/Makefile.am	2019-07-14 16:00:44.328584301 +0100
@@ -1,5 +1,5 @@
 
-AM_CXXFLAGS = -D__TRACE_AND_STATS_ -D__DOUBLE_PRECISION_ -D_REENTRANT -DNOCONTROLS -fexceptions -Wall -Werror -D_OBSS_ @BILLS_CPPWARNINGS@
+AM_CXXFLAGS = -D__TRACE_AND_STATS_ -D__DOUBLE_PRECISION_ -D_REENTRANT -DNOCONTROLS -fexceptions -Wall -D_OBSS_ @BILLS_CPPWARNINGS@
 
 INCLUDES = -I$(srcdir)/../include
 
--- mpeg4ip-20080116/common/video/iso-mpeg4/configure.in.orig	2005-05-09 22:29:44.000000000 +0100
+++ mpeg4ip-20080116/common/video/iso-mpeg4/configure.in	2019-07-14 16:00:44.328584301 +0100
@@ -1,6 +1,6 @@
 dnl Process this file with autoconf to produce a configure script.
 AC_INIT([mpeg4-2000], 1.2.3)
-AM_CONFIG_HEADER(mpeg4-2000.h)
+AC_CONFIG_HEADERS(mpeg4-2000.h)
 dnl Detect the canonical host and target build environment
 AC_CANONICAL_HOST
 AC_CANONICAL_TARGET
--- mpeg4ip-20080116/common/video/iso-mpeg4/include/basic.hpp.orig	2005-05-09 22:29:45.000000000 +0100
+++ mpeg4ip-20080116/common/video/iso-mpeg4/include/basic.hpp	2019-07-14 16:00:44.328584301 +0100
@@ -153,7 +153,8 @@
 typedef long Long; 
 typedef unsigned long ULong; 
 typedef int Int; 
-typedef void Void; 
+//typedef void Void; 
+#define Void void
 typedef int Bool; 
 typedef long CoordI; 
 typedef double CoordD; 
--- mpeg4ip-20080116/lib/SDLAudio/configure.in.orig	2005-01-17 20:46:07.000000000 +0000
+++ mpeg4ip-20080116/lib/SDLAudio/configure.in	2019-07-14 16:00:44.330584301 +0100
@@ -47,6 +47,7 @@
 
 AC_LIBTOOL_WIN32_DLL
 AM_PROG_LIBTOOL
+AM_PROG_AS
 AC_PROG_MAKE_SET
 AC_PROG_CC
 AC_C_INLINE
--- mpeg4ip-20080116/lib/rtp/net_udp.c.orig	2007-09-18 21:52:01.000000000 +0100
+++ mpeg4ip-20080116/lib/rtp/net_udp.c	2019-07-14 16:09:51.047558216 +0100
@@ -163,9 +163,8 @@
 	va_end(ap);
 	rtp_message(LOG_ALERT, "ERROR: %s, (%d - %s)\n", buffer, e, ws_errs[i].errname);
 #else
-	uint32_t retlen;
 	va_start(ap, msg);
-	retlen = vsnprintf(buffer, blen, msg, ap);
+	vsnprintf(buffer, blen, msg, ap);
 	va_end(ap);
 	rtp_message(LOG_ALERT, "%s:%s", buffer, strerror(errno));
 #endif
@@ -514,7 +513,7 @@
 
 static char *udp_host_addr4(void)
 {
-  char    		 hname[MAXHOSTNAMELEN];
+  char    		 hname[MAXHOSTNAMELEN+1];
   struct hostent 		*hent;
   struct in_addr  	 iaddr;
 	
@@ -1113,7 +1112,7 @@
 {
      //TODO - In future use a list and add more that one src
      if(src != 	NULL) {
-         strncpy(G_Multicast_Src, src, sizeof(G_Multicast_Src));
+         strncpy(G_Multicast_Src, src, sizeof(G_Multicast_Src)-1);
          G_IGMP_V3 = 1;
      }
 }
--- mpeg4ip-20080116/lib/mp4v2/rtphint.cpp.orig	2007-04-30 21:29:28.000000000 +0100
+++ mpeg4ip-20080116/lib/mp4v2/rtphint.cpp	2019-07-14 16:06:16.973568430 +0100
@@ -342,7 +342,7 @@
 			  pSlash = strchr(pSlash, '/');
 			  if (pSlash != NULL) {
 			    pSlash++;
-			    if (pSlash != '\0') {
+			    if (*pSlash != '\0') {
 			      length = strlen(pRtpMap) - (pSlash - pRtpMap);
 			      *ppEncodingParams = (char *)MP4Calloc(length + 1);
 			      strncpy(*ppEncodingParams, pSlash, length);
--- mpeg4ip-20080116/lib/mp4v2/atom_standard.cpp.orig	2007-06-04 17:47:36.000000000 +0100
+++ mpeg4ip-20080116/lib/mp4v2/atom_standard.cpp	2019-07-14 16:07:11.904565809 +0100
@@ -22,15 +22,15 @@
 #include "mp4common.h"
 #include "atoms.h"
 
-static const char name[5]={0251,'n', 'a', 'm', '\0'};
-static const char art[5]={0251,'A', 'R', 'T', '\0'};
-static const char wrt[5]={0251,'w', 'r', 't', '\0'};
-static const char alb[5]={0251,'a', 'l', 'b', '\0'};
-static const char day[5]={0251,'d', 'a', 'y', '\0'};
-static const char too[5]={0251,'t', 'o', 'o', '\0'};
-static const char cmt[5]={0251,'c', 'm', 't', '\0'};
-static const char gen[5]={0251,'g', 'e', 'n', '\0'};
-static const char grp[5]={0251,'g', 'r', 'p', '\0'};
+static const char name[5]={(char)0251,'n', 'a', 'm', '\0'};
+static const char art[5]={(char)0251,'A', 'R', 'T', '\0'};
+static const char wrt[5]={(char)0251,'w', 'r', 't', '\0'};
+static const char alb[5]={(char)0251,'a', 'l', 'b', '\0'};
+static const char day[5]={(char)0251,'d', 'a', 'y', '\0'};
+static const char too[5]={(char)0251,'t', 'o', 'o', '\0'};
+static const char cmt[5]={(char)0251,'c', 'm', 't', '\0'};
+static const char gen[5]={(char)0251,'g', 'e', 'n', '\0'};
+static const char grp[5]={(char)0251,'g', 'r', 'p', '\0'};
 
 MP4StandardAtom::MP4StandardAtom (const char *type) : MP4Atom(type)
 {
--- mpeg4ip-20080116/lib/mp4v2/mp4atom.cpp.orig	2007-04-30 21:29:28.000000000 +0100
+++ mpeg4ip-20080116/lib/mp4v2/mp4atom.cpp	2019-07-14 16:03:30.189576387 +0100
@@ -264,11 +264,11 @@
       }
       break;
     case 0251:
-      static const char name[5]={0251,'n', 'a', 'm', '\0'};
-      static const char cmt[5]={0251,'c', 'm', 't', '\0'};
-      static const char cpy[5]={0251,'c', 'p', 'y', '\0'};
-      static const char des[5]={0251,'d', 'e', 's','\0'};
-      static const char prd[5]={0251, 'p', 'r', 'd', '\0'};
+      static const char name[5]={(char)0251,'n', 'a', 'm', '\0'};
+      static const char cmt[5]={(char)0251,'c', 'm', 't', '\0'};
+      static const char cpy[5]={(char)0251,'c', 'p', 'y', '\0'};
+      static const char des[5]={(char)0251,'d', 'e', 's','\0'};
+      static const char prd[5]={(char)0251, 'p', 'r', 'd', '\0'};
       if (ATOMID(type) == ATOMID(name) ||
 	  ATOMID(type) == ATOMID(cmt) ||
 	  ATOMID(type) == ATOMID(cpy) ||
--- mpeg4ip-20080116/configure.in.orig	2007-09-28 21:45:08.000000000 +0100
+++ mpeg4ip-20080116/configure.in	2019-07-14 16:00:44.326584301 +0100
@@ -1,7 +1,7 @@
 
 dnl Process this file with autoconf to produce a configure script.
 AC_INIT(mpeg4ip, 1.6.1)
-AM_CONFIG_HEADER(mpeg4ip_config.h)
+AC_CONFIG_HEADERS(mpeg4ip_config.h)
 dnl Prevent user from running just ./configure
 AC_CHECK_FILE(./bootstrapped, [did_bootstrap=yes], [did_bootstrap=no])
 if test x$did_bootstrap = xno; then
@@ -430,7 +430,7 @@
 	              [have_mp4live=false],
 		        [#include <sys/time.h>
 #include <sys/types.h>
-#include <linux/videodev.h>])
+#include <linux/videodev2.h>])
 	if test x$have_mp4live = xfalse; then
 	    KERNEL_VERSION=`uname -r`
 	    AC_CHECK_FILE(/lib/modules/$KERNEL_VERSION/build/include/linux/videodev2.h,
@@ -506,16 +506,16 @@
      else
         ffmpeg_add_libs=
      fi
-     AC_CHECK_LIB(avcodec, avcodec_init, 
+     AC_CHECK_LIB(avcodec, avcodec_register_all, 
 	          [have_ffmpeg=true], [have_ffmpeg=false])
      LIBS=$saved_LIBS
      if test x$have_ffmpeg = xtrue; then
         AC_DEFINE(HAVE_FFMPEG_INSTALLED, 1, [defined if ffmpeg is installed])
         FFMPEG_INC=
-        FFMPEG_LIB="-lavcodec -lz $ffmpeg_add_libs"
-        AC_CHECK_TYPES([AVRational], , , [#include <ffmpeg/avcodec.h>])
-	AC_CHECK_MEMBERS(AVCodecContext.time_base, , , [#include <ffmpeg/avcodec.h>])
-	AC_CHECK_DECLS([avcodec_decode_audio2], , ,[#include <ffmpeg/avcodec.h>])
+        FFMPEG_LIB="-lavcodec -lswscale -lz $ffmpeg_add_libs"
+        AC_CHECK_TYPES([AVRational], , , [#include <libavcodec/avcodec.h>])
+	AC_CHECK_MEMBERS(AVCodecContext.time_base, , , [#include <libavcodec/avcodec.h>])
+	AC_CHECK_DECLS([avcodec_decode_audio2], , ,[#include <libavcodec/avcodec.h>])
         AC_DEFINE(HAVE_FFMPEG, 1, [enable ffmpeg for mp4live])
 	AC_CHECK_LIB(amrnb, VADxEncoder_Interface_init, 
 		     [have_amr_nb=true], [have_amr_nb=false])
@@ -635,7 +635,7 @@
 else
   saved_LIBS="$LIBS"
   LIBS="$LIBS -lm -lz -lpthread"
-  AC_CHECK_LIB(x264, x264_encoder_open, [have_x264=true], [have_x264=false])
+  AC_CHECK_LIB(x264, x264_encoder_close, [have_x264=true], [have_x264=false])
   LIBS=$saved_LIBS
 fi
 if test x$have_x264 = xtrue; then
@@ -769,7 +769,7 @@
 
    if test x$USENASM = xtrue; then
 	AC_MSG_CHECKING(nasm version...)
-	BILLSNASM_arg=`nasm -r | tr '.' ' '`
+	BILLSNASM_arg=`nasm -v | tr '.' ' '`
         BILLSNASM_ret=`util/testnasm.sh $BILLSNASM_arg`
 	if test x$BILLSNASM_ret = x"yes"; then
 	   USENASM=true
--- mpeg4ip-20080116/player/lib/audio/faad/Makefile.am.orig	2007-09-18 21:52:04.000000000 +0100
+++ mpeg4ip-20080116/player/lib/audio/faad/Makefile.am	2019-07-14 16:00:44.329584301 +0100
@@ -33,6 +33,6 @@
 	transfo.h\
 	util.h
 INCLUDES = -I$(top_srcdir)/include
-AM_CFLAGS = -O2 -Werror -Wall -fexceptions -fno-strict-aliasing
+AM_CFLAGS = -O2 -Wall -fexceptions -fno-strict-aliasing
 
 EXTRA_DIST = COPYING libfaad60.dsp README libfaad.vcproj
--- mpeg4ip-20080116/player/src/media_utils.cpp.orig	2007-03-29 19:52:19.000000000 +0100
+++ mpeg4ip-20080116/player/src/media_utils.cpp	2019-07-14 16:00:44.329584301 +0100
@@ -605,7 +605,8 @@
 				  int have_audio_driver,
 				  control_callback_vft_t *cc_vft)
 {
-  char *slash, *cm;
+  const char *slash;
+  char *cm;
   uint64_t prog;
   session_desc_t *sdp;
 
--- mpeg4ip-20080116/player/plugin/video/ffmpeg/ffmpeg.cpp.orig	2007-07-02 21:26:03.000000000 +0100
+++ mpeg4ip-20080116/player/plugin/video/ffmpeg/ffmpeg.cpp	2019-07-14 16:00:44.329584301 +0100
@@ -295,11 +295,14 @@
       uint32_t offset = 0;
       do {
 	int got_picture;
-	offset += avcodec_decode_video(ffmpeg->m_c, 
+	AVPacket pkt;
+	av_init_packet( &pkt );
+	pkt.data = (uint8_t *)userdata + offset;
+	pkt.size = ud_size - offset;
+	offset += avcodec_decode_video2(ffmpeg->m_c, 
 				       ffmpeg->m_picture,
 				       &got_picture,
-				       (uint8_t *)userdata + offset, 
-				       ud_size - offset);
+				       &pkt);
       } while (offset < ud_size);
     }
 	
@@ -324,6 +327,10 @@
     ffmpeg_interface_unlock();
     free(ffmpeg->m_c);
   }
+  if (ffmpeg->img_convert_ctx)
+  {
+    sws_freeContext( ffmpeg->img_convert_ctx );
+  }
   CHECK_AND_FREE(ffmpeg->m_picture);
   free(ffmpeg);
 }
@@ -442,11 +449,14 @@
   int ret;
   do {
     int local_got_picture;
-    ret = avcodec_decode_video(ffmpeg->m_c, 
+    AVPacket pkt;
+    av_init_packet( &pkt );
+    pkt.data = buffer + bytes_used;
+    pkt.size = buflen - bytes_used;
+    ret = avcodec_decode_video2(ffmpeg->m_c, 
 			       ffmpeg->m_picture,
 			       &local_got_picture,
-			       buffer + bytes_used, 
-			       buflen - bytes_used);
+			       &pkt);
     bytes_used += ret;
     //ffmpeg_message(LOG_CRIT, "ffmpeg", "used %d %d", ret, local_got_picture);
     got_picture |= local_got_picture;
@@ -586,9 +596,22 @@
 	from.linesize[ix] = ffmpeg->m_picture->linesize[ix];
       }
       
-      img_convert(&to, PIX_FMT_YUV420P,
-		  &from, ffmpeg->m_c->pix_fmt,
-		  ffmpeg->m_c->width, ffmpeg->m_c->height);
+//      img_convert(&to, PIX_FMT_YUV420P,
+//		  &from, ffmpeg->m_c->pix_fmt,
+//		  ffmpeg->m_c->width, ffmpeg->m_c->height);
+
+      if (ffmpeg->img_convert_ctx == NULL)
+          ffmpeg->img_convert_ctx =
+	       sws_getContext(ffmpeg->m_c->width, ffmpeg->m_c->height,
+    		              ffmpeg->m_c->pix_fmt,
+            	              ffmpeg->m_c->width, ffmpeg->m_c->height,
+                	      PIX_FMT_YUV420P,
+                    	      SWS_BICUBIC, NULL, NULL, NULL);
+
+      sws_scale(ffmpeg->img_convert_ctx, from.data, from.linesize,
+                 0, ffmpeg->m_c->height,
+                 to.data, to.linesize);
+      
       ffmpeg->m_vft->video_filled_buffer(ffmpeg->m_ifptr,
 					 ffmpeg->have_cached_ts ?
 					 ffmpeg->cached_ts : ts);
--- mpeg4ip-20080116/player/plugin/video/ffmpeg/ffmpeg.h.orig	2007-07-02 21:26:03.000000000 +0100
+++ mpeg4ip-20080116/player/plugin/video/ffmpeg/ffmpeg.h	2019-07-14 16:00:44.329584301 +0100
@@ -24,10 +24,13 @@
 #ifndef __MPEG4IP_FFMPEG_H__
 #define __MPEG4IP_FFMPEG_H__ 1
 #define always_inline inline
+#define __STDC_CONSTANT_MACROS
+#include <stdint.h>
 #include "codec_plugin.h"
 extern "C" {
 #ifdef HAVE_FFMPEG_INSTALLED
-#include <ffmpeg/avcodec.h>
+#include <libavcodec/avcodec.h>
+#include <libswscale/swscale.h>
 #else
 #include <avcodec.h>
 #endif
@@ -45,6 +48,7 @@
   AVCodec *m_codec;
   AVCodecContext *m_c;
   AVFrame *m_picture;
+  struct SwsContext *img_convert_ctx;
   bool m_codec_opened;
   bool m_video_initialized;
   int m_did_pause;
--- mpeg4ip-20080116/player/plugin/audio/ffmpeg/ffmpeg.h.orig	2007-07-02 21:26:01.000000000 +0100
+++ mpeg4ip-20080116/player/plugin/audio/ffmpeg/ffmpeg.h	2019-07-14 16:00:44.329584301 +0100
@@ -23,10 +23,12 @@
  */
 #ifndef __MPEG4IP_FFMPEG_H__
 #define __MPEG4IP_FFMPEG_H__ 1
+#define __STDC_CONSTANT_MACROS
+#include <stdint.h>
 #include "codec_plugin.h"
 extern "C" {
 #ifdef HAVE_FFMPEG_INSTALLED
-#include <ffmpeg/avcodec.h>
+#include <libavcodec/avcodec.h>
 #else
 #include <avcodec.h>
 #endif
--- mpeg4ip-20080116/include/mpeg4ip.h.orig	2006-08-07 19:27:00.000000000 +0100
+++ mpeg4ip-20080116/include/mpeg4ip.h	2019-07-14 16:00:44.328584301 +0100
@@ -120,14 +120,6 @@
 #endif
 #include <sys/param.h>
 
-#ifdef __cplusplus
-extern "C" {
-#endif
-char *strcasestr(const char *haystack, const char *needle);
-#ifdef __cplusplus
-}
-#endif
-
 #define OPEN_RDWR O_RDWR
 #define OPEN_CREAT O_CREAT 
 #define OPEN_RDONLY O_RDONLY
--- mpeg4ip-20080116/server/mp4live/video_util_resize.h.orig	2005-03-25 20:40:05.000000000 +0000
+++ mpeg4ip-20080116/server/mp4live/video_util_resize.h	2019-07-14 16:00:44.326584301 +0100
@@ -90,7 +90,7 @@
 
 void CopyYuv(const uint8_t *fY, const uint8_t *fU, const uint8_t *fV,
 	     uint32_t fyStride, uint32_t fuStride, uint32_t fvStride,
-	     uint8_t *tY, uint8_t *tU, uint8_t *fV,
-	     uint32_t tyStride, uint32_t tvStride, uint32_t tvStride,
+	     uint8_t *tY, uint8_t *tU, uint8_t *tV,
+	     uint32_t tyStride, uint32_t tuStride, uint32_t tvStride,
 	     uint32_t w, uint32_t h);
 #endif
--- mpeg4ip-20080116/server/mp4live/mp4live.h.orig	2002-09-23 23:33:11.000000000 +0100
+++ mpeg4ip-20080116/server/mp4live/mp4live.h	2019-07-14 16:00:44.327584301 +0100
@@ -22,6 +22,7 @@
 
 #ifndef __MP4LIVE_H__
 #define __MP4LIVE_H__
+#define __STDC_CONSTANT_MACROS
 #include "mpeg4ip.h"
 #include <sys/types.h>
 #include <unistd.h>
--- mpeg4ip-20080116/server/mp4live/video_x264.cpp.orig	2007-07-03 14:47:57.000000000 +0100
+++ mpeg4ip-20080116/server/mp4live/video_x264.cpp	2019-07-14 16:00:44.328584301 +0100
@@ -318,7 +318,7 @@
   m_param.b_cabac = Profile()->GetBoolValue(CFG_X264_USE_CABAC) ? 1 : 0;
   m_param.pf_log = x264_log;
   m_param.i_threads = Profile()->GetIntegerValue(CFG_X264_THREADS);
-  m_pts_add = m_param.i_bframe ? (m_param.b_bframe_pyramid ? 2 : 1) : 0;
+  m_pts_add = m_param.i_bframe ? (m_param.i_bframe_pyramid ? 2 : 1) : 0;
   m_pts_add *= m_frame_time;
   debug_message("pts add "D64, m_pts_add);
 
--- mpeg4ip-20080116/server/mp4live/video_encoder_class.cpp.orig	2007-07-02 21:26:05.000000000 +0100
+++ mpeg4ip-20080116/server/mp4live/video_encoder_class.cpp	2019-07-14 16:00:44.327584301 +0100
@@ -27,7 +27,7 @@
 #ifdef HAVE_FFMPEG
 extern "C" {
 #ifdef HAVE_FFMPEG_INSTALLED
-#include <ffmpeg/avcodec.h>
+#include <libavcodec/avcodec.h>
 #else
 #include <avcodec.h>
 #endif
--- mpeg4ip-20080116/server/mp4live/audio_ffmpeg.cpp.orig	2006-09-29 20:55:42.000000000 +0100
+++ mpeg4ip-20080116/server/mp4live/audio_ffmpeg.cpp	2019-07-14 16:00:44.327584301 +0100
@@ -475,7 +475,7 @@
   m_avctx = avcodec_alloc_context();
   m_frame = avcodec_alloc_frame();
 
-  m_avctx->codec_type = CODEC_TYPE_AUDIO;
+  m_avctx->codec_type = AVMEDIA_TYPE_AUDIO;
   switch (m_media_frame) {
   case MP3AUDIOFRAME:
     m_avctx->codec_id = CODEC_ID_MP2;
--- mpeg4ip-20080116/server/mp4live/video_ffmpeg.cpp.orig	2007-01-30 21:53:45.000000000 +0000
+++ mpeg4ip-20080116/server/mp4live/video_ffmpeg.cpp	2019-07-14 16:00:44.327584301 +0100
@@ -225,7 +225,7 @@
   }
   if (wantKeyFrame) m_picture->pict_type = FF_I_TYPE; //m_picture->key_frame = 1;
   else //m_picture->key_frame = 0;
-    m_picture->pict_type = 0;
+    m_picture->pict_type = (enum AVPictureType) 0;
 
   m_picture->data[0] = (uint8_t *)pY;
   m_picture->data[1] = (uint8_t *)pU;
--- mpeg4ip-20080116/server/mp4live/video_ffmpeg.h.orig	2007-07-02 21:26:05.000000000 +0100
+++ mpeg4ip-20080116/server/mp4live/video_ffmpeg.h	2019-07-14 16:00:44.327584301 +0100
@@ -25,7 +25,7 @@
 #include "video_encoder.h"
 extern "C" {
 #ifdef HAVE_FFMPEG_INSTALLED
-#include <ffmpeg/avcodec.h>
+#include <libavcodec/avcodec.h>
 #else
 #include <avcodec.h>
 #endif
--- mpeg4ip-20080116/server/mp4live/audio_ffmpeg.h.orig	2007-07-02 21:26:04.000000000 +0100
+++ mpeg4ip-20080116/server/mp4live/audio_ffmpeg.h	2019-07-14 16:00:44.327584301 +0100
@@ -25,7 +25,7 @@
 #include "audio_encoder.h"
 extern "C" {
 #ifdef HAVE_FFMPEG_INSTALLED
-#include <ffmpeg/avcodec.h>
+#include <libavcodec/avcodec.h>
 #else
 #include <avcodec.h>
 #endif
