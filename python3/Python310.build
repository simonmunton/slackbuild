#!/bin/bash
#
. build_funcs

TARNAME=Python
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/new/p/python
#TAR_EXT=.tar.gz
VERSION=3.10.9
VERSIONEXTRA=
BUILD=2
WEBPAGE=""

#TAR_PROG=
#TAR_OPTS=
PKGNAME=python310
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 patch -p1 < ${CWD}/python3.readline.set_pre_input_hook.diff

 # We don't want a large libpython*.a.
 # patch -p1 < ${CWD}/python310.no-static-library.diff

if [ ${ARCH} == "x86_64" ]
then
  # Install to lib64 instead of lib.
  patch -p1 -b -z .orig< ${CWD}/python.sysconfig.py.x86_64.diff
  patch -p1 -b -z .orig< ${CWD}/python3.distutils.x86_64.diff
  patch -p1 -b -z .orig< ${CWD}/python3.setup.py.x86_64.diff
fi

 # Fix python3 path in cgi.py.
 sed -i '1s|^#.*/usr/local/bin/python|#!/usr/bin/python3|' Lib/cgi.py

 # If system we're building on already has Python3 with pip in site-packages,
 # ignore it and install pip anyway.
 sed -i 's|\("install",\)|\1 "--ignore-installed",|' Lib/ensurepip/__init__.py
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

PY_VER=${VERSION%.*}

# Location for Python site-packages:
SITEPK=${PKG}/opt/python3/lib${LIBDIRSUFFIX}/python${PY_VER}/site-packages
# same as above without $PKG
TOOLSDIR=/opt/python3/lib${LIBDIRSUFFIX}/python${PY_VER}/site-packages

PKGCFLAGS="-O2 -march=i686 ${CPUOPT}=i686"

if [ ${DO_CONFIGURE} == "yes" ]
then
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
./configure --prefix=/opt/python3 \
            --sysconfdir=/etc \
            --localstatedir=/var/lib \
	    --mandir=/opt/python3/man \
	    --libdir=/opt/python3/lib${LIBDIRSUFFIX} \
	    --with-platlibdir=lib${LIBDIRSUFFIX} \
	    --docdir=/usr/doc/python-${VERSION} \
	    --enable-ipv6 \
	    --enable-shared \
	    --with-system-expat \
	    --with-system-ffi \
	    --enable-loadable-sqlite-extensions \
	    --without-ensurepip \
	    --without-static-libpython


#cmake -DCMAKE_C_FLAGS:STRING="${SLKCFLAGS}" \
#      -DCMAKE_CXX_FLAGS:STRING="${SLKCFLAGS}" \
#      -DCMAKE_BUILD_TYPE=Release \
#      -DCMAKE_INSTALL_PREFIX=/usr \
#      -DMAN_INSTALL_DIR=/usr/man \
#      -DSYSCONF_INSTALL_DIR=/etc \
#      .

fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

mv ${PKG}/usr/doc/Python-${VERSION} ${PKG}/usr/doc/python-${VERSION}

make altinstall DESTDIR=${PKG}

# Remove to avoid overwriting a copy from Python2.
#rm -f ${PKG}/usr/bin/2to3

# We'll install the python-tools under site-packages:
mkdir -p ${SITEPK}
cp -a Tools/* ${SITEPK}

# Remove DOS batch/exe files.
find ${PKG} \( -name '*.exe' -o -name '*.bat' \) -exec rm -f '{}' \;

# Fix permissions on dynamic libraries.
find ${PKG} -type f -perm 555 -exec chmod 755 '{}' \;

( cd ${PKG}/opt/python3/bin
#  rm -f python idle3 pydoc3 python3 python3-config
  ln -s 2to3-3.10 2to3-3
  ln -s idle3.10 idle3
  ln -s pydoc3.10 pydoc3
  ln -s python3.10 python3
  ln -s python3.10-config python3-config

  # so python finds the library
  patchelf --set-rpath /opt/python3/lib${LIBDIRSUFFIX} python3.10
)

# remove libpython3.so to avoid clobbering slackware installed version
#( cd ${PKG}/opt/python3/lib${LIBDIRSUFFIX}
#  rm -f libpython3.so
#)

strip_binaries

fix_links

compress_manpages

compress_info

# Install docs:
mkdir -p ${PKG}/usr/doc/python-${VERSION}/Documentation

tar xf ${TARDIR}/python-${VERSION}-docs-text.tar.?z*
mv python-${VERSION}-docs-text/* ${PKG}/usr/doc/python-${VERSION}/Documentation

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO Misc \
  ${PKG}/usr/doc/python-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "object-oriented interpreted programming language"
Python is an interpreted, interactive, object-oriented programming
language that combines remarkable power with very clear syntax.  
Python's basic power can be extended with your own modules written in
C or C++.  Python is also adaptable as an extension language for
existing applications.

EOF

post_install

cd ${PKG}
su -c "chown -R root:root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}:${GROUP} ${PKG}"
