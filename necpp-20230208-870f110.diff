--- necpp/configure.ac.orig	2024-08-20 16:46:02.676335821 +0100
+++ necpp/configure.ac	2024-08-24 15:22:35.505794515 +0100
@@ -77,7 +77,7 @@
 
     LIBS="$LAPACK_LIBS $BLAS_LIBS $LIBS $FLIBS"
     AC_CHECK_LIB(
-    [lapack], [clapack_zgetrf], 
+    [openblas], [LAPACKE_zgetrf], 
     [AC_SUBST([LIBLAPACK], ["$LAPACK_LIBS $BLAS_LIBS $LIBS $FLIBS"]) AC_DEFINE([LAPACK], [1], [Define if you have liblapack])],
     [AC_MSG_FAILURE([lapack library test failed (--without-lapack to disable)])],
     [])
--- necpp/src/matrix_algebra.cpp.orig	2024-08-20 16:46:02.679335821 +0100
+++ necpp/src/matrix_algebra.cpp	2024-08-24 15:19:07.298780536 +0100
@@ -407,7 +407,9 @@
 
 extern "C"
 {
-#include <clapack.h>
+#include <lapacke.h>
+#define CblasColMajor 102
+#define CblasNoTrans 'N'
 }
 
 
@@ -478,8 +479,8 @@
     *                                singular, and division by zero will occur if it is used
     *                                to solve a system of equations.
     */
-    int32_t info = clapack_zgetrf (CblasColMajor, int32_t(n), int32_t(n), 
-                    (void*) a_in.data(), int32_t(ndim), ip.data());
+    int32_t info = LAPACKE_zgetrf (CblasColMajor, int32_t(n), int32_t(n), 
+                    reinterpret_cast<__complex__ double*>(a_in.data()), int32_t(ndim), ip.data());
     
     if (0 != info) {
         /*
@@ -510,8 +511,8 @@
 {
     DEBUG_TRACE("solve_lapack(" << n << "," << ndim << ")");
 
-    int info = clapack_zgetrs (CblasColMajor, CblasNoTrans, 
-        static_cast<int>(n), 1, (void*) a.data(), static_cast<int>(ndim), ip.data(), b.data(), static_cast<int>(n));
+    int info = LAPACKE_zgetrs (CblasColMajor, CblasNoTrans, 
+        static_cast<int>(n), 1, reinterpret_cast<__complex__ double*>(a.data()), static_cast<int>(ndim), ip.data(), reinterpret_cast<__complex__ double*>(b.data()), static_cast<int>(n));
     
     if (0 != info) {
         /*
