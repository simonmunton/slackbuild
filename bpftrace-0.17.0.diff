--- bpftrace-0.17.0/CMakeLists.txt.orig	2023-04-05 18:14:42.000000000 +0100
+++ bpftrace-0.17.0/CMakeLists.txt	2023-04-05 19:39:36.394926456 +0100
@@ -165,7 +165,7 @@
   endif()
 
   set(MIN_LLVM_MAJOR 6)
-  set(MAX_LLVM_MAJOR 15)
+  set(MAX_LLVM_MAJOR 16)
 
   if((${LLVM_VERSION_MAJOR} VERSION_LESS ${MIN_LLVM_MAJOR}) OR (${LLVM_VERSION_MAJOR} VERSION_GREATER ${MAX_LLVM_MAJOR}))
     message(SEND_ERROR "Unsupported LLVM version found via ${LLVM_INCLUDE_DIRS}: ${LLVM_VERSION_MAJOR}")
--- bpftrace-0.17.0/src/ast/passes/codegen_llvm.cpp.orig	2023-04-05 18:14:42.000000000 +0100
+++ bpftrace-0.17.0/src/ast/passes/codegen_llvm.cpp	2023-04-05 19:44:26.786912600 +0100
@@ -56,11 +56,17 @@
     throw std::runtime_error(
         "Could not find bpf llvm target, does your llvm support it?");
 
-  target_machine_.reset(target->createTargetMachine(LLVMTargetTriple,
-                                                    "generic",
-                                                    "",
-                                                    TargetOptions(),
-                                                    Optional<Reloc::Model>()));
+  target_machine_.reset(
+      target->createTargetMachine(LLVMTargetTriple,
+                                  "generic",
+                                  "",
+                                  TargetOptions(),
+#if LLVM_VERSION_MAJOR >= 16
+                                  std::optional<Reloc::Model>()
+#else
+                                  Optional<Reloc::Model>()
+#endif
+                                      ));
   target_machine_->setOptLevel(llvm::CodeGenOpt::Aggressive);
 
   module_->setTargetTriple(LLVMTargetTriple);
