--- kitinerary-24.12.0/src/lib/pdf/pdfdocument.cpp.orig	2024-12-05 16:45:40.000000000 +0000
+++ kitinerary-24.12.0/src/lib/pdf/pdfdocument.cpp	2025-01-02 22:34:52.986092382 +0000
@@ -40,9 +40,14 @@
     m_doc->m_popplerDoc->processLinks(&device, m_pageNum + 1);
     device.finalize();
     const auto pageRect = m_doc->m_popplerDoc->getPage(m_pageNum + 1)->getCropBox();
+#if KPOPPLER_VERSION < QT_VERSION_CHECK(25, 1, 0)
     std::unique_ptr<GooString> s(device.getText(pageRect->x1, pageRect->y1, pageRect->x2, pageRect->y2));
 
     m_text = QString::fromUtf8(s->c_str());
+#else
+    const auto s = device.getText(pageRect->x1, pageRect->y1, pageRect->x2, pageRect->y2);
+    m_text = QString::fromUtf8(s.c_str());
+#endif
     m_images = std::move(device.m_images);
     for (auto it = m_images.begin(); it != m_images.end(); ++it) {
         (*it).d->m_page = this;
@@ -107,8 +112,13 @@
 
     TextOutputDev device(nullptr, false, 0, false, false);
     d->m_doc->m_popplerDoc->displayPageSlice(&device, d->m_pageNum + 1, 72, 72, 0, false, true, false, -1, -1, -1, -1);
+#if KPOPPLER_VERSION < QT_VERSION_CHECK(25, 1, 0)
     std::unique_ptr<GooString> s(device.getText(l, t, r, b));
     return QString::fromUtf8(s->c_str());
+#else
+    const auto s = device.getText(l, t, r, b);
+    return QString::fromUtf8(s.c_str());
+#endif
 }
 
 int PdfPage::imageCount() const
