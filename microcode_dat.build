#!/bin/bash
#
. build_funcs

TARNAME=microcode
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/new/m
TAR_EXT=.dat
VERSION=20090927
VERSIONEXTRA=
BUILD=1

WEBPAGE="http://downloadcenter.intel.com/default.aspx"
# select processors, select the CPU you're interested in, go to Linux as the OS and download

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

pre_configure

mkdir -p ${PKG}/lib/firmware/intel-ucode

touch ${PKG}/lib/firmware/intel-ucode/microcode.bin
/usr/sbin/microcode_ctl -f ${FULL_TARNAME} -d ${PKG}/lib/firmware/intel-ucode/microcode.bin

mkdir -p ${PKG}/etc/udev/rules.d

cat > ${PKG}/etc/udev/rules.d/49-microcode.rules << EOF
# rewrite firmware file name to all-in-one Intel CPU microcode data file
SUBSYSTEM=="firmware", ENV{FIRMWARE}=="intel-ucode/*", ENV{FIRMWARE}="intel-ucode/microcode.bin"
EOF

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "Intel processor microcode"
The microcode data file for Linux contains the latest microcode 
definitions for all Intel processors.

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
