#!/bin/bash
#
. build_funcs

TARNAME=jack-audio-connection-kit
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/new/j
#TAR_EXT=.tar.gz
VERSION=0.124.1
VERSIONEXTRA=
BUILD=1

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 #patch -p1 < ${CWD}/
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

if [ ${DO_CONFIGURE} == "yes" ]
then
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --localstatedir=/var/lib \
	    --mandir=/usr/man \
            --with-default-tmpdir=/dev/shm \
	    ${EXTRA_CONFIGURE_FLAGS}
fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

make install DESTDIR=${PKG}

#strip_binaries

cat > ${PKG}/install/doinst.sh << EOF
if which setcap >& /dev/null
then
  setcap cap_sys_nice,cap_ipc_lock+pe usr/bin/jackd
fi

EOF

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "low-latency audio server"
JACK is a low-latency audio server, written primarily for the Linux
operating system. It can connect a number of different applications to
an audio device, as well as allowing them to share audio between
themselves. Its clients can run in their own processes (ie. as a
normal application), or can they can run within a JACK server (ie. a
"plugin").

JACK is different from other audio server efforts in that it has been
designed from the ground up to be suitable for professional audio
work. This means that it focuses on two key areas: synchronous
execution of all clients, and low latency operation.

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
