#!/bin/bash
#
. build_funcs

TARNAME=gtk
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/Source/gnome
#TAR_EXT=.tar.gz
VERSION=3.24.48
VERSIONEXTRA=
BUILD=1

WEBPAGE=""

#TAR_PROG=
#TAR_OPTS=
PKGNAME=gtk+3
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 patch -p1 < ${CWD}/gtk+3-8240.patch
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

mkdir _BuilD_
cd _BuilD_

PKGCFLAGS="-O2 -march=i686 ${CPUOPT}=i686"

if [ ${DO_CONFIGURE} == "yes" ]
then
if [ -f ../configure ]
then
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
../configure --prefix=/usr \
            --sysconfdir=/etc \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --localstatedir=/var/lib \
	    --mandir=/usr/man
elif [ -f ../CMakeLists.txt ]
then
cmake -DCMAKE_C_FLAGS:STRING="${SLKCFLAGS}" \
      -DCMAKE_CXX_FLAGS:STRING="${SLKCFLAGS}" \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DMAN_INSTALL_DIR=/usr/man \
      -DLIB_SUFFIX=${LIBDIRSUFFIX} \
      -DSYSCONF_INSTALL_DIR=/etc \
      ..
elif [ -f ../meson.build ]
then
  meson \
  --prefix=/usr \
  --libdir=lib${LIBDIRSUFFIX} \
  --libexecdir=/usr/libexec \
  --bindir=/usr/bin \
  --sbindir=/usr/sbin \
  --includedir=/usr/include \
  --datadir=/usr/share \
  --mandir=/usr/man \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --buildtype=release \
  -Dman=true \
  -Ddemos=true \
  -Dgtk_doc=true \
  -Dbroadway_backend=true \
  -Dexamples=false \
  -Dtests=false \
  -Dinstalled_tests=false \
  -Dwayland_backend=true \
  . .. || exit 1

fi

fi

if [ ${DO_MAKE} == "yes" ]
then
if [ -f ../meson.build ]
then
  ninja || exit
else
  make ${NUM_JOBS} || exit
fi
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

if [ -f ../meson.build ]
then
  DESTDIR=${PKG} ninja install
else
  make install DESTDIR=${PKG}
fi

# Don't clobber im-multipress.conf
mv ${PKG}/etc/gtk-3.0/im-multipress.conf ${PKG}/etc/gtk-3.0/im-multipress.conf.new

# Install a "starter" gtkrc
echo 'gtk-theme-name="Adwaita"' > ${PKG}/etc/gtk-3.0/gtkrc.new

# We need to have separate 32-bit and 64-bit binaries for places where we have
# two copies of the GTK+ package installed (we might have x86_64 and i586
# packages on the same system, for example.)
if [ "${LIBDIRSUFFIX}" = "64" ]; then
  mv ${PKG}/usr/bin/gtk-query-immodules-3.0{,-64}
  ( cd ${PKG}/usr/bin
    ln -sf gtk-query-immodules-3.0-64 gtk-query-immodules-3.0
  )
else
  mv ${PKG}/usr/bin/gtk-query-immodules-3.0{,-32}
  ( cd ${PKG}/usr/bin
    ln -sf gtk-query-immodules-3.0-32 gtk-query-immodules-3.0
  )
fi

# Install wrappers for the binaries:
cp $CWD/update-gtk-immodules-3.0 ${PKG}/usr/bin/update-gtk-immodules-3.0
chmod 0755 ${PKG}/usr/bin/update-*


doinst_config etc/gtk-3.0/gtkrc.new
doinst_config etc/gtk-3.0/im-multipress.conf.new

cat << EOF >> ${PKG}/install/doinst.sh

rm -f etc/gtk-3.0/gtkrc.new

chroot . rm -f /usr/share/icons/*/icon-theme.cache 1> /dev/null 2> /dev/null

EOF

cd ..

strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "multi-platform toolkit for GUIs"
This is GTK+, a multi-platform toolkit for creating graphical user
interfaces.  Offering a complete set of widgets, GTK+ is suitable for
projects ranging from small one-off projects to complete application
suites.

EOF

post_install

cd ${PKG}
su -c "chown -R root:root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}:${GROUP} ${PKG}"
