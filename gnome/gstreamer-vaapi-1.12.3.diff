--- gstreamer-vaapi-1.12.3/gst-libs/gst/vaapi/gstvaapiutils.c.orig	2017-06-20 07:40:00.000000000 +0100
+++ gstreamer-vaapi-1.12.3/gst-libs/gst/vaapi/gstvaapiutils.c	2017-11-26 14:40:29.560979067 +0000
@@ -46,8 +46,13 @@
 #define STRCASE(x)      case x: return STRINGIFY(x)
 
 #if VA_CHECK_VERSION (0,40,0)
+#if VA_CHECK_VERSION (1,0,0)
+static void
+gst_vaapi_log (void *context, const char *message)
+#else
 static void
 gst_vaapi_log (const char *message)
+#endif
 {
   gchar *msg;
 
@@ -67,8 +72,12 @@
   VAStatus status;
 
 #if VA_CHECK_VERSION (0,40,0)
+#if VA_CHECK_VERSION (1,0,0)
+  vaSetInfoCallback (dpy, gst_vaapi_log, NULL);
+#else
   vaSetInfoCallback (gst_vaapi_log);
 #endif
+#endif
 
   status = vaInitialize (dpy, &major_version, &minor_version);
   if (!vaapi_check_status (status, "vaInitialize()"))
--- gstreamer-vaapi-1.12.3/configure.orig	2017-09-18 13:23:59.000000000 +0100
+++ gstreamer-vaapi-1.12.3/configure	2017-11-26 14:37:11.986978339 +0000
@@ -18008,12 +18008,12 @@
         pkg_cv_LIBVA_CFLAGS="$LIBVA_CFLAGS"
     else
         if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libva >= \$VAAPI_REQ libva < 0.99.0\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "libva >= $VAAPI_REQ libva < 0.99.0") 2>&5
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libva >= \$VAAPI_REQ libva < 1.99.0\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "libva >= $VAAPI_REQ libva < 1.99.0") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_LIBVA_CFLAGS=`$PKG_CONFIG --cflags "libva >= $VAAPI_REQ libva < 0.99.0" 2>/dev/null`
+  pkg_cv_LIBVA_CFLAGS=`$PKG_CONFIG --cflags "libva >= $VAAPI_REQ libva < 1.99.0" 2>/dev/null`
 else
   pkg_failed=yes
 fi
@@ -18026,12 +18026,12 @@
         pkg_cv_LIBVA_LIBS="$LIBVA_LIBS"
     else
         if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libva >= \$VAAPI_REQ libva < 0.99.0\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "libva >= $VAAPI_REQ libva < 0.99.0") 2>&5
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libva >= \$VAAPI_REQ libva < 1.99.0\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "libva >= $VAAPI_REQ libva < 1.99.0") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_LIBVA_LIBS=`$PKG_CONFIG --libs "libva >= $VAAPI_REQ libva < 0.99.0" 2>/dev/null`
+  pkg_cv_LIBVA_LIBS=`$PKG_CONFIG --libs "libva >= $VAAPI_REQ libva < 1.99.0" 2>/dev/null`
 else
   pkg_failed=yes
 fi
@@ -18050,14 +18050,14 @@
         _pkg_short_errors_supported=no
 fi
         if test $_pkg_short_errors_supported = yes; then
-	        LIBVA_PKG_ERRORS=`$PKG_CONFIG --short-errors --errors-to-stdout --print-errors "libva >= $VAAPI_REQ libva < 0.99.0"`
+	        LIBVA_PKG_ERRORS=`$PKG_CONFIG --short-errors --errors-to-stdout --print-errors "libva >= $VAAPI_REQ libva < 1.99.0"`
         else
-	        LIBVA_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "libva >= $VAAPI_REQ libva < 0.99.0"`
+	        LIBVA_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "libva >= $VAAPI_REQ libva < 1.99.0"`
         fi
 	# Put the nasty error message in config.log where it belongs
 	echo "$LIBVA_PKG_ERRORS" >&5
 
-	as_fn_error $? "Package requirements (libva >= $VAAPI_REQ libva < 0.99.0) were not met:
+	as_fn_error $? "Package requirements (libva >= $VAAPI_REQ libva < 1.99.0) were not met:
 
 $LIBVA_PKG_ERRORS
 
