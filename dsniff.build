#!/bin/bash
#
. build_funcs

TARNAME=dsniff
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/new/d
#TAR_EXT=.tar.gz
VERSION=2.4
VERSIONEXTRA=b1
BUILD=1

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 patch -p1 < ${CWD}/dsniff_01_time.h.dpatch
 patch -p1 < ${CWD}/dsniff_02_mailsnarf_corrupt.dpatch
 patch -p1 < ${CWD}/dsniff_03_pcap_read_dump.dpatch
 patch -p1 < ${CWD}/dsniff_04_multiple_intf.dpatch
 patch -p1 < ${CWD}/dsniff_05_amd64_fix.dpatch
 patch -p1 < ${CWD}/dsniff_06_urlsnarf_zeropad.dpatch
 patch -p1 < ${CWD}/dsniff_07_libnet_1.1.dpatch
 patch -p1 < ${CWD}/dsniff_08_checksum.dpatch
 patch -p1 < ${CWD}/dsniff_08_openssl-0.9.8.dpatch
 patch -p1 < ${CWD}/dsniff_09_sshcrypto.dpatch
 patch -p1 < ${CWD}/dsniff_09_sysconf_clocks.dpatch
 patch -p1 < ${CWD}/dsniff_10_urlsnarf_escape.dpatch
 patch -p1 < ${CWD}/dsniff_11_string_header.dpatch
 patch -p1 < ${CWD}/dsniff_12_arpa_inet_header.dpatch
 patch -p1 < ${CWD}/dsniff_13_pop_with_version.dpatch
 patch -p1 < ${CWD}/dsniff_14_obsolete_time.dpatch
 patch -p1 < ${CWD}/dsniff_15_checksum_libnids.dpatch
 patch -p1 < ${CWD}/dsniff_20_debian_dirs.dpatch

)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

if [ ${DO_CONFIGURE} == "yes" ]
then
CFLAGS="-O2 -march=i486 ${CPUOPT}=i686" \
CXXFLAGS="-O2 -march=i486 ${CPUOPT}=i686" \
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --localstatedir=/var/lib \
	    --mandir=/usr/man
fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

make install install_prefix=${PKG}

#strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc <<EOF "network auditing and penetration testing tools"
dsniff is a collection of tools for network auditing and penetration 
testing. dsniff, filesnarf, mailsnarf, msgsnarf, urlsnarf, and webspy 
passively monitor a network for interesting data (passwords, e-mail, 
files, etc.). arpspoof, dnsspoof, and macof facilitate the 
interception of network traffic normally unavailable to an attacker 
(e.g, due to layer-2 switching). sshmitm and webmitm implement active 
monkey-in-the-middle attacks against redirected SSH and HTTPS sessions 
by exploiting weak bindings in ad-hoc PKI.

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
