#!/bin/bash
#
. build_funcs

TARNAME=linphone-desktop
TARNAMEEXTRA=
TARSEP="-"
TARDIR=${SOURCE}/l/linphone
#TAR_EXT=.tar.gz
VERSION=6.0.1
VERSIONEXTRA=
BUILD=1

WEBPAGE="https://gitlab.linphone.org/BC/public/linphone-desktop"
# https://www.linphone.org/home/

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 patch -p1 < ${CWD}/linphone-desktop-6.0.1.diff

# git submodule foreach --recursive git tag -m "" 0.0.0
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

mkdir _BuilD_
cd _BuilD_

PKGCFLAGS="-O2 -march=i686 ${CPUOPT}=i686"

export CMAKE_POLICY_VERSION_MINIMUM=3.5

if [ ${DO_CONFIGURE} == "yes" ]
then
if [ -f ../configure ]
then
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
../configure --prefix=/usr \
            --sysconfdir=/etc \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --localstatedir=/var/lib \
	    --mandir=/usr/man
elif [ -f ../CMakeLists.txt ]
then
cmake -DCMAKE_C_FLAGS:STRING="${SLKCFLAGS}" \
      -DCMAKE_CXX_FLAGS:STRING="${SLKCFLAGS}" \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DMAN_INSTALL_DIR=/usr/man \
      -DLIB_SUFFIX=${LIBDIRSUFFIX} \
      -DSYSCONF_INSTALL_DIR=/etc \
      -DLINPHONESDK_VERSION=${VERSION} \
      -DNABLE_NON_FREE_FEATURES=ON \
      -DENABLE_GPL_THIRD_PARTIES=on \
      -DENABLE_G729=on \
      -DENABLE_G729B_CNG=on \
      -DBUILD_OPENLDAP_SHARED_LIBS=off \
      -DLINPHONESDK_VERSION="5.4.42" \
      ..
elif [ -f ../meson.build ]
then
  meson --prefix=/usr . ..
fi

fi

if [ ${DO_MAKE} == "yes" ]
then
if [ -f ../meson.build ]
then
  ninja || exit
else
  make ${NUM_JOBS} || exit
fi
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

if [ -f ../meson.build ]
then
  DESTDIR=${PKG} ninja install
else
  make install
fi

mkdir -p ${PKG}/opt/linphone
cp -pr OUTPUT/* ${PKG}/opt/linphone

cd ..

mkdir -p ${PKG}/usr/bin
ln -s /opt/linphone/bin/linphone6 ${PKG}/usr/bin

mkdir -p ${PKG}/usr/share/{applications,icons/hicolor,sounds}
ln -s /opt/linphone/share/applications/* ${PKG}/usr/share/applications
ln -s /opt/linphone/share/sounds/linphone ${PKG}/usr/share/sounds

[ -d ${PKG}/opt/linphone/share/icons/hicolor ] &&
(
  cd ${PKG}/opt/linphone/share/icons/hicolor
  find . -type f | while read f
  do
    d=$(dirname $f)
    mkdir -p ${PKG}/usr/share/icons/hicolor/$d
    ln -s /opt/linphone/share/icons/hicolor/${f#./} ${PKG}/usr/share/icons/hicolor/$d
  done
)

[ -d Linphone/data/icon/hicolor ] &&
(
  cd Linphone/data/icon/hicolor
  find . -type f | while read f
  do
    echo $f
    d=$(dirname $f)
    mkdir -p ${PKG}/usr/share/icons/hicolor/$d
    cp $f ${PKG}/usr/share/icons/hicolor/$d/linphone.png
  done

)

strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF
EOF

post_install

cd ${PKG}
su -c "chown -R root:root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}:${GROUP} ${PKG}"
