#!/bin/bash
#
. build_funcs

TARNAME=jdk
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/new/j/java/Sun
TAR_EXT=.bin
VERSION=6u33
VERSIONEXTRA=-linux-i586
BUILD=1

WEBPAGE=""

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
ARCH=i586

case `uname -m` in
    x86_64)
	VERSIONEXTRA=-linux-x64
	ARCH=x86_64
	;;
esac



FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

pre_configure

if [ ${DO_CONFIGURE} == "yes" ]
then
:
fi

if [ ${DO_MAKE} == "yes" ]
then
:
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

(cd ${PKG}
 mkdir -p usr/lib${LIBDIRSUFFIX}
 cd usr/lib${LIBDIRSUFFIX}
 echo yes | sh ${FULL_TARNAME} -noregister >& /dev/null

 f=`echo jdk*`
 mv $f java
 ln -sf java $f

 cd ../..
 mkdir -p etc/profile.d
 cp -a ${CWD}/jdk.{sh,csh} etc/profile.d
 sed -i "s@usr/lib@usr/lib${LIBDIRSUFFIX}@" etc/profile.d/jdk.{sh,csh}
 chmod 755 etc/profile.d/*

 mkdir -p usr/lib${LIBDIRSUFFIX}/mozilla/plugins

 ( cd usr/lib${LIBDIRSUFFIX}/mozilla/plugins
   if [ ! -n "${LIBDIRSUFFIX}" ]
   then
#     ln -sf /usr/lib${LIBDIRSUFFIX}/java/jre/plugin/i386/ns7/libjavaplugin_oji.so libjavaplugin_oji.so
     ln -sf /usr/lib${LIBDIRSUFFIX}/java/jre/lib/i386/libnpjp2.so .
   else
     ln -sf /usr/lib${LIBDIRSUFFIX}/java/jre/lib/amd64/libnpjp2.so .
   fi
 )
)

cat > ${PKG}/install/doinst.sh << EOF
# Clean up a potential upgrade mess caused by changing the
# installation directory to /usr/lib/java/:
if [ -L usr/lib${LIBDIRSUFFIX}/java ]; then
  rm -rf usr/lib${LIBDIRSUFFIX}/java
  mkdir -p usr/lib${LIBDIRSUFFIX}/java/man
  mkdir -p usr/lib${LIBDIRSUFFIX}/java/jre/lib/i386/server
  mkdir -p usr/lib${LIBDIRSUFFIX}/java/jre/javaws
  mkdir -p usr/lib${LIBDIRSUFFIX}/java/jre/bin
  mkdir -p usr/lib${LIBDIRSUFFIX}/java/bin
  mkdir -p usr/lib${LIBDIRSUFFIX}/java/jre/lib/i386/client
  mkdir -p usr/lib${LIBDIRSUFFIX}/mozilla/plugins
fi
if [ -L ControlPanel ]; then
  rm -f ControlPanel
fi
if [ -L ja ]; then
  rm -f ja
fi
if [ -L javaws ]; then
  rm -f javaws
fi
if [ -L libjsig.so ]; then
  rm -f libjsig.so
fi
# End cleanup.
EOF

#strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

ln -s /usr/lib/java/{README*,register*,COPYRIGHT,LICENSE} ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "Java(TM) 2 Platform Standard Edition Development Kit 6.0"
The Java 2 SDK software includes tools for developing, testing, and
running programs written in the Java programming language.  This
package contains everything you need to run Java(TM).

For additional information, refer to this Sun Microsystems web page:
  http://java.sun.com/

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
