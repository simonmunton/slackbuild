#!/bin/bash
#
. build_funcs

TARNAME=jsoncpp
TARNAMEEXTRA=-src
TARSEP="-"
TARDIR=~/tmp/new/j
#TAR_EXT=.tar.gz
VERSION=0.6.0-rc2
VERSIONEXTRA=
BUILD=1

WEBPAGE="http://jsoncpp.sourceforge.net/"

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
mv ${TARNAME}${TARNAMEEXTRA}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 patch -p1 < ${CWD}/jsoncpp-0.6.0-rc2.diff
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

PKGCFLAGS="-O2 -march=i686 ${CPUOPT}=i686"

if [ ${DO_CONFIGURE} == "yes" ]
then
:
#CFLAGS="${SLKCFLAGS}" \
#CXXFLAGS="${SLKCFLAGS}" \
#./configure --prefix=/usr \
#            --sysconfdir=/etc \
#            --libdir=/usr/lib${LIBDIRSUFFIX} \
#            --localstatedir=/var/lib \
#	    --mandir=/usr/man

#cmake -DCMAKE_C_FLAGS:STRING="${SLKCFLAGS}" \
#      -DCMAKE_CXX_FLAGS:STRING="${SLKCFLAGS}" \
#      -DCMAKE_BUILD_TYPE=Release \
#      -DCMAKE_INSTALL_PREFIX=/usr \
#      -DMAN_INSTALL_DIR=/usr/man \
#      -DLIB_SUFFIX=${LIBDIRSUFFIX} \
#      -DSYSCONF_INSTALL_DIR=/etc \
#      .

fi

if [ ${DO_MAKE} == "yes" ]
then
scons platform=linux-gcc ${NUM_JOBS} prefix=/usr || exit
#make ${NUM_JOBS} || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

#scons platform=linux-gcc prefix=/usr install destdir=${PKG}
#make install DESTDIR=${PKG}

mkdir -p ${PKG}/usr/lib${LIBDIRSUFFIX}/pkgconfig ${PKG}/usr/include/jsoncpp/json

V=`sed -r s/-rc[0-9]+\$// version`
cp libs/linux-gcc-*/libjson_linux-gcc-*_libmt.so ${PKG}/usr/lib${LIBDIRSUFFIX}/libjsoncpp.so.${V}
ln -s libjsoncpp.so.${V} ${PKG}/usr/lib${LIBDIRSUFFIX}/libjsoncpp.so.${V%.*.*}
ln -s libjsoncpp.so.${V} ${PKG}/usr/lib${LIBDIRSUFFIX}/libjsoncpp.so
cp libs/linux-gcc-*/libjson_linux-gcc-*_libmt.a ${PKG}/usr/lib/libjsoncpp.a

cp include/json/* ${PKG}/usr/include/jsoncpp/json

#mkdir -p ${PKG}/usr/doc/jsoncpp-api-html
#cp dist/doxygen/jsoncpp-api-html-$(V)*/* $(PKG)/usr/share/doc/jsoncpp-api-html

cat > ${PKG}/usr/lib${LIBDIRSUFFIX}/pkgconfig/jsoncpp.pc << EOF
prefix=/usr
libdir=\${prefix}/lib${LIBDIRSUFFIX}
includedir=\${prefix}/include/jsoncpp

version = ${V}

name = jsoncpp
pkgname = libjsoncpp0

Name: \${name}
Version: \${version}
Description: Jsoncpp library version ${V}
Cflags: -I\${includedir}
Libs: -L\${libdir} -ljsoncpp
EOF

strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "C++ JSON reader/writer"
jsoncpp is an implementation of a JSON (http://json.org) reader and 
writer in C++. JSON (JavaScript Object Notation) is a lightweight 
data-interchange format. It is easy for humans to read and write. It 
is easy for machines to parse and generate.

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
