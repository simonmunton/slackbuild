#!/bin/bash
#
. build_funcs

TARNAME=ghostscript
#TARNAME=gnu-ghostscript
TARNAMEEXTRA=
TARDIR=${SOURCE}/g
#TARDIR=${SOURCE}/gnu/ghostscript
#TAR_EXT=.tar.gz
VERSION=9.55.0
VERSIONEXTRA=
BUILD=1

#TAR_PROG=
#TAR_OPTS=
PKGNAME=ghostscript
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}-${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 patch -p1 < ${CWD}/ghostscript-9.55.0-rangecheck.patch

# Remove unmaintained garbage:
rm -rf freetype jpeg lcms2 libpng libtiff png tiff zlib

# Regenerate ./configure.  Needed if patched, or to prevent libtool mismatch.
autoreconf --force --install
( cd jbig2dec ; autoreconf --force --install )
( cd ijs ; autoreconf --force --install )

)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms


if [ ${DO_CONFIGURE} == "yes" ]
then
#libtoolize -f
cd ijs
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --localstatedir=/var/lib \
	    --mandir=/usr/man \
	    --enable-shared=yes \
	    --enable-static=no
cd ..

CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --localstatedir=/var/lib \
	    --mandir=/usr/man \
	    --docdir=/usr/share/ghostscript/${VERSION}/tmpdoc \
	    --with-fontpath=/usr/share/fonts/TTF \
	    --with-ijs \
	    --disable-compile-inits \
	    --enable-dynamic \
	    --with-system-libtiff \
	    --enable-cups \

#	    --with-drivers=ALL \
#	    --with-jbig2dec \
#	    --with-jasper \
#	    --with-gimp-print \
#	    --with-install-cups \
#	    --with-x

#	    --with-omni \

fi

if [ ${DO_MAKE} == "yes" ]
then
#make clean soclean
cd ijs
make ${NUM_JOBS} || exit
cd ..
make ${NUM_JOBS} || exit
make so ${NUM_JOBS} || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

cd ijs
make install DESTDIR=${PKG}
cd ..
make install DESTDIR=${PKG}
make soinstall DESTDIR=${PKG}

#ln -s /usr/share/ghostscript/${VERSION}/doc ${PKG}/usr/doc/${TARNAME}-${VERSION}/doc

# Add back ijs-config, which is needed by at least gutenprint to find IJS
# and produce a ghostscript driver:
cat ${CWD}/ghostscript-ijs-config | sed -e "s/lib64/lib${LIBDIRSUFFIX}/g" > ${PKG}/usr/bin/ijs-config
chmod 755 ${PKG}/usr/bin/ijs-config

# Replace the default cidfmap with one containing additional
# support for CJK printing:

if [ -r ${PKG}/usr/share/ghostscript/*.*/Resource/Init/cidfmap ]; then
  SHARE_VERSION=$(echo ${PKG}/usr/share/ghostscript/*.*/Resource/Init/cidfmap | rev | cut -f 4 -d / | rev)
  mv ${PKG}/usr/share/ghostscript/${SHARE_VERSION}/Resource/Init/cidfmap ${PKG}/usr/share/ghostscript/${SHARE_VERSION}/Resource/Init/cidfmap.default.ghostscript-${VERSION}
  cat ${CWD}/ghostscript-cidfmap > ${PKG}/usr/share/ghostscript/${SHARE_VERSION}/Resource/Init/cidfmap.new

  doinst_config usr/share/ghostscript/${SHARE_VERSION}/Resource/Init/cidfmap.new
fi

# gs9.23 fails if you try to have --docdir put things in the proper place.
# Not much choice but to have things put in the wrong place and then move them.
# First, remove broken symlinks:
rm -f ${PKG}/usr/share/ghostscript/${VERSION}/doc ${PKG}/usr/share/ghostscript/${VERSION}/tmpdoc/${VERSION}/${VERSION}
# Then, move the docs to the proper location:
mv ${PKG}/usr/share/ghostscript/${VERSION}/tmpdoc/${VERSION} ${PKG}/usr/share/ghostscript/${VERSION}/doc
# Remove this (probably empty) directory:
rm -rf ${PKG}/usr/share/ghostscript/${VERSION}/tmpdoc
# And finally, pray for upstream to quit drinking while coding. ;-)

# Add a documentation directory:
mkdir -p ${PKG}/usr/doc/${TARNAME}-${VERSION}
( cd doc
  cp -a \
    AUTHORS COPYING* ../LICENSE* README* \
    ${PKG}/usr/doc/${TARNAME}-${VERSION}
)
( cd ${PKG}/usr/doc/${TARNAME}-${VERSION}
  ln -sf /usr/share/ghostscript/${VERSION}/doc doc
)

# Version 9.02 fails to install History9.htm, but also the full unabridged
# history of Ghostscript is not required here.  See the source for that.
( cd doc
  cp -a \
    History*.htm \
    ${PKG}/usr/share/ghostscript/${VERSION}/doc
  rm -f ${PKG}/usr/share/ghostscript/${VERSION}/doc/History{1,2,3,4,5,6,7,8}.htm
  # More cruft:
  rm -f ${PKG}/usr/share/ghostscript/${VERSION}/doc/Details{1,2,3,4,5,6,7,8}.htm
  # This is also bloat:
  rm -f ${PKG}/usr/share/ghostscript/${VERSION}/doc/*.pdf
  chown root:root ${PKG}/usr/share/ghostscript/${VERSION}/doc/History*htm
  chmod 644 ${PKG}/usr/share/ghostscript/${VERSION}/doc/History*htm
)

# Install example files:
rm -rf ${PKG}/usr/share/ghostscript/${VERSION}/examples
cp -a examples ${PKG}/usr/share/ghostscript/${VERSION}



#cp -a examples/cjk ${PKG}/usr/share/ghostscript/${VERSION}/examples/

#mkdir -p ${PKG}/usr/share/cups/mime
#mv ${PKG}/etc/cups/*.convs ${PKG}/usr/share/cups/mime
#rmdir -p ${PKG}/etc/cups

strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO doc/COPYING doc/README LICENSE \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width------------------------------|
make_slack_desc << EOF "GPL Ghostscript"
GPL Ghostscript is an interpreter of Adobe Systems' PostScript(tm) 
and Portable Document Format (PDF) languages.  Ghostscript is an 
essential part of the printing subsystem, taking PostScript output 
from applications and converting it into an appropriate printer or 
display format. Ghostscript supports many printers directly, and more 
are supported through add-on packages.

EOF

post_install

cd ${PKG}
su -c "chown -R root:root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}:${GROUP} ${PKG}"
