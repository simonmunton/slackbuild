#!/bin/bash
#
. build_funcs

TARNAME=openscad
TARNAMEEXTRA=
TARSEP="-"
TARDIR=${SOURCE}/o
#TAR_EXT=.tar.gz
VERSION=2021.01
VERSIONEXTRA=.src
BUILD=14

WEBPAGE="https://www.openscad.org/"

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 patch -p1 < ${CWD}/openscad-patch-out-test-for-mcad.patch
 patch -p1 < ${CWD}/openscad-don-t-override-OPENSCADPATH.patch
# patch -p1 < ${CWD}/openscad-Report-Debian-versions-in-test_pretty_print.patch
 patch -p1 < ${CWD}/openscad-test_pretty_print-remove-a-pathname-normalization-st.patch
 patch -p1 < ${CWD}/openscad-test_pretty_print-drop-file-name-munging.patch
 patch -p1 < ${CWD}/openscad-Use_python3.patch
 patch -p1 < ${CWD}/openscad-cgal_ftbfs.patch
 patch -p1 < ${CWD}/openscad-fix_nonplanar_tests.patch
 patch -p1 < ${CWD}/openscad-Add-file-bounds-check-to-comment-parser.patch
 patch -p1 < ${CWD}/openscad-add-safety-to-line-lookups-in-DXF-import-fixes-4037.patch
 patch -p1 < ${CWD}/openscad-Backport-from-upstream-compile-fixes-for-CGAL-5.4.patch
 patch -p1 < ${CWD}/openscad-Backport-upstream-patch-to-fix-a-FTBFS-in-sid.patch
 patch -p1 < ${CWD}/openscad-2021.01.diff
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

mkdir _BuilD_
cd _BuilD_

PKGCFLAGS="-O2 -march=i686 ${CPUOPT}=i686"

export CMAKE_POLICY_VERSION_MINIMUM=3.5

if [ ${DO_CONFIGURE} == "yes" ]
then
if [ -f ../configure ]
then
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
../configure --prefix=/usr \
            --sysconfdir=/etc \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --localstatedir=/var/lib \
	    --mandir=/usr/man
elif [ -f ../CMakeLists.txt ]
then
cmake -DCMAKE_C_FLAGS:STRING="${SLKCFLAGS}" \
      -DCMAKE_CXX_FLAGS:STRING="${SLKCFLAGS}" \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DMAN_INSTALL_DIR=/usr/man \
      -DLIB_SUFFIX=${LIBDIRSUFFIX} \
      -DSYSCONF_INSTALL_DIR=/etc \
      -Wno-dev \
      ..
elif [ -f ../meson.build ]
then
  meson --prefix=/usr . ..
fi

fi

if [ ${DO_MAKE} == "yes" ]
then
if [ -f ../meson.build ]
then
  ninja || exit
else
  make ${NUM_JOBS} || exit
fi
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

if [ -f ../meson.build ]
then
  DESTDIR=${PKG} ninja install
else
 :
#  make install DESTDIR=${PKG}
fi

install -d ${PKG}/usr/bin
install -m 755 -p openscad ${PKG}/usr/bin

cd ..

install -d ${PKG}/usr/man/man1 ${PKG}/usr/share/mime/packages/
install -m 644 -p doc/openscad.1 ${PKG}/usr/man/man1
install -m 644 -p icons/openscad.xml ${PKG}/usr/share/mime/packages/

install -d ${PKG}/usr/share/{applications,openscad/locale,pixmaps}
install -m 644 -p icons/openscad.desktop ${PKG}/usr/share/applications
install -m 644 -p icons/openscad.png ${PKG}/usr/share/pixmaps
cp -pr color-schemes ${PKG}/usr/share/openscad
cp -pr examples ${PKG}/usr/share/openscad

strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "OpenSCAD is software for creating solid 3D CAD objects."
OpenSCAD is software for creating solid 3D CAD models. It is free
software and available for Linux/UNIX, Windows and Mac OS X. Unlike
most free software for creating 3D models (such as Blender) it does
not focus on the artistic aspects of 3D modelling but instead on the
CAD aspects. Thus it might be the application you are looking for
when you are planning to create 3D models of machine parts but pretty
sure is not what you are looking for when you are more interested in
creating computer-animated movies.

EOF

post_install

cd ${PKG}
su -c "chown -R root:root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}:${GROUP} ${PKG}"
