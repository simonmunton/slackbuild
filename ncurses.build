#!/bin/bash
#
. build_funcs

TARNAME=ncurses
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/gnu/ncurses
#TAR_EXT=.tar.gz
VERSION=5.9
VERSIONEXTRA=
BUILD=1

WEBPAGE=""

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 #patch -p1 < ${CWD}/
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

for WIDEC in "" "--enable-widec"
do

mkdir build${WIDEC}
cd build${WIDEC}

if [ ${DO_CONFIGURE} == "yes" ]
then
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
../configure --prefix=/usr \
            --sysconfdir=/etc \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --localstatedir=/var/lib \
	    --mandir=/usr/man \
	    --with-gpm \
	    --disable-termcap \
	    --with-normal \
	    --with-shared \
	    --enable-symlinks \
	    --without-debug \
	    --without-profile \
	    --without-ada \
	    ${WIDEC}
fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

make install DESTDIR=${PKG}

cd ..

done

# Move the include files from /usr/include into
# /usr/include/ncurses, then make symlinks back
# into /usr/include.
( cd ${PKG}/usr/include
  rm -rf ncurses
  mkdir ncurses
  mv *.h ncurses
  for file in ncurses/* ; do
    ln -sf $file .
  done
  # This shouldn't clobber the real one:
  mv termcap.h termcap-ncurses.h
)

# Move the ncurses libraries into /lib, since they're important:
mkdir -p ${PKG}/lib
( cd ${PKG}/usr/lib
  chmod 755 *.so
  chmod 644 *.a
  mv libncurses.so.5* ${PKG}/lib
  mv libncursesw.so.5* ${PKG}/lib
  rm -f libncurses.so
  ln -sf /lib/libncurses.so.5 libncurses.so
  rm -f libncursesw.so
  ln -sf /lib/libncursesw.so.5 libncursesw.so
  # Olde obsolete names, just in case
  rm -f libcurses.so
  ln -sf libncurses.so libcurses.so
  rm -f libcursesw.so
  ln -sf libncursesw.so libcursesw.so
)

# Set TERMINFO to point to the package:
export TERMINFO=${PKG}/usr/share/terminfo
# Fix the xterm, screen, rxvt, and Eterm entries:
for tfile in ${CWD}/ncurses-xterm.terminfo ${CWD}/ncurses-screeninfo.src ${CWD}/ncurses-rxvt.terminfo ${CWD}/ncurses-Eterm.ti ; do
  if [ -r $tfile ]; then
    progs/tic -v $tfile
  fi
done
unset TERMINFO

#strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  ANNOUNCE AUTHORS COPYING* INSTALL MANIFEST NEWS PLANS README* TODO TO-DO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

mkdir -p ${PKG}/usr/doc/${TARNAME}-${VERSION}/c++
cp -a \
  c++/NEWS c++/PROBLEMS c++/README-first \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}/c++

if [ -r $PKG/usr/man/man1/tack.1 ]; then
  gzip -9 --force $PKG/usr/man/man1/tack.1
fi

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "CRT screen handling and optimization package"
The ncurses (new curses) library is a free software emulation of
curses in System V Release 4.0, and more.  It uses terminfo format,
supports pads and color and multiple highlights and forms characters
and function-key mapping, and has all the other SYSV-curses
enhancements over BSD curses.

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
