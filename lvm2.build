#!/bin/bash
#
. build_funcs

TARNAME=LVM2
TARNAMEEXTRA=
TARSEP="."
TARDIR=~/tmp/new/l
#TAR_EXT=.tar.gz
VERSION=2.02.138
VERSIONEXTRA=
BUILD=1

WEBPAGE="http://sources.redhat.com/lvm2/"

#TAR_PROG=
#TAR_OPTS=
PKGNAME=lvm2
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
mv ${TARNAME}.${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
# patch -p1 < ${CWD}/LVM2-2.02.81.diff
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

PKGCFLAGS="-O2 -march=i686 ${CPUOPT}=i686"

if [ ${DO_CONFIGURE} == "yes" ]
then
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
LDFLAGS="" \
./configure --mandir=/usr/man \
	    --disable-readline \
	    --enable-cmdlib \
	    --enable-dmeventd \
	    --enable-applib \
	    --libdir=/lib${LIBDIRSUFFIX} \
	    --with-usrlibdir=/usr/lib${LIBDIRSUFFIX} \
	    --enable-realtime \
	    --with-lvm1=internal \
	    --enable-pkgconfig \
	    --enable-udev_sync \
	    --enable-udev_rules \
	    --with-udev-prefix="" \
	    --with-device-uid=0 \
	    --with-device-gid=6 \
	    --with-device-mode=0660 \
	    --with-default-locking-dir=/run/lock/lvm \
	    --with-default-run-dir=/run/lvm \
	    --with-clvmd-pidfile=/run/lvm/clvmd.pid \
	    --with-cmirrord-pidfile=/run/lvm/cmirrord.pid \
	    --with-dmeventd-pidfile=/run/lvm/dmeventd.pid \
	    --enable-fsadm \
	    --disable-selinux


#cmake -DCMAKE_C_FLAGS:STRING="${SLKCFLAGS}" \
#      -DCMAKE_CXX_FLAGS:STRING="${SLKCFLAGS}" \
#      -DCMAKE_BUILD_TYPE=Release \
#      -DCMAKE_INSTALL_PREFIX=/usr \
#      -DMAN_INSTALL_DIR=/usr/man \
#      -DSYSCONF_INSTALL_DIR=/etc \
#      .

fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

make install DESTDIR=${PKG}

mv ${PKG}/etc/lvm/lvm.conf ${PKG}/etc/lvm/lvm.conf.new
doinst_config etc/lvm/lvm.conf.new

strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO VERSION WHATS_NEW \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "Logical Volume Manager version 2"
Heinz Mauelshagen's LVM (Logical Volume Manager) for Linux.
LVM adds an additional layer between the physical peripherals and the
low-level I/O interface to get a logical view of disks.  This allows
the concatenation of several disks (so-called physical volumes or PVs)
to form a storage pool (so-called Volume Group or VG) with allocation
units called physical extents (called PE).  With LVM, you can extend,
resize, or relocate storage dynamically.

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
