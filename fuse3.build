#!/bin/bash
#
. build_funcs

TARNAME=fuse
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/new/f
#TAR_EXT=.tar.gz
VERSION=3.6.1
VERSIONEXTRA=
BUILD=1

WEBPAGE="http://sourceforge.net/projects/fuse"
WEBPAGE="https://github.com/libfuse/libfuse"

#TAR_PROG=
#TAR_OPTS=
PKGNAME=fuse3
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 patch -p1 < ${CWD}/fuse-3.2.6.diff
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

mkdir _BuilD_
cd _BuilD_

if [ ${DO_CONFIGURE} == "yes" ]
then
if [ -f ../configure ]
then
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
./configure --prefix=/usr \
            --sysconfdir=/etc \
  --bindir=/bin \
  --sbindir=/sbin \
  --libdir=/lib${LIBDIRSUFFIX} \
  --with-pkgconfigdir=/usr/lib${LIBDIRSUFFIX}/pkgconfig \
  --includedir=/usr/include \
  --localstatedir=/var \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PKGNAM-$VERSION \
  --enable-lib \
  --enable-util \
  --disable-static
elif [ -f ../CMakeLists.txt ]
then
cmake -DCMAKE_C_FLAGS:STRING="${SLKCFLAGS}" \
      -DCMAKE_CXX_FLAGS:STRING="${SLKCFLAGS}" \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DMAN_INSTALL_DIR=/usr/man \
      -DLIB_SUFFIX=${LIBDIRSUFFIX} \
      -DSYSCONF_INSTALL_DIR=/etc \
      ..
fi

meson .. --prefix=/ \
  --sysconfdir=/etc \
  --bindir=bin \
  --sbindir=sbin \
  --libdir=lib${LIBDIRSUFFIX} \
  --includedir=usr/include \
  --localstatedir=/var \
  --mandir=usr/man

fi

if [ ${DO_MAKE} == "yes" ]
then
#make ${NUM_JOBS} || exit
ninja  || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

#make install DESTDIR=${PKG}
DESTDIR=${PKG} ninja install

cd ..

mv ${PKG}/etc/init.d ${PKG}/etc/rc.d
(cd ${PKG}/etc/rc.d
 mv fuse3 rc.fuse3.new
 doinst_same_perm etc/rc.d/rc.fuse3
 doinst_config etc/rc.d/rc.fuse3.new
)

# move pkgconfig
mkdir -p ${PKG}/usr/lib${LIBDIRSUFFIX}/
mv ${PKG}/lib${LIBDIRSUFFIX}/pkgconfig ${PKG}/usr/lib${LIBDIRSUFFIX}/

# udev handles device node creation
rm -rf ${PKG}/dev

# Move the udev rules to the correct location
mkdir -p $PKG/lib
mv $PKG/etc/udev $PKG/lib

cat >> ${PKG}/install/doinst.sh << EOF
if [ ! -e etc/rc.d/rc.local ]; then
        echo "#!/bin/sh" > etc/rc.d/rc.local
        chmod 755 etc/rc.d/rc.local
fi
if [ ! -e etc/rc.d/rc.local_shutdown ]; then
        echo "#!/bin/sh" > etc/rc.d/rc.local_shutdown
        chmod 755 etc/rc.d/rc.local_shutdown
fi
run=\`grep "/etc/rc.d/rc.fuse3" etc/rc.d/rc.local\`
if [[ "\${run}" == "" ]]; then
        echo "" >> etc/rc.d/rc.local
        echo "# start fuse3" >> etc/rc.d/rc.local
        echo "if [ -x /etc/rc.d/rc.fuse3 ]; then" >> etc/rc.d/rc.local
        echo "  /etc/rc.d/rc.fuse3 start" >> etc/rc.d/rc.local
        echo "fi" >> etc/rc.d/rc.local

        echo "" >> etc/rc.d/rc.local_shutdown
        echo "# stop fuse3" >> etc/rc.d/rc.local_shutdown
        echo "if [ -x /etc/rc.d/rc.fuse3 ]; then" >> etc/rc.d/rc.local_shutdown
        echo "  /etc/rc.d/rc.fuse3 stop" >> etc/rc.d/rc.local_shutdown
        echo "fi" >> etc/rc.d/rc.local_shutdown
fi
EOF

#strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO FAQ Filesystems doc/kernel.txt \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc <<EOF "Filesystem in Userspace"
FUSE (Filesystem in Userspace) is a simple interface for userspace
programs to export a virtual filesystem to the Linux kernel.  FUSE
also aims to provide a secure method for non privileged users to
create and mount their own filesystem implementations.

EOF

post_install

cd ${PKG}
su -c "chown -R root:root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
chmod u+s bin/fusermount3 ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}:${GROUP} ${PKG}"
