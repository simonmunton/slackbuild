#!/bin/bash
#
. build_funcs

TARNAME=qca
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/new/q
#TAR_EXT=.tar.gz
VERSION=2.0.3
VERSIONEXTRA=
BUILD=1

WEB_PAGE="http://delta.affinix.com/qca/"

#TAR_PROG=
#TAR_OPTS=
PKGNAME=qca
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 patch -p1 < ${CWD}/qca-2.0.3.diff
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

export QTDIR=/usr/lib/qt4
PATH=/usr/lib${LIBDIRSUFFIX}/qt4/bin:$PATH

if [ ${DO_CONFIGURE} == "yes" ]
then
#cmake . -DCMAKE_INSTALL_PREFIX=/usr
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
./configure --prefix=/usr \
            --libdir=/usr/lib${LIBDIRSUFFIX} \

#            --sysconfdir=/etc \
#            --localstatedir=/var/lib \
#            --mandir=/usr/man
fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

make install DESTDIR=${PKG} INSTALL_ROOT=${PKG}

#strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "QT crypto addon"
QCA is a library that provides an easy API for a range of crypographic
features, including SSL/TLS, X.509 certificates, SASL, OpenPGP, 
smartcards, and much more.

Functionality is supplied via plugins.  This is useful for avoiding
dependence on a particular crypto library and makes upgrading easier,
as there is no need to recompile your application when adding or
upgrading a crypto plugin.

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
