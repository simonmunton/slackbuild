--- brlcad-7.32.2/src/conv/stl/stl-g.c.orig	2021-02-06 16:55:34.000000000 +0000
+++ brlcad-7.32.2/src/conv/stl/stl-g.c	2021-02-08 16:32:01.970660277 +0000
@@ -125,7 +125,7 @@
 
     len = bu_vls_strlen(name);
     while (db_lookup(fd_out->dbip, bu_vls_addr(name), LOOKUP_QUIET) != RT_DIR_NULL) {
-	char suff[10];
+	char suff[12];
 
 	bu_vls_trunc(name, len);
 	count++;
--- brlcad-7.32.2/src/conv/shp/shapelib/shpopen.c.orig	2021-02-06 16:55:32.000000000 +0000
+++ brlcad-7.32.2/src/conv/shp/shapelib/shpopen.c	2021-02-08 16:32:01.971660277 +0000
@@ -1546,7 +1546,7 @@
 {
     int                  nEntitySize, nRequiredSize;
     SHPObject		*psShape;
-    char                 pszErrorMsg[128];
+    char                 pszErrorMsg[140];
 
 /* -------------------------------------------------------------------- */
 /*      Validate the record/entity number.                              */
@@ -1627,7 +1627,7 @@
 
     if ( 8 + 4 > nEntitySize )
     {
-	snprintf(pszErrorMsg, 128, "Corrupted .shp file : shape %d : nEntitySize = %d",
+	snprintf(pszErrorMsg, 140, "Corrupted .shp file : shape %d : nEntitySize = %d",
 		    hEntity, nEntitySize);
 	psSHP->sHooks.Error( pszErrorMsg );
 	SHPDestroyObject(psShape);
@@ -1652,7 +1652,7 @@
 
 	if ( 40 + 8 + 4 > nEntitySize )
 	{
-	    snprintf(pszErrorMsg, 128, "Corrupted .shp file : shape %d : nEntitySize = %d",
+	    snprintf(pszErrorMsg, 140, "Corrupted .shp file : shape %d : nEntitySize = %d",
 		     hEntity, nEntitySize);
 	    psSHP->sHooks.Error( pszErrorMsg );
 	    SHPDestroyObject(psShape);
@@ -1684,7 +1684,7 @@
 	if (nPoints < 0 || nParts < 0 ||
 	    nPoints > 50 * 1000 * 1000 || nParts > 10 * 1000 * 1000)
 	{
-	    snprintf(pszErrorMsg, 128, "Corrupted .shp file : shape %d, nPoints=%d, nParts=%d.",
+	    snprintf(pszErrorMsg, 140, "Corrupted .shp file : shape %d, nPoints=%d, nParts=%d.",
 			hEntity, nPoints, nParts);
 	    psSHP->sHooks.Error( pszErrorMsg );
 	    SHPDestroyObject(psShape);
@@ -1707,7 +1707,7 @@
 	}
 	if (nRequiredSize > nEntitySize)
 	{
-	    snprintf(pszErrorMsg, 128, "Corrupted .shp file : shape %d, nPoints=%d, nParts=%d, nEntitySize=%d.",
+	    snprintf(pszErrorMsg, 140, "Corrupted .shp file : shape %d, nPoints=%d, nParts=%d, nEntitySize=%d.",
 			hEntity, nPoints, nParts, nEntitySize);
 	    psSHP->sHooks.Error( pszErrorMsg );
 	    SHPDestroyObject(psShape);
@@ -1731,7 +1731,7 @@
 	    psShape->panPartStart == NULL ||
 	    psShape->panPartType == NULL)
 	{
-	    snprintf(pszErrorMsg, 128,
+	    snprintf(pszErrorMsg, 140,
 		     "Not enough memory to allocate requested memory (nPoints=%d, nParts=%d) for shape %d. "
 		     "Probably broken SHP file", hEntity, nPoints, nParts );
 	    psSHP->sHooks.Error( pszErrorMsg );
--- brlcad-7.32.2/src/conv/iges/g-iges.c.orig	2021-02-06 16:55:32.000000000 +0000
+++ brlcad-7.32.2/src/conv/iges/g-iges.c	2021-02-08 16:32:01.971660277 +0000
@@ -578,7 +578,9 @@
 			bu_log("too many files with the same name (%s)\n", dp->d_namep);
 			bu_exit(1, "Cannot create a unique filename, \n");
 		    }
-		    snprintf(multi_name, len, "%s/%s%.6s.igs", output_file, dp->d_namep, suffix);
+		    if (snprintf(multi_name, len, "%s/%s%.6s.igs", output_file, dp->d_namep, suffix) >= (int)len) {
+			multi_name[len-1] = '\0';
+		    }
 		}
 		if ((fp_dir = fopen(multi_name, "wb")) == NULL) {
 		    perror("g-iges");
--- brlcad-7.32.2/src/conv/patch/patch-g.c.orig	2021-02-06 16:55:32.000000000 +0000
+++ brlcad-7.32.2/src/conv/patch/patch-g.c	2021-02-08 16:32:01.971660277 +0000
@@ -1076,10 +1076,10 @@
 
     if (cc != in[0].cc) {
 	mir_count++;
-	snprintf(cname, NAMESIZE+1, "%s.r%.2d", tmpname2, mir_count);
+	snprintf(cname, NAMESIZE+10, "%s.r%.2d", tmpname2, mir_count);
     } else {
 	reg_count++;
-	snprintf(cname, NAMESIZE+1, "%s.r%.2d", tmpname2, reg_count);
+	snprintf(cname, NAMESIZE+10, "%s.r%.2d", tmpname2, reg_count);
     }
 
 
--- brlcad-7.32.2/src/conv/patch/patch-g.h.orig	2021-02-06 16:55:32.000000000 +0000
+++ brlcad-7.32.2/src/conv/patch/patch-g.h	2021-02-08 16:32:01.971660277 +0000
@@ -99,8 +99,8 @@
 double conv_mm2in;
 fastf_t third = 0.333333333;
 
-char cname[NAMESIZE+1];
-char tname[NAMESIZE+1];
+char cname[NAMESIZE+10];
+char tname[NAMESIZE+10];
 char surf[2];
 char thick[3];
 char space[2];
--- brlcad-7.32.2/src/libbg/spsr/MarchingCubes.cpp.orig	2021-02-06 16:55:36.000000000 +0000
+++ brlcad-7.32.2/src/libbg/spsr/MarchingCubes.cpp	2021-02-08 17:37:38.803116616 +0000
@@ -80,6 +80,10 @@
 			orientation=1;
 			i=((idx/2)+1)%2;
 			return;
+		default:
+			orientation=-1;
+			i=-1;
+			return;
 	};
 }
 void Square::EdgeCorners(int idx,int& c1,int& c2){
@@ -95,6 +99,10 @@
 			c1 = CornerIndex(i,0);
 			c2 = CornerIndex(i,1);
 			break;
+		default:
+			c1 = -1;
+			c2 = -1;
+			break;
 	};
 }
 int Square::ReflectEdgeIndex(int idx,int edgeIndex){
@@ -228,6 +236,10 @@
 			c1=CornerIndex(i1,i2,0);
 			c2=CornerIndex(i1,i2,1);
 			break;
+		default:
+			c1=-1;
+			c2=-1;
+			break;
 	};
 }
 void Cube::FaceCorners( int idx , int& c1 , int& c2 , int& c3 , int& c4 )
@@ -831,6 +843,7 @@
 	else if	(y>0){for(i=0;i<2;i++){for(j=0;j<2;j++){v[i][j]=values[Cube::CornerIndex(i,1,j)];}}}
 	else if	(z<0){for(i=0;i<2;i++){for(j=0;j<2;j++){v[i][j]=values[Cube::CornerIndex(i,j,0)];}}}
 	else if	(z>0){for(i=0;i<2;i++){for(j=0;j<2;j++){v[i][j]=values[Cube::CornerIndex(i,j,1)];}}}
+	else {for(i=0;i<2;i++){for(j=0;j<2;j++){v[i][j]=0.0;}}}
 	if (v[0][0] < iso) idx |=   1;
 	if (v[1][0] < iso) idx |=   2;
 	if (v[1][1] < iso) idx |=   4;
@@ -937,6 +950,7 @@
 	else if	(y>0){for(i=0;i<2;i++){for(j=0;j<2;j++){v[i][j]=values[Cube::CornerIndex(i,1,j)];}}}
 	else if	(z<0){for(i=0;i<2;i++){for(j=0;j<2;j++){v[i][j]=values[Cube::CornerIndex(i,j,0)];}}}
 	else if	(z>0){for(i=0;i<2;i++){for(j=0;j<2;j++){v[i][j]=values[Cube::CornerIndex(i,j,1)];}}}
+	else {for(i=0;i<2;i++){for(j=0;j<2;j++){v[i][j]=0.0;}}}
 	if (v[0][0] < iso) idx |=   1;
 	if (v[1][0] < iso) idx |=   2;
 	if (v[1][1] < iso) idx |=   4;
--- brlcad-7.32.2/src/librt/cache.c.orig	2021-02-06 16:55:44.000000000 +0000
+++ brlcad-7.32.2/src/librt/cache.c	2021-02-08 16:32:01.972660277 +0000
@@ -280,7 +280,9 @@
 
     /* make sure there's a format file */
 
-    snprintf(path, MAXPATHLEN, "%s%c%s", dir, BU_DIR_SEPARATOR, "format");
+    if (snprintf(path, MAXPATHLEN, "%s%c%s", dir, BU_DIR_SEPARATOR, "format") >= MAXPATHLEN) {
+	path[MAXPATHLEN-1] = '\0';
+    }
     if (!bu_file_exists(path, NULL)) {
 	if (!cache_ensure_path(path, 1)) {
 	    cache_warn(cache, path, "Cannot create format file.  Caching disabled.");
@@ -316,7 +318,9 @@
      * file, e.g.:
      * [CACHE_DIR]/.rt/objects/A8/A8D460B2-194F-5FA7-8FED-286A6C994B89
      */
-    snprintf(path, MAXPATHLEN, "%s%c%s", dir, BU_DIR_SEPARATOR, "objects");
+    if (snprintf(path, MAXPATHLEN, "%s%c%s", dir, BU_DIR_SEPARATOR, "objects") >= MAXPATHLEN) {
+	path[MAXPATHLEN-1] = '\0';
+    }
     if (!bu_file_exists(path, NULL)) {
 	if (!cache_ensure_path(path, 0)) {
 	    cache_warn(cache, path, "Cannot create objects directory.  Caching disabled.");
--- brlcad-7.32.2/src/librt/primitives/metaball/metaball.c.orig	2021-02-06 16:55:45.000000000 +0000
+++ brlcad-7.32.2/src/librt/primitives/metaball/metaball.c	2021-02-08 16:32:01.972660277 +0000
@@ -500,7 +500,7 @@
 }
 
 
-inline void
+void
 rt_metaball_norm_internal(vect_t *n, point_t *p, struct rt_metaball_internal *mb)
 {
     struct wdb_metaball_pnt *mbpt;
--- brlcad-7.32.2/src/libged/get_solid_kp.c.orig	2021-02-06 16:55:39.000000000 +0000
+++ brlcad-7.32.2/src/libged/get_solid_kp.c	2021-02-08 16:32:01.972660277 +0000
@@ -102,6 +102,8 @@
 		size_t i, j, k;
 		int good_vert = 0;
 
+		VSETALL(mpt, 0.0);
+
 		RT_ARBN_CK_MAGIC(arbn);
 		for (i = 0; i < arbn->neqn; i++) {
 		    for (j = i + 1; j < arbn->neqn; j++) {
--- brlcad-7.32.2/src/libged/human/human.c.orig	2021-02-06 16:55:39.000000000 +0000
+++ brlcad-7.32.2/src/libged/human/human.c	2021-02-08 16:32:01.972660277 +0000
@@ -935,7 +935,7 @@
     int x = 0;
     int y = 0;
     int num;
-    char testname[10] = {'0'};
+    char testname[12] = {'0'};
     char suffix[MAXLENGTH];
     VSET(locations, 0, 0, 0); /* Starting location */
     num = 0.0;
@@ -2398,10 +2398,10 @@
 	int num = 0;
 	int w = 0;
 	int x = 0;
-	char holder[10] = {'0'};
+	char holder[12] = {'0'};
 	int z = 0;
-	char thing[10] = "0";
-	char thing2[10] = "0";
+	char thing[12] = "0";
+	char thing2[12] = "0";
 	bu_log("Naming\n");
 
 	for (w=0; w<(troops*troops); w++) {
--- brlcad-7.32.2/src/other/stepcode/src/clstepcore/complexSupport.h.orig	2021-02-06 16:56:13.000000000 +0000
+++ brlcad-7.32.2/src/other/stepcode/src/clstepcore/complexSupport.h	2021-02-08 16:32:01.972660277 +0000
@@ -208,19 +208,19 @@
         // but all we need.
         EntList * firstNot( JoinType );
         EntList * nextNot( JoinType j ) {
-            return next->firstNot( j );
+            return next ? next->firstNot( j ) : next;
         }
         EntList * firstWanted( MatchType );
         EntList * nextWanted( MatchType mat ) {
-            return next->firstWanted( mat );
+            return next ? next->firstWanted( mat ) : next;
         }
         EntList * lastNot( JoinType );
         EntList * prevNot( JoinType j ) {
-            return prev->lastNot( j );
+            return prev ? prev->lastNot( j ) : prev;
         }
         EntList * lastWanted( MatchType );
         EntList * prevWanted( MatchType mat ) {
-            return prev->lastWanted( mat );
+            return prev ? prev->lastWanted( mat ) : prev;
         }
 
         JoinType join;
--- brlcad-7.32.2/src/libgcv/plugins/stl/stl_read.c.orig	2021-02-06 16:55:38.000000000 +0000
+++ brlcad-7.32.2/src/libgcv/plugins/stl/stl_read.c	2021-02-08 16:32:01.972660277 +0000
@@ -117,7 +117,7 @@
 
     len = bu_vls_strlen(name);
     while (db_lookup(pstate->fd_out->dbip, bu_vls_addr(name), LOOKUP_QUIET) != RT_DIR_NULL) {
-	char suff[10];
+	char suff[12];
 
 	bu_vls_trunc(name, len);
 	count++;
--- brlcad-7.32.2/src/libgcv/plugins/vrml/vrml_read/vrml_read.cpp.orig	2021-02-06 16:55:38.000000000 +0000
+++ brlcad-7.32.2/src/libgcv/plugins/vrml/vrml_read/vrml_read.cpp	2021-02-08 16:32:01.972660277 +0000
@@ -90,8 +90,8 @@
     int vert_no=0;
     struct bu_vls solid_name = BU_VLS_INIT_ZERO;
     struct bu_vls region_name = BU_VLS_INIT_ZERO;
-    char sname[5];
-    char rname[5];
+    char sname[12];
+    char rname[13];
 
     bot_fcurr = 0;
 
--- brlcad-7.32.2/src/libgcv/plugins/asc/asc_v5.cpp.orig	2021-02-06 16:55:38.000000000 +0000
+++ brlcad-7.32.2/src/libgcv/plugins/asc/asc_v5.cpp	2021-02-08 16:32:01.973660277 +0000
@@ -202,6 +202,8 @@
     FILE    *v5ofp = NULL;
     if (!dest_path) return 0;
 
+return 0;
+
     struct db_i	*dbip;
     struct directory *dp;
     const char *u;
--- brlcad-7.32.2/src/libbu/tests/escape.c.orig	2021-02-06 16:55:37.000000000 +0000
+++ brlcad-7.32.2/src/libbu/tests/escape.c	2021-02-08 16:32:01.973660277 +0000
@@ -27,6 +27,10 @@
 static int
 esc_compare(const char *input, const char *output, const char *correct)
 {
+    if (input == NULL ) {
+	printf("input is NULL\n");
+	return 0;
+    }
     if (BU_STR_EQUAL(output, correct)) {
 	printf("%24s -> %28s [PASS]\n", input, output);
 	return 1;
--- brlcad-7.32.2/src/libbu/progname.c.orig	2021-02-06 16:55:37.000000000 +0000
+++ brlcad-7.32.2/src/libbu/progname.c	2021-02-08 16:32:01.973660277 +0000
@@ -135,7 +135,9 @@
      * directory is changed, we'll get the wrong path for argv0.
      */
     bu_getcwd(buffer, sizeof(buffer));
-    snprintf(buffer+strlen(buffer), sizeof(buffer)-strlen(buffer), "%c%s", BU_DIR_SEPARATOR, argv0);
+    if (snprintf(buffer+strlen(buffer), sizeof(buffer)-strlen(buffer), "%c%s", BU_DIR_SEPARATOR, argv0) >= (int)(sizeof(buffer)-strlen(buffer))) {
+	buffer[MAXPATHLEN-1] = '\0';
+    }
     if (bu_file_exists(buffer, NULL)) {
 	return buffer;
     }
--- brlcad-7.32.2/src/libbu/whereis.c.orig	2021-02-06 16:55:37.000000000 +0000
+++ brlcad-7.32.2/src/libbu/whereis.c	2021-02-08 16:32:01.973660277 +0000
@@ -119,7 +119,9 @@
 	    directory = curr_dir; /* "."; */
 	}
 
-	snprintf(bu_whereis_result, MAXPATHLEN, "%s/%s", directory, cmd);
+	if (snprintf(bu_whereis_result, MAXPATHLEN, "%s/%s", directory, cmd) >= MAXPATHLEN) {
+	  bu_whereis_result[MAXPATHLEN-1] = '\0';
+	}
 	if (bu_file_exists(bu_whereis_result, NULL)) {
 	    if (bu_whereis_result[0] == '\0')
 		return NULL; /* never return empty */
--- brlcad-7.32.2/src/libbu/which.c.orig	2021-02-06 16:55:37.000000000 +0000
+++ brlcad-7.32.2/src/libbu/which.c	2021-02-08 16:32:01.973660277 +0000
@@ -121,7 +121,9 @@
 	    directory = curr_dir; /* "."; */
 	}
 
-	snprintf(bu_which_result, MAXPATHLEN, "%s/%s", directory, cmd);
+	if (snprintf(bu_which_result, MAXPATHLEN, "%s/%s", directory, cmd) >= MAXPATHLEN) {
+	    bu_which_result[MAXPATHLEN-1] = '\0';
+	}
 	if (bu_file_exists(bu_which_result, NULL)) {
 	    if (bu_which_result[0] == '\0')
 		return NULL; /* never return empty */
--- brlcad-7.32.2/src/libpkg/tpkg.c.orig	2021-02-06 16:55:44.000000000 +0000
+++ brlcad-7.32.2/src/libpkg/tpkg.c	2021-02-08 16:32:01.973660277 +0000
@@ -139,7 +139,7 @@
 run_server(int port) {
     struct pkg_conn *client;
     int netfd;
-    char portname[MAX_DIGITS + 1] = {0};
+    char portname[MAX_DIGITS + 10] = {0};
     int pkg_result  = 0;
     char *buffer;
 
@@ -154,7 +154,7 @@
     validate_port(port);
 
     /* start up the server on the given port */
-    snprintf(portname, MAX_DIGITS, "%d", port);
+    snprintf(portname, MAX_DIGITS+10, "%d", port);
     netfd = pkg_permserver(portname, "tcp", 0, 0);
     if (netfd < 0) {
 	bu_bomb("Unable to start the server");
@@ -238,7 +238,7 @@
 run_client(const char *server, int port, const char *file, unsigned int tpkg_bufsize)
 {
     my_data stash;
-    char s_port[MAX_DIGITS + 1] = {0};
+    char s_port[MAX_DIGITS + 10] = {0};
     long bytes = 0;
     FILE *fp = (FILE *)NULL;
     char *buffer;
@@ -255,7 +255,7 @@
     /* open a connection to the server */
     validate_port(port);
 
-    snprintf(s_port, MAX_DIGITS, "%d", port);
+    snprintf(s_port, MAX_DIGITS+10, "%d", port);
     stash.connection = pkg_open(server, s_port, "tcp", NULL, NULL, NULL, NULL);
     if (stash.connection == PKC_ERROR) {
 	bu_log("Connection to %s, port %d, failed.\n", server, port);
--- brlcad-7.32.2/src/libtclcad/init.c.orig	2021-02-06 16:55:46.000000000 +0000
+++ brlcad-7.32.2/src/libtclcad/init.c	2021-02-08 19:05:40.943331231 +0000
@@ -131,7 +131,7 @@
     tclcad_auto_path(interp);
 
     /* Initialize [incr Tcl] */
-    if (Tcl_Eval(interp, "package require Itcl 3") != TCL_OK) {
+    if (Tcl_Eval(interp, "package require Itcl 4") != TCL_OK) {
 	if (tlog)
 	    bu_vls_printf(tlog, "Itcl init ERROR:\n%s\n", Tcl_GetStringResult(interp));
 	return TCL_ERROR;
@@ -140,7 +140,7 @@
     /* Initialize [incr Tk] */
     if (init_gui) {
 #ifdef HAVE_TK
-	if (Tcl_Eval(interp, "package require Itk 3") != TCL_OK) {
+	if (Tcl_Eval(interp, "package require Itk 4") != TCL_OK) {
 	    if (tlog)
 	       	bu_vls_printf(tlog, "Itk init ERROR:\n%s\n", Tcl_GetStringResult(interp));
 	    return TCL_ERROR;
--- brlcad-7.32.2/src/mged/edsol.c.orig	2021-02-06 16:55:47.000000000 +0000
+++ brlcad-7.32.2/src/mged/edsol.c	2021-02-08 16:32:01.974660277 +0000
@@ -1968,6 +1968,8 @@
 		size_t i, j, k;
 		int good_vert = 0;
 
+		VSETALL(mpt, 0.0);
+
 		RT_ARBN_CK_MAGIC(arbn);
 		for (i=0; i<arbn->neqn; i++) {
 		    for (j=i+1; j<arbn->neqn; j++) {
