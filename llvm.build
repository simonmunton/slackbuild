#!/bin/bash
#
. build_funcs

TARNAME=llvm
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/new/l/llvm
#TAR_EXT=.tar.gz
VERSION=3.4
VERSIONEXTRA=.src
BUILD=1

WEBPAGE="http://llvm.org/"

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
mv ${TARNAME}-${VERSION}.src ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 (cd tools
  tar xf ${TARDIR}/cfe-${VERSION}.src.tar.gz
  mv cfe* clang
 )

 if [ -n "${LIBDIRSUFFIX}" ]
 then
#   patch -p1 -b -z .orig < ${CWD}/llvm-3.2-x86_64.diff

   sed -i "/^PROJ_libdir/ s@/lib@/lib${LIBDIRSUFFIX}@" Makefile.config.in
   sed -i "s@\$(PROJ_prefix)/lib@\$(PROJ_prefix)/lib$LIBDIRSUFFIX@" tools/clang/lib/Headers/Makefile
   sed -i "s@\"lib\"@\"lib${LIBDIRSUFFIX}\"@" tools/clang/lib/Frontend/CompilerInvocation.cpp
   sed -i "s@\"lib\"@\"lib${LIBDIRSUFFIX}\"@" tools/clang/lib/Driver/Tools.cpp
   sed -i "/ActiveLibDir =/ s@/lib@/lib${LIBDIRSUFFIX}@g" tools/llvm-config/llvm-config.cpp
   sed -i "/LibDir / s@/lib@/lib${LIBDIRSUFFIX}@; s@/lib/@/lib${LIBDIRSUFFIX}/@; /RPATH/ s@/lib@/lib${LIBDIRSUFFIX}@" Makefile.rules

 fi
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

PKGCFLAGS="-O2 -march=i686 ${CPUOPT}=i686"

if [ ${DO_CONFIGURE} == "yes" ]
then
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --localstatedir=/var/lib \
	    --mandir=/usr/man \
	    --enable-pic \
	    --enable-optimized \
	    --disable-assertions \
	    --enable-experimental-targets=R600 \
	    --with-clang-resource-dir="../lib${LIBDIRSUFFIX}/clang/${VERSION}"

#cmake -DCMAKE_C_FLAGS:STRING="${SLKCFLAGS}" \
#      -DCMAKE_CXX_FLAGS:STRING="${SLKCFLAGS}" \
#      -DCMAKE_BUILD_TYPE=Release \
#      -DCMAKE_INSTALL_PREFIX=/usr \
#      -DMAN_INSTALL_DIR=/usr/man \
#      -DSYSCONF_INSTALL_DIR=/etc \
#      .

fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} || exit
fi                       

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

make install DESTDIR=${PKG}

sanitise_la_files ${PKG}/usr/lib${LIBDIRSUFFIX}

mv ${PKG}/usr/docs/llvm/* ${PKG}/usr/doc/${TARNAME}-${VERSION}

rmdir -p ${PKG}/usr/docs/llvm

rm ${PKG}/usr/lib${LIBDIRSUFFIX}/LLVMHello*

strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

rmdir -p ${PKG}/usr/share

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "The Low Level Virtual Machine (An Optimizing Compiler Infrastructure)"
LLVM is a compiler infrastructure designed for compile-time, link-
time, runtime, and idle-time optimization of programs from arbitrary 
programming languages. LLVM is written in C++ and has been developed 
since 2000 at the University of Illinois and Apple. It currently 
supports compilation of C and C++ programs, using front-ends derived 
from GCC 4.0.1. A new front-end for the C family of languages is in 
development. The compiler infrastructure includes mirror sets of 
programming tools as well as libraries with equivalent functionality.

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
