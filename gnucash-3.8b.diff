--- gnucash-3.8b/CMakeLists.txt.orig	2019-12-28 21:34:27.000000000 +0000
+++ gnucash-3.8b/CMakeLists.txt	2020-01-16 22:46:46.432684093 +0000
@@ -317,6 +317,23 @@
 # Look for guile versions in this order: 2.2 > 2.0
 
 # guile library and include dir
+pkg_check_modules (GUILE3 guile-3.0 QUIET)
+if (GUILE3_FOUND) # found guile-3.0
+
+  add_definitions (-DHAVE_GUILE22)
+  set(HAVE_GUILE2 TRUE)
+  set(GUILE_EFFECTIVE_VERSION 3.0)
+  set(GUILE_INCLUDE_DIRS ${GUILE3_INCLUDE_DIRS})
+  set(GUILE_LDFLAGS ${GUILE3_LDFLAGS})
+
+  find_program (GUILD_EXECUTABLE NAMES guild3.0 guild)
+  if (NOT GUILD_EXECUTABLE)
+    message (SEND_ERROR "The guild executable was not found, but is required. Please set GUILD_EXECUTABLE.")
+  endif (NOT GUILD_EXECUTABLE)
+  message(STATUS "Using guile-3.0.x")
+  find_program (GUILE_EXECUTABLE NAMES guile3.0 guile)
+
+else(GUILE3_FOUND)
 pkg_check_modules (GUILE22 guile-2.2 QUIET)
 if (GUILE22_FOUND) # found guile-2.2
   add_definitions (-DHAVE_GUILE22)
@@ -350,6 +367,7 @@
     message (FATAL_ERROR "Neither guile 2.2 nor guile 2.0 were found GnuCash can't run without one of them. Ensure that one is installed and can be found with pkg-config.")
   endif(GUILE2_FOUND)
 endif(GUILE22_FOUND)
+endif(GUILE3_FOUND)
 
 if (NOT GUILE_EXECUTABLE)
   message (SEND_ERROR "The guile executable was not found, but is required. Please set GUILE_EXECUTABLE.")
@@ -548,9 +566,12 @@
 if (NOT DEFINED ${BOOST_ROOT})
   set(BOOST_ROOT $ENV{BOOST_ROOT})
 endif()
+set(BUILD_SHARED_LIBS on)
 find_package (Boost 1.54.0 REQUIRED COMPONENTS date_time regex locale filesystem system)
+set(BUILD_SHARED_LIBS off)
 
 if (Boost_FOUND)
+  set(Boost_LIBRARIES Boost::date_time Boost::regex Boost::locale Boost::filesystem Boost::system)
   include_directories(${Boost_INCLUDE_DIRS})
   set(HAVE_BOOST 1)
 else (Boost_FOUND)
@@ -585,14 +606,14 @@
 
 
 if (UNIX)
-  set( CMAKE_C_FLAGS "-Werror -Wdeclaration-after-statement -Wno-pointer-sign -Wall -Wmissing-prototypes -Wmissing-declarations -Wno-unused ${CMAKE_C_FLAGS}")
+  set( CMAKE_C_FLAGS "-Wdeclaration-after-statement -Wno-pointer-sign -Wall -Wmissing-prototypes -Wmissing-declarations -Wno-unused ${CMAKE_C_FLAGS}")
   set( CMAKE_C_FLAGS "-Wno-error=deprecated-declarations -std=gnu11 -Wno-error=parentheses ${CMAKE_C_FLAGS}")
-  set( CMAKE_CXX_FLAGS "-Werror -Wall -Wmissing-declarations -Wno-unused -Wno-error=parentheses ${CMAKE_CXX_FLAGS}")
+  set( CMAKE_CXX_FLAGS "-Wall -Wmissing-declarations -Wno-unused -Wno-error=parentheses ${CMAKE_CXX_FLAGS}")
   set( CMAKE_CXX_FLAGS "-Wno-error=deprecated-declarations ${REGISTER_CXXFLAG} ${CMAKE_CXX_FLAGS}")
   set( CMAKE_C_FLAGS_RELEASE "-O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 ${CMAKE_C_FLAGS}")
 endif (UNIX)
 if (MINGW)
-  set( CMAKE_C_FLAGS "-Werror -Wdeclaration-after-statement -Wno-pointer-sign -Wall -Wunused -Wmissing-prototypes -Wmissing-declarations  -Wno-unused -Wno-error=deprecated-declarations -std=gnu11 ${CMAKE_C_FLAGS}")
+  set( CMAKE_C_FLAGS "-Wdeclaration-after-statement -Wno-pointer-sign -Wall -Wunused -Wmissing-prototypes -Wmissing-declarations  -Wno-unused -Wno-error=deprecated-declarations -std=gnu11 ${CMAKE_C_FLAGS}")
   set( CMAKE_CXX_FLAGS "-DWINVER=0x0500 -D_EMULATE_GLIBC=0 ${CMAKE_CXX_FLAGS}") # Workaround for bug in gtest on mingw, see https://github.com/google/googletest/issues/893 and https://github.com/google/googletest/issues/920
 endif (MINGW)
 
--- gnucash-3.8b/gnucash/import-export/qif-imp/qif-dialog-utils.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/import-export/qif-imp/qif-dialog-utils.scm	2020-01-16 23:26:58.022908743 +0000
@@ -30,14 +30,14 @@
   (string-append brokerage (gnc-get-account-separator-string) security))
 
 (define (default-dividend-acct brokerage security)
-  (string-append (_ "Income") (gnc-get-account-separator-string)
-                 (_ "Dividends") (gnc-get-account-separator-string)
+  (string-append (G_ "Income") (gnc-get-account-separator-string)
+                 (G_ "Dividends") (gnc-get-account-separator-string)
                  brokerage (gnc-get-account-separator-string)
                  security))
 
 (define (default-interest-acct brokerage security)
-  (string-append (_ "Income") (gnc-get-account-separator-string)
-                 (_ "Interest") (gnc-get-account-separator-string)
+  (string-append (G_ "Income") (gnc-get-account-separator-string)
+                 (G_ "Interest") (gnc-get-account-separator-string)
                  brokerage
                  (if (string=? security "")
                   ""
@@ -45,49 +45,49 @@
                                   security))))
 
 (define (default-capital-return-acct brokerage security)
-  (string-append (_ "Income") (gnc-get-account-separator-string)
-                 (_ "Cap Return") (gnc-get-account-separator-string)
+  (string-append (G_ "Income") (gnc-get-account-separator-string)
+                 (G_ "Cap Return") (gnc-get-account-separator-string)
                  brokerage (gnc-get-account-separator-string)
                  security))
 
 (define (default-cglong-acct brokerage security)
-  (string-append (_ "Income") (gnc-get-account-separator-string)
-                 (_ "Cap. gain (long)") (gnc-get-account-separator-string)
+  (string-append (G_ "Income") (gnc-get-account-separator-string)
+                 (G_ "Cap. gain (long)") (gnc-get-account-separator-string)
                  brokerage (gnc-get-account-separator-string)
                  security))
 
 (define (default-cgmid-acct brokerage security)
-  (string-append (_ "Income") (gnc-get-account-separator-string)
-                 (_ "Cap. gain (mid)") (gnc-get-account-separator-string)
+  (string-append (G_ "Income") (gnc-get-account-separator-string)
+                 (G_ "Cap. gain (mid)") (gnc-get-account-separator-string)
                  brokerage (gnc-get-account-separator-string)
                  security))
 
 (define (default-cgshort-acct brokerage security)
-  (string-append (_ "Income") (gnc-get-account-separator-string)
-                 (_ "Cap. gain (short)") (gnc-get-account-separator-string)
+  (string-append (G_ "Income") (gnc-get-account-separator-string)
+                 (G_ "Cap. gain (short)") (gnc-get-account-separator-string)
                  brokerage (gnc-get-account-separator-string)
                  security))
 
 (define (default-equity-holding security)
-  (string-append (_ "Equity") (gnc-get-account-separator-string)
-                 (_ "Retained Earnings")))
+  (string-append (G_ "Equity") (gnc-get-account-separator-string)
+                 (G_ "Retained Earnings")))
 
 (define (default-equity-account)
-  (string-append (_ "Equity") (gnc-get-account-separator-string)
-                 (_ "Retained Earnings")))
+  (string-append (G_ "Equity") (gnc-get-account-separator-string)
+                 (G_ "Retained Earnings")))
 
 (define (default-commission-acct brokerage)
-  (string-append (_ "Expenses") (gnc-get-account-separator-string)
-                 (_ "Commissions") (gnc-get-account-separator-string)
+  (string-append (G_ "Expenses") (gnc-get-account-separator-string)
+                 (G_ "Commissions") (gnc-get-account-separator-string)
                  brokerage))
 
 (define (default-margin-interest-acct brokerage)
-  (string-append (_ "Expenses") (gnc-get-account-separator-string)
-                 (_ "Margin Interest") (gnc-get-account-separator-string)
+  (string-append (G_ "Expenses") (gnc-get-account-separator-string)
+                 (G_ "Margin Interest") (gnc-get-account-separator-string)
                  brokerage))
 
 (define (default-unspec-acct)
-  (_ "Unspecified"))
+  (G_ "Unspecified"))
 
 ;; The following investment actions implicitly specify
 ;; the two accounts involved in the transaction.
--- gnucash-3.8b/gnucash/import-export/qif-imp/qif-merge-groups.scm.orig	2019-09-08 20:33:59.000000000 +0100
+++ gnucash-3.8b/gnucash/import-export/qif-imp/qif-merge-groups.scm	2020-01-16 23:28:10.763905272 +0000
@@ -102,7 +102,7 @@
 
         (when progress-dialog
           (gnc-progress-dialog-set-sub progress-dialog
-                                       (_ "Finding duplicate transactions")))
+                                       (G_ "Finding duplicate transactions")))
 
         (let loop ((new-splits new-splits)
                    (work-done 0)
--- gnucash-3.8b/gnucash/import-export/qif-imp/qif-parse.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/import-export/qif-imp/qif-parse.scm	2020-01-16 23:28:33.765904175 +0000
@@ -142,7 +142,7 @@
           (list "oth s" GNC-ASSET-TYPE GNC-BANK-TYPE GNC-CASH-TYPE)
           (list "mutual" GNC-BANK-TYPE)))
   (or (assoc-ref string-map-alist (string-downcase! (string-trim-both read-value)))
-      (let ((msg (format #f (_ "Unrecognized account type '~s'. Defaulting to Bank.")
+      (let ((msg (format #f (G_ "Unrecognized account type '~s'. Defaulting to Bank.")
                          read-value)))
         (errorproc errortype msg)
         (list GNC-BANK-TYPE))))
@@ -205,7 +205,7 @@
   (and read-value
        (let ((sym (string->symbol (string-downcase (string-trim-both read-value)))))
          (or (any (lambda (lst) (and (memq sym lst) (car lst))) action-map)
-             (let ((msg (format #f (_ "Unrecognized action '~a'.") read-value)))
+             (let ((msg (format #f (G_ "Unrecognized action '~a'.") read-value)))
                (errorproc errortype msg))))))
 
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@@ -224,7 +224,7 @@
    (not (string-null? read-value))
    (let* ((secondchar (string-ref read-value 0)))
      (or (any (lambda (m) (and (memq secondchar (cdr m)) (car m))) maplist)
-         (let ((msg (format #f (_ "Unrecognized status '~a'. Defaulting to uncleared.")
+         (let ((msg (format #f (G_ "Unrecognized status '~a'. Defaulting to uncleared.")
                             read-value)))
            (errorproc errortype msg))))))
 
--- gnucash-3.8b/gnucash/import-export/qif-imp/qif-file.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/import-export/qif-imp/qif-file.scm	2020-01-16 23:27:45.623906472 +0000
@@ -82,7 +82,7 @@
       ;; This procedure simplifies handling of warnings.
       (define (mywarn . args)
         (let ((str (gnc:list-display-to-string
-                     (append (list (_ "Line") " " line-num ": ") args))))
+                     (append (list (G_ "Line") " " line-num ": ") args))))
           (set! private-retval (list #t str))
           (qif-import:log progress-dialog "qif-file:read-file" str)))
 
@@ -90,10 +90,10 @@
       ;; This procedure simplifies handling of failures
       (define (myfail . args)
         (let ((str (gnc:list-display-to-string
-                         (append (list (_ "Line") " " line-num ": ") args))))
+                         (append (list (G_ "Line") " " line-num ": ") args))))
           (set! private-retval (list #f str))
           (qif-import:log progress-dialog "qif-file:read-file"
-                          (string-append str "\n" (_ "Read aborted.")))
+                          (string-append str "\n" (G_ "Read aborted.")))
           (set! abort-read #t)))
 
       (define (strip-bom)
@@ -127,7 +127,7 @@
 
       (if progress-dialog
           (gnc-progress-dialog-set-sub progress-dialog
-                                       (string-append (_ "Reading") " " path)))
+                                       (string-append (G_ "Reading") " " path)))
 
       (with-input-from-file path
         (lambda ()
@@ -157,12 +157,12 @@
                             (begin
                               (set! value (gnc-utf8-strip-invalid-strdup value))
                               (mywarn
-                               (_ "Some characters have been discarded.")
-                               " " (_"Converted to: ") value))
+                               (G_ "Some characters have been discarded.")
+                               " " (G_"Converted to: ") value))
                             (begin
                               (mywarn
-                               (_ "Some characters have been converted according to your locale.")
-                               " " (_"Converted to: ") converted-value)
+                               (G_ "Some characters have been converted according to your locale.")
+                               " " (G_"Converted to: ") converted-value)
                               (set! value converted-value)))))
 
                   (if (eq? tag #\!)
@@ -220,7 +220,7 @@
                            (if (string-match "^option:"
                                              (symbol->string qstate-type))
                                (begin
-                                 (mywarn (_ "Ignoring unknown option") " '"
+                                 (mywarn (G_ "Ignoring unknown option") " '"
                                          qstate-type "'")
                                  (set! qstate-type old-qstate))))))
 
@@ -354,8 +354,8 @@
                             (if (qif-xtn:date current-xtn)
                                 (qif-file:add-xtn! self current-xtn)
                                 ;; The date is missing! Warn the user.
-                                (mywarn (_ "Date required.") " "
-                                        (_ "Discarding this transaction.")))
+                                (mywarn (G_ "Date required.") " "
+                                        (G_ "Discarding this transaction.")))
 
                             ;;(write current-xtn) (newline)
                             (set! current-xtn (make-qif-xtn))
@@ -387,7 +387,7 @@
                             (set! current-xtn (make-qif-class)))
 
                            (else
-                            (mywarn (_ "Ignoring class line") ": " line))))
+                            (mywarn (G_ "Ignoring class line") ": " line))))
 
 
                         ;;;;;;;;;;;;;;;;;;
@@ -455,7 +455,7 @@
                             (set! current-xtn (make-qif-cat)))
 
                            (else
-                            (mywarn (_ "Ignoring category line") ": " line))))
+                            (mywarn (G_ "Ignoring category line") ": " line))))
 
 
                         ;;;;;;;;;;;;;;;;;;;
@@ -486,7 +486,7 @@
                             (set! current-xtn (make-qif-stock-symbol)))
 
                            (else
-                            (mywarn (_ "Ignoring security line") ": " line))))
+                            (mywarn (G_ "Ignoring security line") ": " line))))
 
 
                         ;; trying to sneak one by, eh?
@@ -494,7 +494,7 @@
                           (if (and (not qstate-type)
                                    (not (string=? (string-trim line) "")))
                               (myfail
-                                (_ "File does not appear to be in QIF format")
+                                (G_ "File does not appear to be in QIF format")
                                 ": " line)))))
 
                   ;; Report the progress.
@@ -670,18 +670,18 @@
            (qif-import:log progress-dialog
                            "qif-file:parse-fields"
                            (string-append (case t
-                                            ((date) (_ "Transaction date"))
-                                            ((split-amounts) (_ "Transaction amount"))
-                                            ((share-price) (_ "Share price"))
-                                            ((num-shares) (_ "Share quantity"))
-                                            ((action) (_ "Investment action"))
-                                            ((cleared) (_ "Reconciliation status"))
-                                            ((commission) (_ "Commission"))
-                                            ((acct-type) (_ "Account type"))
-                                            ((tax-class) (_ "Tax class"))
-                                            ((budget-amt) (_ "Category budget amount"))
-                                            ((budget) (_ "Account budget amount"))
-                                            ((limit) (_ "Credit limit"))
+                                            ((date) (G_ "Transaction date"))
+                                            ((split-amounts) (G_ "Transaction amount"))
+                                            ((share-price) (G_ "Share price"))
+                                            ((num-shares) (G_ "Share quantity"))
+                                            ((action) (G_ "Investment action"))
+                                            ((cleared) (G_ "Reconciliation status"))
+                                            ((commission) (G_ "Commission"))
+                                            ((acct-type) (G_ "Account type"))
+                                            ((tax-class) (G_ "Tax class"))
+                                            ((budget-amt) (G_ "Category budget amount"))
+                                            ((budget) (G_ "Account budget amount"))
+                                            ((limit) (G_ "Credit limit"))
                                             (else (symbol->string t)))
                                           ": " e)))
        ;; Save the error condition.
@@ -694,7 +694,7 @@
       ;;
       ;; Fields of categories.
       ;;
-      (set-sub (_ "Parsing categories"))
+      (set-sub (G_ "Parsing categories"))
       ;; The category tasks will be 5% of the overall parsing effort.
       (start-sub 0.05)
 
@@ -726,7 +726,7 @@
       ;;
       ;; Fields of accounts
       ;;
-      (set-sub (_ "Parsing accounts"))
+      (set-sub (G_ "Parsing accounts"))
       ;; The account tasks will be 5% of the overall parsing effort.
       (start-sub 0.05)
 
@@ -767,7 +767,7 @@
       ;;
       ;; fields of transactions
       ;;
-      (set-sub (_ "Parsing transactions"))
+      (set-sub (G_ "Parsing transactions"))
       ;; Transaction parsing takes up the rest of the overall parsing effort.
       (start-sub 1)
 
@@ -943,7 +943,7 @@
      ((or (not formats)
           (null? formats))
       ;; Data was not in any of the supplied formats.
-      (errorproc errortype (_ "Unrecognized or inconsistent format."))
+      (errorproc errortype (G_ "Unrecognized or inconsistent format."))
       (set! retval #f)
       (set! do-parsing #f))
 
@@ -985,7 +985,7 @@
                         (begin
                           (set! retval #f)
                           (errorproc errortype
-                           (_ "Parsing failed.")))))))
+                           (G_ "Parsing failed.")))))))
             (set! work-done (+ 1 work-done))
             (reporter (/ work-done work-to-do)))
          objects))
@@ -1026,9 +1026,9 @@
                          (if (not (eq? errortype 'date))
                              (errorproc errortype
                                         (gnc:list-display-to-string (list
-                              (_ "Parse ambiguity between formats") " "
+                              (G_ "Parse ambiguity between formats") " "
                               formats "\n"
-                              (format #f (_ "Value '~a' could be ~a or ~a.")
+                              (format #f (G_ "Value '~a' could be ~a or ~a.")
                                        parsed
                                        (printer parsed)
                                        (printer this-parsed))))))))))
--- gnucash-3.8b/gnucash/import-export/qif-imp/qif-to-gnc.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/import-export/qif-imp/qif-to-gnc.scm	2020-01-16 23:28:54.557903183 +0000
@@ -186,7 +186,7 @@
                       (xaccAccountSetName new-acct new-name)
                       (xaccAccountSetDescription
                        new-acct
-                       (_ "QIF import: Name conflict with another account."))))
+                       (G_ "QIF import: Name conflict with another account."))))
 
                 ;; Set the account type.
                 (xaccAccountSetType new-acct
@@ -275,7 +275,7 @@
 
       (if progress-dialog
           (gnc-progress-dialog-set-sub progress-dialog
-                                      (_ "Preparing to convert your QIF data")))
+                                      (G_ "Preparing to convert your QIF data")))
 
       ;; Build a list of all accounts to create for the import tree.
       ;; We need to iterate over the account, category, and payee/memo
@@ -326,7 +326,7 @@
       ;; Build a local account tree to hold converted transactions.
       (if progress-dialog
           (gnc-progress-dialog-set-sub progress-dialog
-                                       (_ "Creating accounts")))
+                                       (G_ "Creating accounts")))
 
       ;; Sort the account list on the depth of the account path.  If a
       ;; short part is explicitly mentioned, make sure it gets created
@@ -375,7 +375,7 @@
       ;; duplicates.  marked transactions/splits won't get imported.
       (if progress-dialog
           (gnc-progress-dialog-set-sub progress-dialog
-                                    (_ "Matching transfers between accounts")))
+                                    (G_ "Matching transfers between accounts")))
       (if (> (length markable-xtns) 1)
           (let xloop ((xtn (car markable-xtns))
                       (rest (cdr markable-xtns)))
@@ -393,7 +393,7 @@
        (lambda (qif-file)
          (if progress-dialog
              (gnc-progress-dialog-set-sub progress-dialog
-                                          (string-append (_ "Converting") " "
+                                          (string-append (G_ "Converting") " "
                                                      (qif-file:path qif-file))))
          (for-each
           (lambda (xtn)
@@ -478,7 +478,7 @@
       ((not qif-date)
         (qif-import:log progress-dialog
                         "qif-import:qif-xtn-to-gnc-xtn"
-                        (_ "Missing transaction date."))
+                        (G_ "Missing transaction date."))
         (throw 'bad-date
                "qif-import:qif-xtn-to-gnc-xtn"
                "Missing transaction date."
--- gnucash-3.8b/gnucash/register/register-gnome/CMakeLists.txt.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/register/register-gnome/CMakeLists.txt	2020-01-16 22:54:41.836001124 +0000
@@ -1,6 +1,8 @@
 add_subdirectory(test)
 include(CheckSymbolExists)
 
+include(CheckSymbolExists)
+
 #GTK before 3.14 didn't have GDK_MODIFIER_INTENT_DEFAULT_MOD_MASK
 check_symbol_exists(GDK_MODIFIER_INTENT_DEFAULT_MOD_MASK gdk/gdktypes.h have_mod_mask)
 if (NOT have_mod_mask)
--- gnucash-3.8b/gnucash/report/business-reports/balsheet-eg.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/business-reports/balsheet-eg.scm	2020-01-16 23:35:11.432885201 +0000
@@ -174,7 +174,7 @@
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;; All the options stuff starts here
 
-(define reportname (_ "Balance Sheet (eguile)"))
+(define reportname (G_ "Balance Sheet (eguile)"))
 
 ;; define all option's names and help text so that they are properly
 ;; defined in *one* place.
@@ -433,10 +433,10 @@
              ;; Reason 1: zero Imbalance a/c
              ;; The line break in the next expressions will suppress comments as translator comments.
              (string-prefix?
-               (_ "Imbalance") (xaccAccountGetName (accrec-account accrec)))
+               (G_ "Imbalance") (xaccAccountGetName (accrec-account accrec)))
              ;; Reason 2: zero Orphan a/c
              (string-prefix?
-               (_ "Orphan") (xaccAccountGetName (accrec-account accrec))))))
+               (G_ "Orphan") (xaccAccountGetName (accrec-account accrec))))))
 
     (define (flattened-acc-depth acc)
       ;; Accounts deeper than required get moved to the requested depth
--- gnucash-3.8b/gnucash/report/business-reports/new-aging.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/business-reports/new-aging.scm	2020-01-16 23:34:06.573888296 +0000
@@ -61,10 +61,10 @@
         (list (N_ "Address Email") "i" (N_ "Display Email."))
         (list (N_ "Active") "j" (N_ "Display Active status."))))
 
-(define no-APAR-account (_ "No valid A/Payable or A/Receivable \
+(define no-APAR-account (G_ "No valid A/Payable or A/Receivable \
 account found. Please ensure valid AP/AR account exists."))
 
-(define empty-APAR-accounts (_ "A/Payable or A/Receivable accounts \
+(define empty-APAR-accounts (G_ "A/Payable or A/Receivable accounts \
 exist but have no suitable transactions."))
 
 (define num-buckets 6)
@@ -147,7 +147,7 @@
                     (gncAddressGetPhone addr)
                     (gncAddressGetFax addr)
                     (gncAddressGetEmail addr)
-                    (if (gncOwnerGetActive owner) (_ "Y") (_ "N")))))
+                    (if (gncOwnerGetActive owner) (G_ "Y") (G_ "N")))))
            (else address-list-names))))
     (fold-right (lambda (opt elt prev) (if opt (cons elt prev) prev))
                 '() address-list-options result-list)))
@@ -195,14 +195,14 @@
     (gnc:option-value (gnc:lookup-option options section name)))
 
   (define make-heading-list
-    (list (_ "Company")
-          (_ "Prepayments")
-          (_ "Current")
-          (_ "0-30 days")
-          (_ "31-60 days")
-          (_ "61-90 days")
-          (_ "91+ days")
-          (_ "Total")))
+    (list (G_ "Company")
+          (G_ "Prepayments")
+          (G_ "Current")
+          (G_ "0-30 days")
+          (G_ "31-60 days")
+          (G_ "61-90 days")
+          (G_ "91+ days")
+          (G_ "Total")))
 
   (let* ((type (if receivable ACCT-TYPE-RECEIVABLE ACCT-TYPE-PAYABLE))
          (accounts (filter (lambda (acc) (eqv? (xaccAccountGetType acc) type))
@@ -320,7 +320,7 @@
                       (append
                        (if accounts>1? '(#f) '())
                        (list (gnc:make-html-table-cell/markup
-                              "total-label-cell" (_ "Total")))
+                              "total-label-cell" (G_ "Total")))
                        (map
                         (lambda (amt)
                           (gnc:make-html-table-cell/markup
@@ -338,7 +338,7 @@
                   (gnc:html-document-add-object!
                    document
                    (gnc:make-html-text
-                    (_ "Please note some transactions were not processed")
+                    (G_ "Please note some transactions were not processed")
                     (gnc:html-markup-ol
                      (map
                       (lambda (invalid-split)
@@ -363,7 +363,7 @@
                           (else
                            (gnc:warn "split " (gnc:strify a) " has no owner")
                            (set! invalid-splits
-                             (cons (list (_ "Payment has no owner") a)
+                             (cons (list (G_ "Payment has no owner") a)
                                    invalid-splits))
                            (gncOwnerFree owner)
                            b))))
--- gnucash-3.8b/gnucash/report/business-reports/aging.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/business-reports/aging.scm	2020-01-16 23:34:50.530886198 +0000
@@ -228,7 +228,7 @@
                                          "\nClient Currency:" (gnc:strify (company-get-currency company-info)))))
                      (gnc-error-dialog '() error-str)
                      (gnc:error error-str)
-                     (cons #f (format #f (_ "Transactions relating to '~a' contain \
+                     (cons #f (format #f (G_ "Transactions relating to '~a' contain \
 more than one currency. This report is not designed to cope with this possibility.")  (gncOwnerGetName owner))))
 		   (begin
 		     (gnc:debug "it's an old company")
@@ -560,24 +560,24 @@
   ;; more general interval scheme in this report
   (define make-heading-list
     (list 
-      (_ "Company")
-      (_ "Current")
-      (_ "0-30 days")
-      (_ "31-60 days")
-      (_ "61-90 days")
-      (_ "91+ days")
-      (_ "Total")))
+      (G_ "Company")
+      (G_ "Current")
+      (G_ "0-30 days")
+      (G_ "31-60 days")
+      (G_ "61-90 days")
+      (G_ "91+ days")
+      (G_ "Total")))
      
 ;; following cols are optional 
-;;    (_ "Address Name")
-;;    (_ "Address 1")
-;;    (_ "Address 2")
-;;    (_ "Address 3")
-;;    (_ "Address 4")
-;;    (_ "Phone")
-;;    (_ "Fax")
-;;    (_ "Email")
-;;    (_ "Active")
+;;    (G_ "Address Name")
+;;    (G_ "Address 1")
+;;    (G_ "Address 2")
+;;    (G_ "Address 3")
+;;    (G_ "Address 4")
+;;    (G_ "Phone")
+;;    (G_ "Fax")
+;;    (G_ "Email")
+;;    (G_ "Active")
 
 
   ;;  Make a list of commodity collectors for column totals
@@ -701,23 +701,23 @@
 
     ;; add optional column headings
     (if disp-addr-name
-      (set! heading-list (append heading-list (list (_ "Address Name")))))
+      (set! heading-list (append heading-list (list (G_ "Address Name")))))
     (if disp-addr1
-      (set! heading-list (append heading-list (list (_ "Address 1")))))
+      (set! heading-list (append heading-list (list (G_ "Address 1")))))
     (if disp-addr2
-      (set! heading-list (append heading-list (list (_ "Address 2")))))
+      (set! heading-list (append heading-list (list (G_ "Address 2")))))
     (if disp-addr3
-      (set! heading-list (append heading-list (list (_ "Address 3")))))
+      (set! heading-list (append heading-list (list (G_ "Address 3")))))
     (if disp-addr4
-      (set! heading-list (append heading-list (list (_ "Address 4")))))
+      (set! heading-list (append heading-list (list (G_ "Address 4")))))
     (if disp-addr-phone
-      (set! heading-list (append heading-list (list (_ "Phone")))))
+      (set! heading-list (append heading-list (list (G_ "Phone")))))
     (if disp-addr-fax
-      (set! heading-list (append heading-list (list (_ "Fax")))))
+      (set! heading-list (append heading-list (list (G_ "Fax")))))
     (if disp-addr-email
-      (set! heading-list (append heading-list (list (_ "Email")))))
+      (set! heading-list (append heading-list (list (G_ "Email")))))
     (if disp-active
-      (set! heading-list (append heading-list (list (_ "Active")))))
+      (set! heading-list (append heading-list (list (G_ "Active")))))
 
     ;; set default title
     (gnc:html-document-set-title! document report-title)
@@ -793,7 +793,7 @@
 			       (addr-fax   (gncAddressGetFax   addr))
 			       (addr-email (gncAddressGetEmail addr))
 			       (company-active (if (gncOwnerGetActive owner)
-			         (_ "Y") (_ "N")))
+			         (G_ "Y") (G_ "N")))
 			       (opt-fld-list '())
 			      )
 ;;            (gnc:debug "aging-renderer: disp-addr-source=" disp-addr-source
@@ -850,7 +850,7 @@
 	    ;; add the totals
 	    (gnc:html-table-append-row!
 	     table 
-	     (cons (_ "Total") (convert-collectors total-collector-list 
+	     (cons (G_ "Total") (convert-collectors total-collector-list 
 						   report-currency
 						   exchange-fn
 						   multi-totals-p)))
@@ -860,7 +860,7 @@
 	(gnc:html-document-add-object!
 	 document
 	 (gnc:make-html-text
-	  (_ "No valid account selected. Click on the Options button and select the account to use."))))
+	  (G_ "No valid account selected. Click on the Options button and select the account to use."))))
     (qof-query-destroy query)
     (gnc:report-finished)
     document))
--- gnucash-3.8b/gnucash/report/business-reports/taxinvoice.eguile.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/business-reports/taxinvoice.eguile.scm	2020-01-16 23:33:13.707890818 +0000
@@ -1,3 +1,4 @@
+
 <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
    "http://www.w3.org/TR/html4/loose.dtd">
 <?scm
@@ -128,7 +129,7 @@
 <html dir='auto'>
 <head>
 <meta http-equiv="Content-Type" content="text/html;charset=utf-8" >
-<title><?scm:d (_ "Invoice") ?> <?scm:d invoiceid ?></title>
+<title><?scm:d (G_ "Invoice") ?> <?scm:d invoiceid ?></title>
 
 <link rel="stylesheet" href="<?scm:d (make-file-url opt-css-file) ?>" type="text/css">
 <!-- Note that the external stylesheet file is overridden by this following: -->
@@ -171,7 +172,7 @@
     </td>
   <?scm )) ?>
   <td align="left">
-    <h1 class="coyname"><?scm:d (or coyname (_ "Company Name")) ?></h1>
+    <h1 class="coyname"><?scm:d (or coyname (G_ "Company Name")) ?></h1>
   </td>
   <td align="right"><h2 class="invoice"><?scm:d opt-report-title ?>
     <?scm (if opt-invnum-next-to-title (begin ?><?scm:d (nbsp invoiceid) ?><?scm )) ?>
@@ -197,25 +198,25 @@
       <?scm )) ?>
       <?scm (if coyphone (begin ?>
         <tr>
-          <td align="right"><?scm:d (_ "Phone") ?>:&nbsp;</td>
+          <td align="right"><?scm:d (G_ "Phone") ?>:&nbsp;</td>
           <td align="right"><?scm:d coyphone ?></td>
         </tr>
       <?scm )) ?>
       <?scm (if coyfax (begin ?>
         <tr>
-          <td align="right"><?scm:d (_ "Fax") ?>:&nbsp;</td>
+          <td align="right"><?scm:d (G_ "Fax") ?>:&nbsp;</td>
           <td align="right"><?scm:d coyfax ?></td>
         </tr>
       <?scm )) ?>
       <?scm (if coyemail (begin ?>
         <tr>
-          <td align="right"><?scm:d (_ "Email") ?>:&nbsp;</td>
+          <td align="right"><?scm:d (G_ "Email") ?>:&nbsp;</td>
           <td align="right"><?scm:d coyemail ?></td>
         </tr>
       <?scm )) ?>
       <?scm (if coyurl (begin ?>
         <tr>
-          <td align="right"><?scm:d (_ "Website") ?>:&nbsp;</td>
+          <td align="right"><?scm:d (G_ "Website") ?>:&nbsp;</td>
           <td align="right"><?scm:d coyurl ?></td>
         </tr>
       <?scm )) ?>
@@ -247,15 +248,15 @@
       <?scm )) ?>
       <?scm (if (not isposted) (begin ?>
         <tr>
-           <td colspan="2" align="right"><?scm:d (_ "Invoice in progress...") ?></td>
+           <td colspan="2" align="right"><?scm:d (G_ "Invoice in progress...") ?></td>
         </tr>
       <?scm ) (begin ?>
         <tr>
-           <td align="right"><?scm:d (nbsp (_ "Invoice Date")) ?>:&nbsp;</td>
+           <td align="right"><?scm:d (nbsp (G_ "Invoice Date")) ?>:&nbsp;</td>
            <td align="right"><?scm:d (nbsp (gnc-print-time64 postdate dateformat)) ?></td>
         </tr>
         <tr>
-           <td align="right"><?scm:d (nbsp (_ "Due Date")) ?>:&nbsp;</td>
+           <td align="right"><?scm:d (nbsp (G_ "Due Date")) ?>:&nbsp;</td>
            <td align="right"><?scm:d (nbsp (gnc-print-time64 duedate dateformat)) ?></td>
         </tr> <?scm )) ?>
         <?scm (if (not (string=? billingid "")) (begin ?>
@@ -290,9 +291,9 @@
   <thead>
     <tr bgcolor="#ccc" valign="bottom">
       <?scm (if opt-col-date (begin ?>
-      <th align="center" ><?scm:d (_ "Date") ?></th>
+      <th align="center" ><?scm:d (G_ "Date") ?></th>
       <?scm (set! tbl_cols (+ tbl_cols 1)) )) ?>
-      <th align="left" width="80%"><?scm:d (_ "Description") ?></th>
+      <th align="left" width="80%"><?scm:d (G_ "Description") ?></th>
       <?scm (if (and units? opt-col-units) (begin ?>
         <th align="left"><?scm:d opt-units-heading ?></th>
       <?scm (set! tbl_cols (+ tbl_cols 1)) )) ?>
@@ -442,8 +443,8 @@
 
     (if (null? opt-invoice)
     (begin
-      (display (string-append "<h2>" (_ "Tax Invoice") "</h2>"))
-      (display (string-append "<p>" (_ "No invoice has been selected -- please use the Options menu to select one.") "</p>"))
+      (display (string-append "<h2>" (G_ "Tax Invoice") "</h2>"))
+      (display (string-append "<p>" (G_ "No invoice has been selected -- please use the Options menu to select one.") "</p>"))
     )
     (let* ((owner     (gncInvoiceGetOwner  opt-invoice))
            (endowner  (gncOwnerGetEndOwner owner))
--- gnucash-3.8b/gnucash/report/business-reports/invoice.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/business-reports/invoice.scm	2020-01-16 23:34:30.718887144 +0000
@@ -87,50 +87,50 @@
 (define (make-heading-list column-vector)
   (append
    (addif (date-col column-vector)
-          (_ "Date"))
+          (G_ "Date"))
    (addif (description-col column-vector)
-          (_ "Description"))
+          (G_ "Description"))
    (addif (action-col column-vector)
-          (_ "Action"))
+          (G_ "Action"))
    (addif (quantity-col column-vector)
-          (_ "Quantity"))
+          (G_ "Quantity"))
    (addif (price-col column-vector)
-          (_ "Unit Price"))
+          (G_ "Unit Price"))
    (addif (discount-col column-vector)
-          (_ "Discount"))
+          (G_ "Discount"))
    (addif (tax-col column-vector)
-          (_ "Taxable"))
+          (G_ "Taxable"))
    (addif (taxvalue-col column-vector)
-          (_ "Tax Amount"))
+          (G_ "Tax Amount"))
    (addif (value-col column-vector)
-          (_ "Total"))))
+          (G_ "Total"))))
 
 (define (monetary-or-percent numeric currency entry-type)
   (if (eqv? entry-type GNC-AMT-TYPE-PERCENT)
-      (string-append (gnc:default-html-gnc-numeric-renderer numeric #f) " " (_ "%"))
+      (string-append (gnc:default-html-gnc-numeric-renderer numeric #f) " " (G_ "%"))
       (gnc:make-gnc-monetary currency numeric)))
 
 (define layout-key-list
   ;; Translators: "Their details" refer to the invoice 'other party' details i.e. client/vendor name/address/ID
-  (list (cons 'client (list (cons 'text (_ "Their details"))
-                            (cons 'tip (_ "Client or vendor name, address and ID"))))
+  (list (cons 'client (list (cons 'text (G_ "Their details"))
+                            (cons 'tip (G_ "Client or vendor name, address and ID"))))
 
         ;; Translators: "Our details" refer to the book owner's details i.e. name/address/tax-ID
-        (cons 'company (list (cons 'text (_ "Our details"))
-                             (cons 'tip (_ "Company name, address and tax-ID"))))
+        (cons 'company (list (cons 'text (G_ "Our details"))
+                             (cons 'tip (G_ "Company name, address and tax-ID"))))
 
-        (cons 'invoice (list (cons 'text (_ "Invoice details"))
-                             (cons 'tip (_ "Invoice date, due date, billing ID, terms, job details"))))
+        (cons 'invoice (list (cons 'text (G_ "Invoice details"))
+                             (cons 'tip (G_ "Invoice date, due date, billing ID, terms, job details"))))
 
-        (cons 'today (list (cons 'text (_ "Today's date"))
-                           (cons 'tip (_ "Today's date"))))
+        (cons 'today (list (cons 'text (G_ "Today's date"))
+                           (cons 'tip (G_ "Today's date"))))
 
-        (cons 'picture (list (cons 'text (_ "Picture"))
-                             (cons 'tip (_ "Picture"))))
+        (cons 'picture (list (cons 'text (G_ "Picture"))
+                             (cons 'tip (G_ "Picture"))))
 
         ;; Translators: "(empty)" refers to invoice header section being left blank
-        (cons 'none (list (cons 'text (_ "(empty)"))
-                          (cons 'tip (_ "Empty space"))))))
+        (cons 'none (list (cons 'text (G_ "(empty)"))
+                          (cons 'tip (G_ "Empty space"))))))
 
 (define variant-list
   (list
@@ -276,7 +276,7 @@
    (gnc:make-text-option
     (N_ "Display") (N_ "Payable to string")
     "ua2" (N_ "The phrase for specifying to whom payments should be made.")
-    (_ "Please make all checks payable to")))
+    (G_ "Please make all checks payable to")))
 
   (gnc:register-inv-option
    (gnc:make-complex-boolean-option
@@ -289,7 +289,7 @@
    (gnc:make-text-option
     (N_ "Display") (N_ "Company contact string")
     "ub2" (N_ "The phrase used to introduce the company contact.")
-    (_ "Please direct all enquiries to")))
+    (G_ "Please direct all enquiries to")))
 
   (gnc:register-inv-option
    (gnc:make-number-range-option
@@ -343,7 +343,7 @@
    (gnc:make-text-option
     (N_ "Display") (N_ "Extra Notes")
     "u" (N_ "Extra notes to put on the invoice.")
-    (_ "Thank you for your patronage!")))
+    (G_ "Thank you for your patronage!")))
 
   (gnc:register-inv-option
    (gnc:make-multichoice-option
@@ -435,7 +435,7 @@
                  (qof-print-date (xaccTransGetDate t)))
 
           (addif (description-col used-columns)
-                 (_ "Payment, thank you!"))
+                 (G_ "Payment, thank you!"))
 
           (list (gnc:make-html-table-cell/size/markup
                  1 (- (max 3 (num-columns-required used-columns))
@@ -490,7 +490,7 @@
                          (and (gncEntryGetBillTaxable entry)
                               (gncEntryGetBillTaxTable entry)))
                      ;; Translators: This "T" is displayed in the taxable column, if this entry contains tax
-                     (_ "T") ""))
+                     (G_ "T") ""))
 
           (addif (taxvalue-col used-columns)
                  (gnc:make-html-table-cell/markup
@@ -537,7 +537,7 @@
 
               (if display-subtotal?
                   (add-subtotal-row (gncInvoiceGetTotalSubtotal invoice)
-                                    "grand-total" (_ "Net Price")))
+                                    "grand-total" (G_ "Net Price")))
 
               (if display-all-taxes
                   (for-each
@@ -550,10 +550,10 @@
 
                   ;; nope, just show the total tax.
                   (add-subtotal-row (gncInvoiceGetTotalTax invoice)
-                                    "grand-total" (_ "Tax")))
+                                    "grand-total" (G_ "Tax")))
 
               (add-subtotal-row (gncInvoiceGetTotal invoice)
-                                "grand-total" (_ "Total Price"))
+                                "grand-total" (G_ "Total Price"))
 
               (total-collector 'add currency (gncInvoiceGetTotal invoice))
 
@@ -573,7 +573,7 @@
                      splits)))
 
               (add-subtotal-row (cadr (total-collector 'getpair currency #f))
-                                "grand-total" (_ "Amount Due")))
+                                "grand-total" (G_ "Amount Due")))
 
             (begin
 
@@ -602,19 +602,19 @@
         (begin
           (gnc:html-table-append-row!
            invoice-details-table
-           (make-date-row (_ "Date") (gncInvoiceGetDatePosted invoice) date-format))
+           (make-date-row (G_ "Date") (gncInvoiceGetDatePosted invoice) date-format))
 
           (if (opt-val "Display" "Due Date")
               (gnc:html-table-append-row!
                invoice-details-table
-               (make-date-row (_ "Due Date") (gncInvoiceGetDateDue invoice) date-format))))
+               (make-date-row (G_ "Due Date") (gncInvoiceGetDateDue invoice) date-format))))
 
         (gnc:html-table-append-row! invoice-details-table
                                     (gnc:make-html-table-cell/size
                                      1 2 (gnc:make-html-span/markup
                                           "invoice-in-progress"
                                           (gnc:make-html-text
-                                           (_ "Invoice in progress..."))))))
+                                           (G_ "Invoice in progress..."))))))
 
     (if (opt-val "Display" "Billing ID")
         (let ((billing-id (gncInvoiceGetBillingID invoice)))
@@ -622,7 +622,7 @@
               (begin
                 (gnc:html-table-append-row! invoice-details-table
                                             (list
-                                             (_ "Reference:")
+                                             (G_ "Reference:")
                                              (gnc:make-html-div/markup
                                               "div-align-right"
                                               (multiline-to-html-text billing-id))))
@@ -634,7 +634,7 @@
           (if (and terms (not (string-null? terms)))
               (gnc:html-table-append-row! invoice-details-table
                                           (list
-                                           (_ "Terms:")
+                                           (G_ "Terms:")
                                            (gnc:make-html-div/markup
                                             "div-align-right"
                                             (multiline-to-html-text terms)))))))
@@ -644,12 +644,12 @@
              (not (string-null? jobnumber)))
         (begin
           (gnc:html-table-append-row! invoice-details-table
-                                      (list (_ "Job number:")
+                                      (list (G_ "Job number:")
                                             (gnc:make-html-div/markup
                                              "div-align-right"
                                              jobnumber)))
           (gnc:html-table-append-row! invoice-details-table
-                                      (list (_ "Job name:")
+                                      (list (G_ "Job name:")
                                             (gnc:make-html-div/markup
                                              "div-align-right"
                                              jobname)))))
@@ -695,7 +695,7 @@
          (if (and reference (not (string-null? reference)))
              (gnc:html-table-append-row! table
                                          (list (string-append
-                                                (_ "REF") " "
+                                                (G_ "REF") " "
                                                 reference))))))
      orders)
 
@@ -773,7 +773,7 @@
     (if (null? invoice)
         (gnc:html-document-add-object! document
                                        (gnc:make-html-text
-                                        (_ "No valid invoice selected. Click on the Options button and select the invoice to use.")))
+                                        (G_ "No valid invoice selected. Click on the Options button and select the invoice to use.")))
         (let* ((book (gncInvoiceGetBook invoice))
                (owner (gncInvoiceGetOwner invoice))
                (type (gncInvoiceGetType invoice))
@@ -782,20 +782,20 @@
                (credit-note? (memv type (list GNC-INVOICE-CUST-CREDIT-NOTE GNC-INVOICE-VEND-CREDIT-NOTE GNC-INVOICE-EMPL-CREDIT-NOTE)))
                (default-title (cond
                                ((eqv? type GNC-INVOICE-VEND-INVOICE)
-                                (_ "Bill"))
+                                (G_ "Bill"))
                                ((eqv? type GNC-INVOICE-EMPL-INVOICE)
-                                (_ "Expense Voucher"))
+                                (G_ "Expense Voucher"))
                                ((memv type (list GNC-INVOICE-CUST-CREDIT-NOTE
                                                  GNC-INVOICE-VEND-CREDIT-NOTE
                                                  GNC-INVOICE-EMPL-CREDIT-NOTE))
-                                (_ "Credit Note"))
+                                (G_ "Credit Note"))
                                (else
-                                (_ "Invoice"))))
+                                (G_ "Invoice"))))
                (title (if (string-null? custom-title) default-title custom-title))
                ;; Translators: This is the format of the invoice title.
                ;; The first ~a is "Invoice", "Credit Note"... and the second the number.
                ;; Replace " #" by whatever is common as number abbreviation, i.e. "~a Nr. ~a"
-               (invoice-title (format #f (_"~a #~a") title (gncInvoiceGetID invoice)))
+               (invoice-title (format #f (G_"~a #~a") title (gncInvoiceGetID invoice)))
                (layout-lookup-table (list (cons 'none #f)
                                           (cons 'picture (gnc:make-html-div/markup
                                                           "picture"
--- gnucash-3.8b/gnucash/report/business-reports/balsheet-eg.eguile.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/business-reports/balsheet-eg.eguile.scm	2020-01-16 23:35:03.183885595 +0000
@@ -117,7 +117,7 @@
                   maxdepth
                   (accrec-depth accrec)
                   (if (> (accrec-depth accrec) 1) rshift 0)
-                  (string-append (_ "Total") " " (accrec-namelink accrec))
+                  (string-append (G_ "Total") " " (accrec-namelink accrec))
                   (format-comm-coll-total (accrec-subtotal-cc accrec))
                   (<= (accrec-depth accrec) 1)        ; total?
                   (> (accrec-depth accrec) 0)))))))   ; leftoverrule?
@@ -170,29 +170,29 @@
          (rshift-ie 0)
          (balancing-cc (gnc:make-commodity-collector))
          (etl-cc (gnc:make-commodity-collector)))
-    (accrec-set-namelink! accrec-as (_ "Assets Accounts"))
+    (accrec-set-namelink! accrec-as (G_ "Assets Accounts"))
     (accrec-set-placeholder?! accrec-as #t)
     (balancing-cc 'merge (accrec-subtotal-cc accrec-as) #f)
     (if (and (one-depth-1 accrec-as)
              (> (accrec-treedepth accrec-as) 1))
       (set! rshift-as 1))
-    (accrec-set-namelink! accrec-li (_ "Liability Accounts"))
+    (accrec-set-namelink! accrec-li (G_ "Liability Accounts"))
     (accrec-set-placeholder?! accrec-li #t)
     (etl-cc 'merge (accrec-subtotal-cc accrec-li) #f)
     (if (and (one-depth-1 accrec-li)
              (> (accrec-treedepth accrec-li) 1))
       (set! rshift-li 1))
-    (accrec-set-namelink! accrec-eq (_ "Equity Accounts"))
+    (accrec-set-namelink! accrec-eq (G_ "Equity Accounts"))
     (accrec-set-placeholder?! accrec-eq #t)
     (etl-cc 'merge (accrec-subtotal-cc accrec-eq) #f)
-    (accrec-set-namelink! accrec-tr (_ "Trading Accounts"))
+    (accrec-set-namelink! accrec-tr (G_ "Trading Accounts"))
     (accrec-set-placeholder?! accrec-tr #t)
     (etl-cc 'merge (accrec-subtotal-cc accrec-tr) #f)
     (balancing-cc 'minusmerge etl-cc #f)
     (accrec-set-namelink! accrec-ie
                           (if (gnc-numeric-negative-p (accrec-balance-num accrec-ie))
-                            (_ "Retained Losses")
-                            (_ "Retained Earnings")))
+                            (G_ "Retained Losses")
+                            (G_ "Retained Earnings")))
     (accrec-set-placeholder?! accrec-ie #t)
     (balancing-cc 'minusmerge (accrec-subtotal-cc accrec-ie) #f)
     (if (and (one-depth-1 accrec-eq)
@@ -252,7 +252,7 @@
     (hrule (* maxdepth 2))
     (display-acc-row
       maxdepth 0 0
-      (_ "Total Equity, Trading, and Liabilities")
+      (G_ "Total Equity, Trading, and Liabilities")
       (format-comm-coll-total etl-cc)
       #t #f)
     (hrule (* maxdepth 2))
@@ -261,7 +261,7 @@
     (if (not (gnc-commodity-collector-allzero? balancing-cc))
         (display-acc-row
           maxdepth 0 0
-          (_ "Imbalance Amount")
+          (G_ "Imbalance Amount")
           (format-comm-coll-total balancing-cc)
           #t #f))
 
@@ -278,7 +278,7 @@
   (if (not (null? xlist))
     (begin
 ?>
-<p><?scm:d (_ "<strong>Exchange Rates</strong> used for this report") ?>
+<p><?scm:d (G_ "<strong>Exchange Rates</strong> used for this report") ?>
 <table border="0">
 <?scm
       (for xpair in xlist do
--- gnucash-3.8b/gnucash/report/business-reports/receipt.eguile.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/business-reports/receipt.eguile.scm	2020-01-16 23:33:38.511889635 +0000
@@ -106,7 +106,7 @@
 <html dir='auto'>
 <head>
 <meta http-equiv="Content-Type" content="text/html;charset=utf-8" >
-<title><?scm:d (_ "Invoice") ?> <?scm:d invoiceid ?></title>
+<title><?scm:d (G_ "Invoice") ?> <?scm:d invoiceid ?></title>
 
 <link rel="stylesheet" href="<?scm:d opt-css-file ?>" type="text/css">
 <!-- Note that the external stylesheet file is overridden by this following: -->
@@ -139,7 +139,7 @@
 
   <!-- header texts -->
 
-  <h1><?scm:d (nbsp (_ "Invoice No.")) ?> <?scm:d invoiceid ?></h1>
+  <h1><?scm:d (nbsp (G_ "Invoice No.")) ?> <?scm:d invoiceid ?></h1>
   <h2><?scm:d (gnc-print-time64 (gnc:get-today) opt-date-format) ?></h2>
   <p>&nbsp;</p>
   <?scm (if (not (string=? billcontact "")) (begin ?>
@@ -158,8 +158,8 @@
     <table border="0" width="100%" class="entries">
       <thead>
         <tr>
-          <th align="left" ><?scm:d (_ "Date") ?></th>
-          <th align="left" ><?scm:d (_ "Descr.") ?></th>
+          <th align="left" ><?scm:d (G_ "Date") ?></th>
+          <th align="left" ><?scm:d (G_ "Descr.") ?></th>
           <th align="right"><?scm:d opt-qty-heading ?></th>
           <th align="right"><?scm:d opt-unit-price-heading ?></th>
           <th align="right"><?scm:d opt-net-price-heading ?></th>
@@ -289,15 +289,15 @@
   ; 'mainline' code: check for a valid invoice, then display the report
   (if (null? opt-invoice)
     (begin
-      (display (string-append "<h2>" (_ "Receipt") "</h2>"))
-      (display (string-append "<p>" (_ "No invoice has been selected -- please use the Options menu to select one.") "</p>")))
+      (display (string-append "<h2>" (G_ "Receipt") "</h2>"))
+      (display (string-append "<p>" (G_ "No invoice has been selected -- please use the Options menu to select one.") "</p>")))
     (let* ((owner     (gncInvoiceGetOwner  opt-invoice))
            (endowner  (gncOwnerGetEndOwner owner))
            (ownertype (gncOwnerGetType     endowner)))
       (if (not (eqv? ownertype GNC-OWNER-CUSTOMER))
         (begin
-          (display (string-append "<h2>" (_ "Receipt") "</h2>"))
-          (display (string-append "<p>" (_ "This report is designed for customer (sales) invoices only. Please use the Options menu to select an <em>Invoice</em>, not a Bill or Expense Voucher.") "</p>")))
+          (display (string-append "<h2>" (G_ "Receipt") "</h2>"))
+          (display (string-append "<p>" (G_ "This report is designed for customer (sales) invoices only. Please use the Options menu to select an <em>Invoice</em>, not a Bill or Expense Voucher.") "</p>")))
         (display-report opt-invoice owner endowner ownertype))))
 
 ?>
--- gnucash-3.8b/gnucash/report/business-reports/taxinvoice.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/business-reports/taxinvoice.scm	2020-01-16 23:32:36.744892582 +0000
@@ -71,7 +71,7 @@
       (if (and amt? pc?) (display " +&nbsp;"))        ; both - this seems unlikely in practice
       (if amt?
         (display-comm-coll-total amttot #f))
-      (if (and (not amt?) (not pc?)) (display (_ "n/a"))))))        ; neither
+      (if (and (not amt?) (not pc?)) (display (G_ "n/a"))))))        ; neither
 
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;;; Define all the options
@@ -189,47 +189,47 @@
   ;; Heading options
   (add-option (gnc:make-string-option
                 ; page / name / orderkey / tooltip / default
-                headingpage optname-report-title "a" "" (_ "Invoice")))
+                headingpage optname-report-title "a" "" (G_ "Invoice")))
   (add-option (gnc:make-string-option
-                headingpage optname-units "b" "" (_ "Units")))
+                headingpage optname-units "b" "" (G_ "Units")))
   (add-option (gnc:make-string-option
-                headingpage optname-qty "c" "" (_ "Qty")))
+                headingpage optname-qty "c" "" (G_ "Qty")))
   (add-option (gnc:make-string-option
-                headingpage optname-unit-price "d" "" (_ "Unit Price")))
+                headingpage optname-unit-price "d" "" (G_ "Unit Price")))
   (add-option (gnc:make-string-option
-                headingpage optname-disc-rate "e" "" (_ "Discount Rate")))
+                headingpage optname-disc-rate "e" "" (G_ "Discount Rate")))
   (add-option (gnc:make-string-option
-                headingpage optname-disc-amount "f" "" (_ "Discount Amount")))
+                headingpage optname-disc-amount "f" "" (G_ "Discount Amount")))
   (add-option (gnc:make-string-option
-                headingpage optname-net-price "g" "" (_ "Net Price")))
+                headingpage optname-net-price "g" "" (G_ "Net Price")))
   (add-option (gnc:make-string-option
-                headingpage optname-tax-rate "h" "" (_ "Tax Rate")))
+                headingpage optname-tax-rate "h" "" (G_ "Tax Rate")))
   (add-option (gnc:make-string-option
-                headingpage optname-tax-amount "i" "" (_ "Tax Amount")))
+                headingpage optname-tax-amount "i" "" (G_ "Tax Amount")))
   (add-option (gnc:make-string-option
-                headingpage optname-total-price "j" "" (_ "Total Price")))
+                headingpage optname-total-price "j" "" (G_ "Total Price")))
   (add-option (gnc:make-string-option
-                headingpage2 optname-subtotal "a" "" (_ "Sub-total")))
+                headingpage2 optname-subtotal "a" "" (G_ "Sub-total")))
   (add-option (gnc:make-string-option
-                headingpage2 optname-amount-due "b" "" (_ "Amount Due")))
+                headingpage2 optname-amount-due "b" "" (G_ "Amount Due")))
   (add-option (gnc:make-string-option
                 headingpage2 optname-payment-recd "c" "" 
-                (_ "Payment received, thank you!")))
+                (G_ "Payment received, thank you!")))
   (add-option (gnc:make-string-option	headingpage2	optname-invoice-number-text
-    "d" "" (_ "Invoice number: ")))
+    "d" "" (G_ "Invoice number: ")))
   (add-option (gnc:make-string-option	headingpage2	optname-to-text
-    "e" "" (_ "To: ")))
+    "e" "" (G_ "To: ")))
   (add-option (gnc:make-string-option	headingpage2	optname-ref-text
-    "f" "" (_ "Your ref: ")))
+    "f" "" (G_ "Your ref: ")))
   (add-option (gnc:make-string-option	headingpage2	optname-jobnumber-text
-    "g" "" (_ "Job number: ")))
+    "g" "" (G_ "Job number: ")))
   (add-option (gnc:make-string-option	headingpage2	optname-jobname-text
-    "h" "" (_ "Job name: ")))
+    "h" "" (G_ "Job name: ")))
 
   (add-option (gnc:make-text-option
                 notespage optname-extra-notes "a"
-                (_ "Notes added at end of invoice -- may contain HTML markup.") 
-                (_ "Thank you for your patronage!")))
+                (G_ "Notes added at end of invoice -- may contain HTML markup.") 
+                (G_ "Thank you for your patronage!")))
                 ;(N_ "(Development version -- don't rely on the numbers on this report without double-checking them.<br/>Change the 'Extra Notes' option to get rid of this message)")))
 
   (add-option (gnc:make-text-option	notespage optname-extra-css "b"
@@ -326,14 +326,14 @@
          (gnc:option-set-value option value)))
 
   (let ((options (options-generator)))
-       (set-opt options headingpage optname-report-title (_ "Tax Invoice"))
-       (set-opt options headingpage optname-unit-price (_ "Unit"))
-       (set-opt options headingpage optname-tax-rate (_ "GST Rate"))
-       (set-opt options headingpage optname-tax-amount (_ "GST Amount"))
-       (set-opt options headingpage2 optname-amount-due (_ "Amount Due (inc GST)"))
-       (set-opt options headingpage2 optname-invoice-number-text (_ "Invoice #: "))
-       (set-opt options headingpage2 optname-ref-text (_ "Reference: "))
-       (set-opt options headingpage2 optname-jobname-text (_ "Engagement: "))
+       (set-opt options headingpage optname-report-title (G_ "Tax Invoice"))
+       (set-opt options headingpage optname-unit-price (G_ "Unit"))
+       (set-opt options headingpage optname-tax-rate (G_ "GST Rate"))
+       (set-opt options headingpage optname-tax-amount (G_ "GST Amount"))
+       (set-opt options headingpage2 optname-amount-due (G_ "Amount Due (inc GST)"))
+       (set-opt options headingpage2 optname-invoice-number-text (G_ "Invoice #: "))
+       (set-opt options headingpage2 optname-ref-text (G_ "Reference: "))
+       (set-opt options headingpage2 optname-jobname-text (G_ "Engagement: "))
        (set-opt options notespage optname-extra-css "h1.coyname { text-align: right; margin-bottom: 0px ; font-size: 200%; } h2.invoice { text-align: left; margin-bottom: 0px ; font-size: 500%; }")
        options))
 
--- gnucash-3.8b/gnucash/report/business-reports/customer-summary.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/business-reports/customer-summary.scm	2020-01-16 23:34:42.570886578 +0000
@@ -289,10 +289,10 @@
          (type-str (N_ "Customer")))
 
     (gnc:html-document-set-title!
-     document (string-append (_ type-str) " " (_ "Report")))
+     document (string-append (G_ type-str) " " (G_ "Report")))
 
     (gnc:html-document-set-title!
-     document (format #f (_ "~a ~a - ~a")
+     document (format #f (G_ "~a ~a - ~a")
                       report-title
                       (qof-print-date start-date)
                       (qof-print-date end-date)))
@@ -312,19 +312,19 @@
       (gnc:html-document-add-object!
        document
        (gnc:make-html-text
-        (_ "No valid customer found."))))
+        (G_ "No valid customer found."))))
 
      (else
       (let ((all-splits (query #f all-accounts start-date end-date))
             (table (gnc:make-html-table))
             (total-sales (gnc:make-commodity-collector))
             (total-expense (gnc:make-commodity-collector))
-            (headings (cons* (_ "Customer")
-                             (_ "Profit")
-                             (_ "Markup")
-                             (_ "Sales")
+            (headings (cons* (G_ "Customer")
+                             (G_ "Profit")
+                             (G_ "Markup")
+                             (G_ "Sales")
                              (if show-column-expense?
-                                 (list (_ "Expense"))
+                                 (list (G_ "Expense"))
                                  '())))
             (results (map
                       (lambda (owner)
@@ -400,7 +400,7 @@
                (unless (and (zero? profit) (zero? sales))
                  (set! sortingtable
                    (cons (vector
-                          (_ "No Customer") comm markup profit sales expense #f)
+                          (G_ "No Customer") comm markup profit sales expense #f)
                          sortingtable)))))
            commodities))
 
@@ -474,9 +474,9 @@
                     (markup (markup-percent profit sales)))
                (add-row (if commodities>1?
                             (format #f "~a (~a)"
-                                    (_ "Total")
+                                    (G_ "Total")
                                     (gnc-commodity-get-mnemonic comm))
-                            (_ "Total"))
+                            (G_ "Total"))
                         comm markup
                         (gnc:make-gnc-monetary comm profit)
                         (gnc:make-gnc-monetary comm sales)
--- gnucash-3.8b/gnucash/report/business-reports/receipt.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/business-reports/receipt.scm	2020-01-16 23:33:25.511890255 +0000
@@ -64,7 +64,7 @@
       (if (and amt? pc?) (display " +&nbsp;"))        ; both - this seems unlikely in practice
       (if amt?
         (display-comm-coll-total amttot #f))
-      (if (and (not amt?) (not pc?)) (display (_ "n/a"))))))        ; neither
+      (if (and (not amt?) (not pc?)) (display (G_ "n/a"))))))        ; neither
 
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;;; Define all the options
@@ -159,37 +159,37 @@
                (N_ "The format for the date->string conversion for today's date.")
                ;; Translators: Boost::date_time format string
                ;; "%l:%M %P, %e %B %Y" means " 9:56 pm, 19 June 2019"
-               (_ "%l:%M %P, %e %B %Y")))
+               (G_ "%l:%M %P, %e %B %Y")))
 
   ;; Heading options
   (add-option (gnc:make-string-option
                 ; page / name / orderkey / tooltip / default
-                headingpage optname-report-title "a" "" (_ "Invoice")))
+                headingpage optname-report-title "a" "" (G_ "Invoice")))
   (add-option (gnc:make-string-option
-                headingpage optname-units "b" "" (_ "Units")))
+                headingpage optname-units "b" "" (G_ "Units")))
   (add-option (gnc:make-string-option
-                headingpage optname-qty "c" "" (_ "Qty")))
+                headingpage optname-qty "c" "" (G_ "Qty")))
   (add-option (gnc:make-string-option
-                headingpage optname-unit-price "d" "" (_ "Unit Price")))
+                headingpage optname-unit-price "d" "" (G_ "Unit Price")))
   (add-option (gnc:make-string-option
-                headingpage optname-disc-rate "e" "" (_ "Discount Rate")))
+                headingpage optname-disc-rate "e" "" (G_ "Discount Rate")))
   (add-option (gnc:make-string-option
-                headingpage optname-disc-amount "f" "" (_ "Discount Amount")))
+                headingpage optname-disc-amount "f" "" (G_ "Discount Amount")))
   (add-option (gnc:make-string-option
-                headingpage optname-net-price "g" "" (_ "Net Price")))
+                headingpage optname-net-price "g" "" (G_ "Net Price")))
   (add-option (gnc:make-string-option
-                headingpage optname-tax-rate "h" "" (_ "Tax Rate")))
+                headingpage optname-tax-rate "h" "" (G_ "Tax Rate")))
   (add-option (gnc:make-string-option
-                headingpage optname-tax-amount "i" "" (_ "Tax Amount")))
+                headingpage optname-tax-amount "i" "" (G_ "Tax Amount")))
   (add-option (gnc:make-string-option
-                headingpage optname-total-price "j" "" (_ "Total Price")))
+                headingpage optname-total-price "j" "" (G_ "Total Price")))
   (add-option (gnc:make-string-option
-                headingpage2 optname-subtotal "a" "" (_ "Sub-total")))
+                headingpage2 optname-subtotal "a" "" (G_ "Sub-total")))
   (add-option (gnc:make-string-option
-                headingpage2 optname-amount-due "b" "" (_ "Amount Due")))
+                headingpage2 optname-amount-due "b" "" (G_ "Amount Due")))
   (add-option (gnc:make-string-option
                 headingpage2 optname-payment-recd "c" ""
-                (_ "Payment received, thank you!")))
+                (G_ "Payment received, thank you!")))
 
   (add-option (gnc:make-text-option
                 notespage optname-extra-notes "a"
--- gnucash-3.8b/gnucash/report/business-reports/owner-report.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/business-reports/owner-report.scm	2020-01-16 23:33:48.057889179 +0000
@@ -79,18 +79,18 @@
 
 ;; Error strings in case there is no (valid) selection (translated)
 (define (invalid-selection-title-string owner-type)
-  (cond ((eqv? owner-type GNC-OWNER-CUSTOMER) (_ "No valid customer selected."))
-        ((eqv? owner-type GNC-OWNER-EMPLOYEE) (_ "No valid employee selected."))
+  (cond ((eqv? owner-type GNC-OWNER-CUSTOMER) (G_ "No valid customer selected."))
+        ((eqv? owner-type GNC-OWNER-EMPLOYEE) (G_ "No valid employee selected."))
         ;; FALL THROUGH
         (else
-          (_ "No valid company selected."))))
+          (G_ "No valid company selected."))))
 
 (define (invalid-selection-string owner-type)
-  (cond ((eqv? owner-type GNC-OWNER-CUSTOMER) (_ "This report requires a customer to be selected."))
-        ((eqv? owner-type GNC-OWNER-EMPLOYEE) (_ "This report requires a employee to be selected."))
+  (cond ((eqv? owner-type GNC-OWNER-CUSTOMER) (G_ "This report requires a customer to be selected."))
+        ((eqv? owner-type GNC-OWNER-EMPLOYEE) (G_ "This report requires a employee to be selected."))
         ;; FALL THROUGH
         (else
-          (_ "This report requires a company to be selected."))))
+          (G_ "This report requires a company to be selected."))))
 
 ;; Html formatted error message documents
 (define (gnc:html-make-no-owner-warning
@@ -106,17 +106,17 @@
   (gnc:html-make-generic-warning
     report-title-string
     report-id
-    (_ "No valid account selected")
-    (_ "This report requires a valid account to be selected.")))
+    (G_ "No valid account selected")
+    (G_ "This report requires a valid account to be selected.")))
 
 
 ;; Document names, used in report names (translated)
 (define (doctype-str owner-type)
-  (cond ((eqv? owner-type GNC-OWNER-CUSTOMER) (_ "Customer"))
-        ((eqv? owner-type GNC-OWNER-EMPLOYEE) (_ "Employee"))
+  (cond ((eqv? owner-type GNC-OWNER-CUSTOMER) (G_ "Customer"))
+        ((eqv? owner-type GNC-OWNER-EMPLOYEE) (G_ "Employee"))
         ;; FALL THROUGH
         (else
-          (_ "Vendor")))) 
+          (G_ "Vendor")))) 
 
 (define (date-col columns-used)
   (vector-ref columns-used 0))
@@ -171,25 +171,25 @@
 (define (make-heading-list column-vector)
   (let ((heading-list '()))
     (if (date-col column-vector)
-        (addto! heading-list (_ date-header)))
+        (addto! heading-list (G_ date-header)))
     (if (date-due-col column-vector)
-        (addto! heading-list (_ due-date-header)))
+        (addto! heading-list (G_ due-date-header)))
     (if (num-col column-vector)
-        (addto! heading-list (_ reference-header)))
+        (addto! heading-list (G_ reference-header)))
     (if (type-col column-vector)
-    (addto! heading-list (_ type-header)))
+    (addto! heading-list (G_ type-header)))
     (if (memo-col column-vector)
-    (addto! heading-list (_ desc-header)))
+    (addto! heading-list (G_ desc-header)))
     (if (sale-col column-vector)
-    (addto! heading-list (_ sale-header)))
+    (addto! heading-list (G_ sale-header)))
     (if (tax-col column-vector)
-    (addto! heading-list (_ tax-header)))
+    (addto! heading-list (G_ tax-header)))
     (if (credit-col column-vector)
-    (addto! heading-list (_ credit-header)))
+    (addto! heading-list (G_ credit-header)))
     (if (debit-col column-vector)
-    (addto! heading-list (_ debit-header)))
+    (addto! heading-list (G_ debit-header)))
     (if (value-col column-vector)
-    (addto! heading-list (_ amount-header)))
+    (addto! heading-list (G_ amount-header)))
     (reverse heading-list)))
 
 
@@ -258,11 +258,11 @@
 
     (gnc:html-table-set-col-headers!
      table
-     (list (_ "Current")
-           (_ "0-30 days")
-       (_ "31-60 days")
-       (_ "61-90 days")
-       (_ "91+ days")))
+     (list (G_ "Current")
+           (G_ "0-30 days")
+       (G_ "31-60 days")
+       (G_ "61-90 days")
+       (G_ "91+ days")))
 
     (gnc:html-table-append-row!
      table
@@ -318,7 +318,7 @@
       (begin
     (set! printed? #t)
     (if (and (value-col column-vector) (not (gnc-numeric-zero-p total)))
-        (let ((row (make-row column-vector start-date #f "" (_ "Balance") ""
+        (let ((row (make-row column-vector start-date #f "" (G_ "Balance") ""
                  (gnc:make-gnc-monetary (xaccTransGetCurrency txn) total) "" "" "" ""))
           (row-style (if odd-row? "normal-row" "alternate-row")))
           (gnc:html-table-append-row/markup! table row-style (reverse row))
@@ -352,12 +352,12 @@
          (gnc:html-markup-anchor
           (gnc:invoice-anchor-text invoice)
           (gncInvoiceGetTypeString invoice)))
-        (_ "Unknown")))
+        (G_ "Unknown")))
        ((equal? type TXN-TYPE-PAYMENT)
         (gnc:make-html-text
 	 (gnc:html-markup-anchor
-	  (gnc:split-anchor-text split) (_ "Payment"))))
-       (else (_ "Unknown"))))
+	  (gnc:split-anchor-text split) (G_ "Payment"))))
+       (else (G_ "Unknown"))))
      )
 
    (if reverse?
@@ -462,7 +462,7 @@
      "grand-total"
      (append (cons (gnc:make-html-table-cell/markup
             "total-label-cell"
-            (_ "Period Totals"))
+            (G_ "Period Totals"))
            '())
 
      (let ((row-contents '())
@@ -504,8 +504,8 @@
      (append (cons (gnc:make-html-table-cell/markup
             "total-label-cell"
             (if (gnc-numeric-negative-p total)
-            (_ "Total Credit")
-            (_ "Total Due")))
+            (G_ "Total Credit")
+            (G_ "Total Due")))
            '())
          (list (gnc:make-html-table-cell/size/markup
             1 (value-col used-columns)
@@ -739,7 +739,7 @@
      (owner-descr (owner-string type))
      (date-type (opt-val gnc:pagename-general optname-date-driver))
      (owner (opt-val owner-page owner-descr))
-     (report-title (string-append (doctype-str type) " " (_ "Report"))))
+     (report-title (string-append (doctype-str type) " " (G_ "Report"))))
     (if (not (gncOwnerIsValid owner))
      (gnc:html-document-add-object!
       document
@@ -764,7 +764,7 @@
          document (gnc:html-markup
                    "span"
                    (doctype-str type)
-                   " " (_ "Report:") " "
+                   " " (G_ "Report:") " "
                    (gnc:html-markup-anchor
                     (gnc:owner-anchor-text owner)
                     (gncOwnerGetName owner))))
@@ -791,7 +791,7 @@
          document
          (gnc:make-html-text
           (string-append
-           (_ "Date Range")
+           (G_ "Date Range")
            ": "
            (qof-print-date start-date)
            " - "
--- gnucash-3.8b/gnucash/report/business-reports/job-report.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/business-reports/job-report.scm	2020-01-16 23:34:20.752887619 +0000
@@ -87,17 +87,17 @@
 (define (make-heading-list column-vector)
   (let ((heading-list '()))
     (if (date-col column-vector)
-        (addto! heading-list (_ date-header)))
+        (addto! heading-list (G_ date-header)))
     (if (date-due-col column-vector)
-        (addto! heading-list (_ due-date-header)))
+        (addto! heading-list (G_ due-date-header)))
     (if (num-col column-vector)
-        (addto! heading-list (_ reference-header)))
+        (addto! heading-list (G_ reference-header)))
     (if (type-col column-vector)
-	(addto! heading-list (_ type-header)))
+	(addto! heading-list (G_ type-header)))
     (if (memo-col column-vector)
-	(addto! heading-list (_ desc-header)))
+	(addto! heading-list (G_ desc-header)))
     (if (value-col column-vector)
-	(addto! heading-list (_ amount-header)))
+	(addto! heading-list (G_ amount-header)))
     (reverse heading-list)))
 
 
@@ -158,10 +158,10 @@
 
     (gnc:html-table-set-col-headers!
      table
-     (list (_ "0-30 days")
-	   (_ "31-60 days")
-	   (_ "61-90 days")
-	   (_ "91+ days")))
+     (list (G_ "0-30 days")
+	   (G_ "31-60 days")
+	   (G_ "61-90 days")
+	   (G_ "91+ days")))
 
     (gnc:html-table-append-row!
      table
@@ -205,7 +205,7 @@
       (begin
 	(set! printed? #t)
 	(if (not (gnc-numeric-zero-p total))
-	    (let ((row (make-row column-vector start-date #f "" (_ "Balance") ""
+	    (let ((row (make-row column-vector start-date #f "" (G_ "Balance") ""
 				 (gnc:make-gnc-monetary (xaccTransGetCurrency txn) total)))
 		  (row-style (if odd-row? "normal-row" "alternate-row")))
 	      (gnc:html-table-append-row/markup! table row-style (reverse row))
@@ -238,8 +238,8 @@
 		  (gnc:invoice-anchor-text invoice)
 		  inv-str))
 		inv-str))
-	   ((equal? type TXN-TYPE-PAYMENT) (_ "Payment, thank you!"))
-	   (else (_ "Unknown"))))
+	   ((equal? type TXN-TYPE-PAYMENT) (G_ "Payment, thank you!"))
+	   (else (G_ "Unknown"))))
 	 )
 
     (if reverse?
@@ -317,8 +317,8 @@
      (append (cons (gnc:make-html-table-cell/markup
 		    "total-label-cell"
 		    (if (gnc-numeric-negative-p total)
-			(_ "Total Credit")
-			(_ "Total Due")))
+			(G_ "Total Credit")
+			(G_ "Total Due")))
 		   '())
 	     (list (gnc:make-html-table-cell/size/markup
 		    1 (value-col used-columns)
@@ -402,19 +402,19 @@
 	     
 (define (job-options-generator)
   (options-generator (list ACCT-TYPE-RECEIVABLE) GNC-OWNER-JOB
-                     (_ "Invoice") #f))
+                     (G_ "Invoice") #f))
 
 (define (customer-options-generator)
   (options-generator (list ACCT-TYPE-RECEIVABLE) GNC-OWNER-CUSTOMER
-                     (_ "Invoice") #f))
+                     (G_ "Invoice") #f))
 
 (define (vendor-options-generator)
   (options-generator (list ACCT-TYPE-PAYABLE) GNC-OWNER-VENDOR
-                     (_ "Bill") #t))
+                     (G_ "Bill") #t))
 
 (define (employee-options-generator)
   (options-generator (list ACCT-TYPE-PAYABLE) GNC-OWNER-EMPLOYEE
-                     (_ "Expense Report") #t))
+                     (G_ "Expense Report") #t))
 
 (define (setup-query q owner account end-date)
   (let* ((guid (gncOwnerReturnGUID owner)))
@@ -530,16 +530,16 @@
     (cond
       ((eqv? type GNC-OWNER-CUSTOMER)
        (set! type-str (N_ "Customer"))
-       (set! report-title-str (_ "Customer Report")))
+       (set! report-title-str (G_ "Customer Report")))
       ((eqv? type GNC-OWNER-JOB)
        (set! type-str (N_ "Job"))
-       (set! report-title-str (_ "Job Report")))
+       (set! report-title-str (G_ "Job Report")))
       ((eqv? type GNC-OWNER-VENDOR)
        (set! type-str (N_ "Vendor"))
-       (set! report-title-str (_ "Vendor Report")))
+       (set! report-title-str (G_ "Vendor Report")))
       ((eqv? type GNC-OWNER-EMPLOYEE)
        (set! type-str (N_ "Employee"))
-       (set! report-title-str (_ "Employee Report"))))
+       (set! report-title-str (G_ "Employee Report"))))
 
     (gnc:html-document-set-title! document report-title-str)
 
@@ -572,7 +572,7 @@
 	      (set!
 	       table
 	       (gnc:make-html-text
-		(_ "No valid account selected. Click on the Options button and select the account to use."))))
+		(G_ "No valid account selected. Click on the Options button and select the account to use."))))
 
 	  (gnc:html-document-add-object!
 	   document
@@ -588,7 +588,7 @@
 	   document
 	   (gnc:make-html-text
 	    (string-append
-	     (_ "Date Range")
+	     (G_ "Date Range")
 	     ": "
 	     (qof-print-date start-date)
 	     " - "
@@ -605,16 +605,16 @@
           (string-append
            (cond
             ((eqv? type GNC-OWNER-CUSTOMER)
-             (_ "No valid customer selected."))
+             (G_ "No valid customer selected."))
             ((eqv? type GNC-OWNER-JOB)
-             (_ "No valid job selected."))
+             (G_ "No valid job selected."))
             ((eqv? type GNC-OWNER-VENDOR)
-             (_ "No valid vendor selected."))
+             (G_ "No valid vendor selected."))
             ((eqv? type GNC-OWNER-EMPLOYEE)
-             (_ "No valid employee selected."))
+             (G_ "No valid employee selected."))
             (else ""))
            " "
-           (_ "Click on the \"Options\" button to select a company.")))))
+           (G_ "Click on the \"Options\" button to select a company.")))))
 
     (qof-query-destroy query)
     document))
--- gnucash-3.8b/gnucash/report/business-reports/new-owner-report.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/business-reports/new-owner-report.scm	2020-01-16 23:33:59.409888638 +0000
@@ -65,23 +65,23 @@
   (list
    (list GNC-OWNER-CUSTOMER
          (N_ "Customer")
-         (_ "No valid customer selected.")
-         (_ "This report requires a customer to be selected."))
+         (G_ "No valid customer selected.")
+         (G_ "This report requires a customer to be selected."))
 
    (list GNC-OWNER-EMPLOYEE
          (N_ "Employee")
-         (_ "No valid employee selected.")
-         (_ "This report requires a employee to be selected."))
+         (G_ "No valid employee selected.")
+         (G_ "This report requires a employee to be selected."))
 
    (list GNC-OWNER-JOB
          (N_ "Job")
-         (_ "No valid job selected.")
-         (_ "This report requires a job to be selected."))
+         (G_ "No valid job selected.")
+         (G_ "This report requires a job to be selected."))
 
    (list GNC-OWNER-VENDOR
          (N_ "Vendor")
-         (_ "No valid vendor selected.")
-         (_ "This report requires a vendor to be selected."))))
+         (G_ "No valid vendor selected.")
+         (G_ "This report requires a vendor to be selected."))))
 
 (define (get-info key)
   (assv-ref owner-string-alist key))
@@ -173,39 +173,39 @@
 (define (make-heading-list column-vector link-option)
   (let ((heading-list '()))
     (if (date-col column-vector)
-        (addto! heading-list (_ date-header)))
+        (addto! heading-list (G_ date-header)))
     (if (date-due-col column-vector)
-        (addto! heading-list (_ due-date-header)))
+        (addto! heading-list (G_ due-date-header)))
     (if (ref-col column-vector)
-        (addto! heading-list (_ reference-header)))
+        (addto! heading-list (G_ reference-header)))
     (if (type-col column-vector)
-        (addto! heading-list (_ type-header)))
+        (addto! heading-list (G_ type-header)))
     (if (desc-col column-vector)
-        (addto! heading-list (_ desc-header)))
+        (addto! heading-list (G_ desc-header)))
     (if (sale-col column-vector)
-        (addto! heading-list (_ sale-header)))
+        (addto! heading-list (G_ sale-header)))
     (if (tax-col column-vector)
-        (addto! heading-list (_ tax-header)))
+        (addto! heading-list (G_ tax-header)))
     (if (credit-col column-vector)
-        (addto! heading-list (_ credit-header)))
+        (addto! heading-list (G_ credit-header)))
     (if (debit-col column-vector)
-        (addto! heading-list (_ debit-header)))
+        (addto! heading-list (G_ debit-header)))
     (if (bal-col column-vector)
-        (addto! heading-list (_ amount-header)))
+        (addto! heading-list (G_ amount-header)))
     (case link-option
       ((simple)
-       (addto! heading-list (_ linked-txns-header)))
+       (addto! heading-list (G_ linked-txns-header)))
       ((detailed)
        (if (or (date-col column-vector) (type-col column-vector)
                (ref-col column-vector) (credit-col column-vector)
                (desc-col column-vector) (debit-col column-vector))
            (addto! heading-list #f))
-       (if (date-col column-vector) (addto! heading-list (_ "Date")))
-       (if (ref-col column-vector) (addto! heading-list (_ "Reference")))
-       (if (type-col column-vector) (addto! heading-list (_ "Type")))
-       (if (desc-col column-vector) (addto! heading-list (_ "Description")))
+       (if (date-col column-vector) (addto! heading-list (G_ "Date")))
+       (if (ref-col column-vector) (addto! heading-list (G_ "Reference")))
+       (if (type-col column-vector) (addto! heading-list (G_ "Type")))
+       (if (desc-col column-vector) (addto! heading-list (G_ "Description")))
        (if (or (debit-col column-vector) (credit-col column-vector))
-           (addto! heading-list (_ "Amount")))))
+           (addto! heading-list (G_ "Amount")))))
     (reverse heading-list)))
 
 (define num-buckets 6)
@@ -255,8 +255,8 @@
          (invoice (gncInvoiceGetInvoiceFromTxn txn)))
     (cond
      ((txn-is-invoice? txn) (gncInvoiceGetTypeString invoice))
-     ((txn-is-payment? txn) (_ "Payment"))
-     (else (_ "Unknown")))))
+     ((txn-is-payment? txn) (G_ "Payment"))
+     (else (G_ "Unknown")))))
 
 ;; for splits, find the first peer that is not in an APAR
 ;; account. this is adequate to find the transfer split (ie
@@ -276,13 +276,13 @@
                      splits num-buckets to-date date-type (not payable?))))
 
     (gnc:html-table-set-col-headers!
-     table (list (_ "Pre-payment")
-                 (_ "Current")
-                 (_ "0-30 days")
-                 (_ "31-60 days")
-                 (_ "61-90 days")
-                 (_ "91+ days")
-                 (_ "Total")))
+     table (list (G_ "Pre-payment")
+                 (G_ "Current")
+                 (G_ "0-30 days")
+                 (G_ "31-60 days")
+                 (G_ "61-90 days")
+                 (G_ "91+ days")
+                 (G_ "Total")))
 
     (gnc:html-table-append-row!
      table (map (lambda (entry) (gnc:make-gnc-monetary currency entry))
@@ -408,7 +408,7 @@
          table "grand-total"
          (append
           (list (gnc:make-html-table-cell/markup
-                 "total-label-cell" (_ "Period Totals")))
+                 "total-label-cell" (G_ "Period Totals")))
           (addif (>= span 2) (gnc:make-html-table-cell/size 1 (1- span) ""))
           (addif (sale-col used-columns)   (make-cell sale))
           (addif (tax-col used-columns)    (make-cell tax))
@@ -425,8 +425,8 @@
           (list (gnc:make-html-table-cell/markup
                  "total-label-cell"
                  (if (negative? total)
-                     (_ "Total Credit")
-                     (_ "Total Due")))
+                     (G_ "Total Credit")
+                     (G_ "Total Due")))
                 (gnc:make-html-table-cell/size/markup
                  1 (bal-col used-columns)
                  "total-number-cell"
@@ -444,7 +444,7 @@
                               payable? date-type currency)))))
 
   (define (add-balance-row odd-row? total)
-    (add-row table odd-row? used-columns start-date #f "" (_ "Balance") ""
+    (add-row table odd-row? used-columns start-date #f "" (G_ "Balance") ""
              currency total #f #f #f #f (list (make-list link-cols #f))
              link-option (case link-option
                            ((none) '(()))
@@ -492,7 +492,7 @@
            (if (gncInvoiceIsPaid invoice)
                result
                (cons (make-link-desc-amount
-                      (_ "UNPAID")
+                      (G_ "UNPAID")
                       (gnc:make-gnc-monetary
                        currency (AP-negate (gnc-lot-get-balance lot))))
                      result))))
@@ -594,7 +594,7 @@
             (if (zero? overpayment)
                 result
                 (cons (make-link-desc-amount
-                       (_ "Pre-Payment")
+                       (G_ "Pre-Payment")
                        (gnc:make-gnc-monetary currency overpayment))
                       result)))))
         ((inv . rest)
@@ -707,7 +707,7 @@
            (cond
             ((and (txn-is-invoice? txn) (eq? link-option 'simple))
              (if (gncInvoiceIsPaid invoice)
-                 (list (list (_ "Paid")))
+                 (list (list (G_ "Paid")))
                  (list (list #f))))
             ((and (txn-is-invoice? txn) (eq? link-option 'detailed))
              (make-invoice->payments-table invoice))
@@ -915,7 +915,7 @@
          (document (gnc:make-html-document))
          (table (gnc:make-html-table))
          (headings (make-heading-list used-columns link-option))
-         (report-title (string-append (_ owner-descr) " " (_ "Report"))))
+         (report-title (string-append (G_ owner-descr) " " (G_ "Report"))))
 
     (cond
      ((not (gncOwnerIsValid owner))
@@ -930,8 +930,8 @@
        (gnc:html-make-generic-warning
         (string-append report-title ": " (gncOwnerGetName owner))
         (gnc:report-id report-obj)
-        (_ "No valid account found")
-        (_ "This report requires a valid AP/AR account to be available."))))
+        (G_ "No valid account found")
+        (G_ "This report requires a valid AP/AR account to be available."))))
 
      (else
       (setup-query query owner accounts end-date (eqv? GNC-OWNER-JOB type))
@@ -954,9 +954,9 @@
           (gnc:html-document-add-object!
            document
            (gnc:make-html-text
-            (gnc:html-markup-h2 (_ "No transactions found."))
+            (gnc:html-markup-h2 (G_ "No transactions found."))
             (gnc:html-markup-p
-             (format #f (_ "No transactions were found associated with the ~a.")
+             (format #f (G_ "No transactions were found associated with the ~a.")
                      (string-downcase (car (get-info type)))))
             (gnc:html-make-options-link (gnc:report-id report-obj)))))
 
@@ -984,7 +984,7 @@
                              1 (length headings)
                              (gnc:make-html-text
                               (gnc:html-markup-h3
-                               (string-append (_ "Account") ": "
+                               (string-append (G_ "Account") ": "
                                               (xaccAccountGetName account)))))))
 
                    (add-owner-table table splits account start-date end-date
@@ -1017,7 +1017,7 @@
 
           (gnc:html-document-add-object!
            document (gnc:make-html-text
-                     (string-append (_ "Date Range") ": " (qof-print-date start-date)
+                     (string-append (G_ "Date Range") ": " (qof-print-date start-date)
                                     " - " (qof-print-date end-date))))
 
           (make-break! document)
--- gnucash-3.8b/gnucash/report/standard-reports/trial-balance.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/trial-balance.scm	2020-01-16 23:40:34.259869798 +0000
@@ -183,7 +183,7 @@
     (add-option
      (gnc:make-string-option
       (N_ "General") optname-report-title
-      "a" opthelp-report-title (_ reportname)))
+      "a" opthelp-report-title (G_ reportname)))
     (add-option
      (gnc:make-string-option
       (N_ "General") optname-party-name
@@ -276,7 +276,7 @@
     (add-option
      (gnc:make-string-option
       pagename-entries optname-adjusting-pattern
-      "a" opthelp-adjusting-pattern (_ "Adjusting Entries")))
+      "a" opthelp-adjusting-pattern (G_ "Adjusting Entries")))
     (add-option
      (gnc:make-simple-boolean-option
       pagename-entries optname-adjusting-casing
@@ -288,7 +288,7 @@
     (add-option
      (gnc:make-string-option
       pagename-entries optname-closing-pattern
-      "d" opthelp-closing-pattern (_ "Closing Entries")))
+      "d" opthelp-closing-pattern (G_ "Closing Entries")))
     (add-option
      (gnc:make-simple-boolean-option
       pagename-entries optname-closing-casing
@@ -401,7 +401,7 @@
          ;; exchange rates calculation parameters
          (exchange-fn
           (gnc:case-exchange-fn price-source report-commodity end-date))
-         (period-for (string-append " " (_ "for Period"))))
+         (period-for (string-append " " (G_ "for Period"))))
 
     (gnc:html-document-set-title!
      doc (if (eq? report-variant 'current)
@@ -409,7 +409,7 @@
                      company-name report-title
                      (qof-print-date end-date))
              (format #f (string-append "~a ~a "
-                                       (_ "For Period Covering ~a to ~a"))
+                                       (G_ "For Period Covering ~a to ~a"))
                      company-name report-title
                      (qof-print-date start-date-printable)
                      (qof-print-date end-date))))
@@ -566,11 +566,11 @@
           (if (eq? report-variant 'work-sheet)
               (let* ((headings
                       (list
-                       (_ "Trial Balance")
-                       (_ "Adjustments")
-                       (_ "Adjusted Trial Balance")
-                       (_ "Income Statement")
-                       (_ "Balance Sheet")))
+                       (G_ "Trial Balance")
+                       (G_ "Adjustments")
+                       (G_ "Adjusted Trial Balance")
+                       (G_ "Income Statement")
+                       (G_ "Balance Sheet")))
                      (parent-headings #f))
                 (set! parent-headings
                   (apply append
@@ -589,13 +589,13 @@
           ;; add the DEBIT/CREDIT headers
           (let* ((debit-cell
                   (gnc:make-html-table-cell/markup
-                   "th" (_ "Debit")))
+                   "th" (G_ "Debit")))
                  (credit-cell
                   (gnc:make-html-table-cell/markup
-                   "th" (_ "Credit")))
+                   "th" (G_ "Credit")))
                  (row (append
                        (list (gnc:make-html-table-cell/markup
-                              "th" (_ "Account Name")))
+                              "th" (G_ "Account Name")))
                        (gnc:html-make-empty-cells (- account-cols 1))
                        (list debit-cell)
                        (list credit-cell)))
@@ -731,8 +731,8 @@
                               report-commodity exchange-fn show-fcur?)))
                  (add-line build-table
                            (if credit?
-                               (_ "Unrealized Gains")
-                               (_ "Unrealized Losses"))
+                               (G_ "Unrealized Gains")
+                               (G_ "Unrealized Losses"))
                            neg-unrealized-gain-collector)
                  (when (eq? report-variant 'work-sheet)
                    ;; make table line wide enough
@@ -857,7 +857,7 @@
                               exchange-fn show-fcur?))
                 (gnc:html-table-add-labeled-amount-line!
                  build-table tbl-width "primary-subheading" #f
-                 (if is-credit? (_ "Net Income") (_ "Net Loss"))
+                 (if is-credit? (G_ "Net Income") (G_ "Net Loss"))
                  0 1 "total-label-cell" is-entry
                  (+ account-cols (* 2 is-col) (if is-credit? 0 1))
                  1 "total-number-cell")
--- gnucash-3.8b/gnucash/report/standard-reports/portfolio.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/portfolio.scm	2020-01-16 23:41:31.366867073 +0000
@@ -250,12 +250,12 @@
 
           (gnc:html-table-set-col-headers!
            table
-           (list (_ "Account")
-                 (_ "Symbol")
-                 (_ "Listing")
-                 (_ "Units")
-                 (_ "Price")
-                 (_ "Value")))
+           (list (G_ "Account")
+                 (G_ "Symbol")
+                 (G_ "Listing")
+                 (G_ "Units")
+                 (G_ "Price")
+                 (G_ "Value")))
 
           (table-add-stock-rows
            table accounts to-date currency
@@ -275,7 +275,7 @@
               table
               "grand-total"
               (list (gnc:make-html-table-cell/markup
-                     "total-label-cell" (_ "Total"))
+                     "total-label-cell" (G_ "Total"))
                     (gnc:make-html-table-cell/size/markup
                      1 5 "total-number-cell"
                      (gnc:make-gnc-monetary currency amount)))))
--- gnucash-3.8b/gnucash/report/standard-reports/category-barchart.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/category-barchart.scm	2020-01-16 23:43:00.476862822 +0000
@@ -307,9 +307,9 @@
                ;; accordingly.
                (report-title
                 (case averaging-selection
-                  ((MonthDelta) (string-append report-title " " (_ "Monthly Average")))
-                  ((WeekDelta) (string-append report-title " " (_ "Weekly Average")))
-                  ((DayDelta) (string-append report-title " " (_ "Daily Average")))
+                  ((MonthDelta) (string-append report-title " " (G_ "Monthly Average")))
+                  ((WeekDelta) (string-append report-title " " (G_ "Weekly Average")))
+                  ((DayDelta) (string-append report-title " " (G_ "Daily Average")))
                   (else report-title)))
                (currency-frac (gnc-commodity-get-fraction report-currency))
                ;; This is the list of date intervals to calculate.
@@ -527,8 +527,8 @@
                     (gnc:html-barchart-set-subtitle!
                      chart (format #f
                                    (if do-intervals?
-                                       (_ "~a to ~a")
-                                       (_ "Balances ~a to ~a"))
+                                       (G_ "~a to ~a")
+                                       (G_ "Balances ~a to ~a"))
                                    (qof-print-date from-date-t64)
                                    (qof-print-date to-date-t64)))
 
@@ -553,8 +553,8 @@
                     (gnc:html-linechart-set-subtitle!
                      chart (format #f
                                    (if do-intervals?
-                                       (_ "~a to ~a")
-                                       (_ "Balances ~a to ~a"))
+                                       (G_ "~a to ~a")
+                                       (G_ "Balances ~a to ~a"))
                                    (qof-print-date from-date-t64)
                                    (qof-print-date to-date-t64)))
 
@@ -587,7 +587,7 @@
                                     (apply zip (map cadr finish)))))
                    (set! all-data
                      (append start
-                             (list (list (_ "Other") other-sum))))
+                             (list (list (G_ "Other") other-sum))))
                    (let* ((options (gnc:make-report-options reportguid))
                           (id #f))
                      ;; now copy all the options
@@ -726,7 +726,7 @@
                    (gnc:html-table-set-col-headers!
                     table
                     (append
-                     (list (_ "Date"))
+                     (list (G_ "Date"))
                      (map (lambda (pair)
                             (if (string? (car pair))
                                 (car pair)
@@ -735,7 +735,7 @@
                                      xaccAccountGetName) (car pair))))
                           all-data)
                      (if (> (gnc:html-table-num-columns table) 2)
-                         (list (_ "Grand Total"))
+                         (list (G_ "Grand Total"))
                          '())))
 
                    (if (> (gnc:html-table-num-columns table) 2)
--- gnucash-3.8b/gnucash/report/standard-reports/equity-statement.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/equity-statement.scm	2020-01-16 23:42:38.438863873 +0000
@@ -106,7 +106,7 @@
     (add-option
       (gnc:make-string-option
       (N_ "General") optname-report-title
-      "a" opthelp-report-title (_ reportname)))
+      "a" opthelp-report-title (G_ reportname)))
     (add-option
       (gnc:make-string-option
       (N_ "General") optname-party-name
@@ -166,7 +166,7 @@
     (add-option
       (gnc:make-string-option
       pagename-entries optname-closing-pattern
-      "a" opthelp-closing-pattern (_ "Closing Entries")))
+      "a" opthelp-closing-pattern (G_ "Closing Entries")))
     (add-option
      (gnc:make-simple-boolean-option
       pagename-entries optname-closing-casing
@@ -299,7 +299,7 @@
     (gnc:html-document-set-title! 
      doc (format #f
 		  (string-append "~a ~a "
-				 (_ "For Period Covering ~a to ~a"))
+				 (G_ "For Period Covering ~a to ~a"))
 		  company-name report-title
                   (qof-print-date start-date-printable)
                   (qof-print-date end-date)))
@@ -420,7 +420,7 @@
 	       ;; Create the account table below where its
 	       ;; percentage time can be tracked.
 	       (build-table (gnc:make-html-table)) ;; gnc:html-table
-	       (period-for (string-append " " (_ "for Period"))))
+	       (period-for (string-append " " (G_ "for Period"))))
 
 	  ;; a helper to add a line to our report
 	  (define (add-report-line
@@ -447,43 +447,43 @@
 
           (add-report-line
            build-table
-           (string-append (_ "Capital") ", " (qof-print-date start-date-printable))
+           (string-append (G_ "Capital") ", " (qof-print-date start-date-printable))
            #f start-total-equity 1 start-exchange-fn #f "primary-subheading")
 
           (add-report-line
            build-table
-           (string-append (_ "Net income") period-for)
-           (string-append (_ "Net loss") period-for)
+           (string-append (G_ "Net income") period-for)
+           (string-append (G_ "Net loss") period-for)
            net-income 0 end-exchange-fn #f #f)
 
           (add-report-line
            build-table
-           (string-append (_ "Investments") period-for) #f
+           (string-append (G_ "Investments") period-for) #f
            investments 0 end-exchange-fn #f #f)
 
           (add-report-line
            build-table
-           (string-append (_ "Withdrawals") period-for)
+           (string-append (G_ "Withdrawals") period-for)
            #f withdrawals 0 end-exchange-fn #f #f)
 
           (unless (gnc-commodity-collector-allzero? net-unrealized-gains)
             (add-report-line
              build-table
-             (_ "Unrealized Gains")
-             (_ "Unrealized Losses")
+             (G_ "Unrealized Gains")
+             (G_ "Unrealized Losses")
              net-unrealized-gains
              0 end-exchange-fn #f #f))
 
           (add-report-line
            build-table
-           (_ "Increase in capital")
-           (_ "Decrease in capital")
+           (G_ "Increase in capital")
+           (G_ "Decrease in capital")
            capital-increase
            1 end-exchange-fn use-rules? #f)
 
           (add-report-line
            build-table
-           (string-append (_ "Capital") ", " (qof-print-date end-date)) #f
+           (string-append (G_ "Capital") ", " (qof-print-date end-date)) #f
            end-total-equity
            1 end-exchange-fn #f "primary-subheading")
 
--- gnucash-3.8b/gnucash/report/standard-reports/price-scatter.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/price-scatter.scm	2020-01-16 23:41:15.930867810 +0000
@@ -199,7 +199,7 @@
 		(gnc-commodity-get-mnemonic price-commodity))
             " - "
             (format #f
-                     (_ "~a to ~a")
+                     (G_ "~a to ~a")
                      (qof-print-date from-date)
                      (qof-print-date to-date))))
     (gnc:html-scatter-set-width! chart width)
@@ -225,11 +225,11 @@
 	 (gnc-commodity-get-mnemonic report-currency)))
     (gnc:html-scatter-set-x-axis-label!
      chart (case interval
-             ((DayDelta) (_ "Days"))
-             ((WeekDelta) (_ "Weeks"))
-             ((TwoWeekDelta) (_ "Double-Weeks"))
-             ((MonthDelta) (_ "Months"))
-             ((YearDelta) (_ "Years"))))
+             ((DayDelta) (G_ "Days"))
+             ((WeekDelta) (G_ "Weeks"))
+             ((TwoWeekDelta) (G_ "Double-Weeks"))
+             ((MonthDelta) (G_ "Months"))
+             ((YearDelta) (G_ "Years"))))
 
     (if 
      (not (gnc-commodity-equiv report-currency price-commodity))
@@ -308,33 +308,33 @@
            (if (> (length data) 1)
                (if (apply equal? (map second data))
                    (make-warning 
-                    (_ "All Prices equal")
-                    (_ "All the prices found are equal. \
+                    (G_ "All Prices equal")
+                    (G_ "All the prices found are equal. \
 This would result in a plot with one straight line. \
 Unfortunately, the plotting tool can't handle that."))
                    (if (apply equal? (map first data))
                        (make-warning
-                        (_ "All Prices at the same date")
-                        (_ "All the prices found are from the same date. \
+                        (G_ "All Prices at the same date")
+                        (G_ "All the prices found are from the same date. \
 This would result in a plot with one straight line. \
 Unfortunately, the plotting tool can't handle that."))
 
                        (gnc:html-document-add-object! document chart)))
 
                (make-warning
-                (_ "Only one price")
-                (_ "There was only one single price found for the \
+                (G_ "Only one price")
+                (G_ "There was only one single price found for the \
 selected commodities in the selected time period. This doesn't give \
 a useful plot.")))
            (make-warning
-            (_ "No data")
-            (_ "There is no price information available for the \
+            (G_ "No data")
+            (G_ "There is no price information available for the \
 selected commodities in the selected time period."))))
 
      ;; warning if report-currency == price-commodity
      (make-warning 
-      (_ "Identical commodities")
-      (_ "Your selected commodity and the currency of the report \
+      (G_ "Identical commodities")
+      (G_ "Your selected commodity and the currency of the report \
 are identical. It doesn't make sense to show prices for identical \
 commodities.")))
     
--- gnucash-3.8b/gnucash/report/standard-reports/balance-sheet.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/balance-sheet.scm	2020-01-16 23:44:34.003858359 +0000
@@ -154,7 +154,7 @@
     (add-option
       (gnc:make-string-option
       gnc:pagename-general optname-report-title
-      "a" opthelp-report-title (_ reportname)))
+      "a" opthelp-report-title (G_ reportname)))
     (add-option
       (gnc:make-string-option
       gnc:pagename-general optname-party-name
@@ -383,11 +383,11 @@
       (let* ((liability-table
               (gnc:make-html-acct-table/env/accts table-env liability-accounts)))
         (when label-liabilities?
-          (add-subtotal-line  parent-table (_ "Liabilities") #f #f))
+          (add-subtotal-line  parent-table (G_ "Liabilities") #f #f))
         (gnc:html-table-add-account-balances parent-table liability-table params)
         (when total-liabilities?
           (add-subtotal-line
-           parent-table (_ "Total Liabilities") #f liability-balance))
+           parent-table (G_ "Total Liabilities") #f liability-balance))
         (add-rule parent-table)))
 
     (define (get-total-value-fn account)
@@ -480,10 +480,10 @@
           (gnc:report-percent-done 80)
 
           (when label-assets?
-            (add-subtotal-line left-table (_ "Assets") #f #f))
+            (add-subtotal-line left-table (G_ "Assets") #f #f))
           (gnc:html-table-add-account-balances left-table asset-table params)
           (when total-assets?
-            (add-subtotal-line left-table (_ "Total Assets") #f asset-balance))
+            (add-subtotal-line left-table (G_ "Total Assets") #f asset-balance))
 
           (when report-form?
             (add-rule left-table)
@@ -497,29 +497,29 @@
           (gnc:report-percent-done 88)
 
           (when label-equity?
-            (add-subtotal-line right-table (_ "Equity") #f #f))
+            (add-subtotal-line right-table (G_ "Equity") #f #f))
           (gnc:html-table-add-account-balances right-table equity-table params)
           ;; we omit retained earnings & unrealized gains
           ;; from the balance report, if zero, since they
           ;; are not present on normal balance sheets
           (unless (gnc-commodity-collector-allzero? retained-earnings)
             (add-subtotal-line right-table
-                               (_ "Retained Earnings")
-                               (_ "Retained Losses")
+                               (G_ "Retained Earnings")
+                               (G_ "Retained Losses")
                                retained-earnings))
           (unless (gnc-commodity-collector-allzero? trading-balance)
             (add-subtotal-line right-table
-                               (_ "Trading Gains")
-                               (_ "Trading Losses")
+                               (G_ "Trading Gains")
+                               (G_ "Trading Losses")
                                trading-balance))
           (unless (gnc-commodity-collector-allzero? unrealized-gain-collector)
             (add-subtotal-line right-table
-                               (_ "Unrealized Gains")
-                               (_ "Unrealized Losses")
+                               (G_ "Unrealized Gains")
+                               (G_ "Unrealized Losses")
                                unrealized-gain-collector))
           (when total-equity?
             (add-subtotal-line
-             right-table (_ "Total Equity") #f total-equity-balance))
+             right-table (G_ "Total Equity") #f total-equity-balance))
 
           (add-rule right-table)
 
@@ -529,7 +529,7 @@
                                  total-liabilities? liability-balance))
 
           (add-subtotal-line
-           right-table (gnc:html-string-sanitize (_ "Total Liabilities & Equity"))
+           right-table (gnc:html-string-sanitize (G_ "Total Liabilities & Equity"))
            #f liability-plus-equity)
 
           (gnc:html-document-add-object!
--- gnucash-3.8b/gnucash/report/standard-reports/budget-barchart.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/budget-barchart.scm	2020-01-16 23:43:59.872859988 +0000
@@ -141,7 +141,7 @@
         (gnc:html-barchart-set-height! chart height)
         (gnc:html-barchart-set-row-labels-rotated?! chart #t)
         (gnc:html-barchart-set-col-labels!
-          chart (list (_ "Budget") (_ "Actual")))
+          chart (list (G_ "Budget") (G_ "Actual")))
         (gnc:html-barchart-set-col-colors!
           chart '("#0074D9" "#FF4136"))
       )
@@ -154,7 +154,7 @@
         (gnc:html-linechart-set-height! chart height)
         (gnc:html-linechart-set-row-labels-rotated?! chart #t)
         (gnc:html-linechart-set-col-labels!
-          chart (list (_ "Budget") (_ "Actual")))
+          chart (list (G_ "Budget") (G_ "Actual")))
         (gnc:html-linechart-set-col-colors!
           chart '("#0074D9" "#FF4136"))
       )
--- gnucash-3.8b/gnucash/report/standard-reports/daily-reports.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/daily-reports.scm	2020-01-16 23:42:45.902863517 +0000
@@ -190,9 +190,9 @@
 	       ;; in src/engine/FreqSpeq.c. For now, we simply use
 	       ;; the normal translations, which show up in the glade
 	       ;; file src/gnome-utils/gtkbuilder/gnc-frequency.glade anyway.
-               (days-of-week (list (_"Sunday") (_"Monday") 
-				   (_"Tuesday") (_"Wednesday") 
-				   (_"Thursday") (_"Friday") (_"Saturday"))))
+               (days-of-week (list (G_"Sunday") (G_"Monday") 
+				   (G_"Tuesday") (G_"Wednesday") 
+				   (G_"Thursday") (G_"Friday") (G_"Saturday"))))
           
           (gnc:debug daily-totals)
           
@@ -288,7 +288,7 @@
                   (gnc:html-piechart-set-subtitle!
                    chart (string-append
                           (format #f
-                                   (_ "~a to ~a")
+                                   (G_ "~a to ~a")
                                    (qof-print-date from-date)
                                    (qof-print-date to-date))
                           (if show-total?
--- gnucash-3.8b/gnucash/report/standard-reports/account-piecharts.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/account-piecharts.scm	2020-01-16 23:45:04.432856907 +0000
@@ -447,9 +447,9 @@
            ;; accordingly.
            (report-title
             (case averaging-selection
-              ((YearDelta) (string-append report-title " " (_ "Yearly Average")))
-              ((MonthDelta) (string-append report-title " " (_ "Monthly Average")))
-              ((WeekDelta) (string-append report-title " " (_ "Weekly Average")))
+              ((YearDelta) (string-append report-title " " (G_ "Yearly Average")))
+              ((MonthDelta) (string-append report-title " " (G_ "Monthly Average")))
+              ((WeekDelta) (string-append report-title " " (G_ "Weekly Average")))
               (else report-title)))
            (combined '())
            (other-anchor "")
@@ -526,7 +526,7 @@
                        (sum (apply + (unzip1 finish))))
                   (set! combined
                         (append start
-                                (list (list sum (_ "Other")))))
+                                (list (list sum (G_ "Other")))))
                   (if depth-based?
                     (let ((options (gnc:make-report-options report-guid))
                           (id #f))
@@ -562,11 +562,11 @@
                 chart (string-append
                        (if do-intervals?
                            (format #f
-                                    (_ "~a to ~a")
+                                    (G_ "~a to ~a")
                                     (qof-print-date from-date)
                                     (qof-print-date to-date))
                            (format #f
-                                    (_ "Balance at ~a")
+                                    (G_ "Balance at ~a")
                                     (qof-print-date to-date)))
                        (if show-total?
                            (let ((total (apply + (unzip1 combined))))
--- gnucash-3.8b/gnucash/report/standard-reports/income-statement.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/income-statement.scm	2020-01-16 23:41:55.412865926 +0000
@@ -146,7 +146,7 @@
     (add-option
       (gnc:make-string-option
       gnc:pagename-general optname-report-title
-      "a" opthelp-report-title (_ reportname)))
+      "a" opthelp-report-title (G_ reportname)))
     (add-option
       (gnc:make-string-option
       gnc:pagename-general optname-party-name
@@ -265,7 +265,7 @@
     (add-option
       (gnc:make-string-option
       pagename-entries optname-closing-pattern
-      "a" opthelp-closing-pattern (_ "Closing Entries")))
+      "a" opthelp-closing-pattern (G_ "Closing Entries")))
     (add-option
      (gnc:make-simple-boolean-option
       pagename-entries optname-closing-casing
@@ -404,7 +404,7 @@
       (gnc:html-table-append-ruler! table (* 2 tree-depth)))
 
     (gnc:html-document-set-title!
-     doc (format #f (string-append "~a ~a " (_ "For Period Covering ~a to ~a"))
+     doc (format #f (string-append "~a ~a " (G_ "For Period Covering ~a to ~a"))
                   company-name report-title
                   (qof-print-date start-date-printable)
                   (qof-print-date end-date)))
@@ -478,7 +478,7 @@
                (trading-table
                 (gnc:make-html-acct-table/env/accts table-env trading-accounts))
 
-               (period-for (string-append " " (_ "for Period"))))
+               (period-for (string-append " " (G_ "for Period"))))
 
           ;; a helper to add a line to our report
           (define (add-report-line
@@ -502,28 +502,28 @@
           (gnc:report-percent-done 80)
 
           (when label-revenue?
-            (add-subtotal-line inc-table (_ "Revenues") #f #f))
+            (add-subtotal-line inc-table (G_ "Revenues") #f #f))
           (gnc:html-table-add-account-balances inc-table revenue-table params)
           (when total-revenue?
-            (add-subtotal-line inc-table (_ "Total Revenue") #f revenue-total))
+            (add-subtotal-line inc-table (G_ "Total Revenue") #f revenue-total))
           (gnc:report-percent-done 85)
 
           (when label-expense?
-            (add-subtotal-line exp-table (_ "Expenses") #f #f))
+            (add-subtotal-line exp-table (G_ "Expenses") #f #f))
           (gnc:html-table-add-account-balances exp-table expense-table params)
           (when total-expense?
-            (add-subtotal-line exp-table (_ "Total Expenses") #f expense-total))
+            (add-subtotal-line exp-table (G_ "Total Expenses") #f expense-total))
 
           (when label-trading?
-            (add-subtotal-line tra-table (_ "Trading") #f #f))
+            (add-subtotal-line tra-table (G_ "Trading") #f #f))
           (gnc:html-table-add-account-balances tra-table trading-table params)
           (when total-trading?
-            (add-subtotal-line tra-table (_ "Total Trading") #f trading-total))
+            (add-subtotal-line tra-table (G_ "Total Trading") #f trading-total))
 
           (add-report-line
            (if standard-order? exp-table inc-table)
-           (string-append (_ "Net income") period-for)
-           (string-append (_ "Net loss") period-for)
+           (string-append (G_ "Net income") period-for)
+           (string-append (G_ "Net loss") period-for)
            net-income (* 2 (1- tree-depth)) exchange-fn #f #f)
 
           ;; add the sections in the desired order to document
--- gnucash-3.8b/gnucash/report/standard-reports/reconcile-report.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/reconcile-report.scm	2020-01-16 23:41:04.050868377 +0000
@@ -55,7 +55,7 @@
 
 (define reconcile-report-instructions
   (gnc:make-html-text
-   (_ "The reconcile report is designed to be similar to the formal \
+   (G_ "The reconcile report is designed to be similar to the formal \
 reconciliation tool.  Please select the account from Report \
 Options. Please note the dates specified in the options will apply \
 to the Reconciliation Date.")
@@ -82,10 +82,10 @@
                         (and (not (positive? (split-amount s)))
                              (gnc:monetary-neg (amount s))))))
     ;; similar to default-calculated-cells but disable dual-subtotals.
-    (list (vector (_ "Funds In")
+    (list (vector (G_ "Funds In")
                   debit-amount #f #t #f
                   (const ""))
-          (vector (_ "Funds Out")
+          (vector (G_ "Funds Out")
                   credit-amount #f #t #f
                   (const "")))))
 
@@ -99,7 +99,7 @@
 
 (gnc:define-report
  'version 1
- 'name (_ "Reconciliation Report")
+ 'name (G_ "Reconciliation Report")
  'report-guid "e45218c6d76f11e7b5ef0800277ef320"
  'options-generator reconcile-report-options-generator
  ;; the renderer is the same as trep, however we're using a different
--- gnucash-3.8b/gnucash/report/standard-reports/budget.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/budget.scm	2020-01-16 23:43:29.687861428 +0000
@@ -472,9 +472,9 @@
              html-table 0 current-col
              (cond
               ((eq? (car column-list) 'total)
-               (_ "Total"))
+               (G_ "Total"))
               ((list? (car column-list))
-               (format #f (_ "~a to ~a")
+               (format #f (G_ "~a to ~a")
                        (period-to-date-string (car (car column-list)))
                        (period-to-date-string (last (car column-list)))))
               (else
@@ -498,17 +498,17 @@
                 (gnc:html-table-set-cell/tag!
                  html-table 1 col0 "centered-label-cell"
                  ;; Translators: Abbreviation for "Budget" amount
-                 (_ "Bgt")))
+                 (G_ "Bgt")))
               (when show-actual?
                 (gnc:html-table-set-cell/tag!
                  html-table 1 col1 "centered-label-cell"
                  ;; Translators: Abbreviation for "Actual" amount
-                 (_ "Act")))
+                 (G_ "Act")))
               (when show-diff?
                 (gnc:html-table-set-cell/tag!
                  html-table 1 col2 "centered-label-cell"
                  ;; Translators: Abbreviation for "Difference" amount
-                 (_ "Diff")))
+                 (G_ "Diff")))
               (loop (cdr column-list)
                     col3))))))
 
@@ -733,7 +733,7 @@
                      ;; budget will report on budgeted and actual
                      ;; amounts from the beginning of budget, instead
                      ;; of only using the budget-period amounts.
-                     (if accumulate? (_ "using accumulated amounts")
+                     (if accumulate? (G_ "using accumulated amounts")
                          "")))
 
         ;; We do this in two steps: First the account names...  the
--- gnucash-3.8b/gnucash/report/standard-reports/budget-flow.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/budget-flow.scm	2020-01-16 23:43:47.924860558 +0000
@@ -166,7 +166,7 @@
             (gnc:sum-collector-commodity act-total report-currency exchange-fn)))
       (gnc:html-table-add-budget-row!
        html-table "total-number-cell"
-       (string-append (_ "Total") ":")
+       (string-append (G_ "Total") ":")
        bgt-total-numeric act-total-numeric)
 
       (gnc:html-table-append-row!
@@ -245,7 +245,7 @@
       ;; Display Grand Total
       (gnc:html-table-add-budget-row!
        html-table "total-number-cell"
-       (string-append (_ "Total") ":") bgt-total-numeric act-total-numeric))))
+       (string-append (G_ "Total") ":") bgt-total-numeric act-total-numeric))))
 
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;; budget-renderer
@@ -304,7 +304,7 @@
 
         ;; Display Title Name - Budget - Period
         (gnc:html-document-set-title!
-         doc (format #f (_ "~a: ~a - ~a")
+         doc (format #f (G_ "~a: ~a - ~a")
                      report-name (gnc-budget-get-name budget)
                      (qof-print-date (gnc-budget-get-period-start-date
                                       budget (1- period)))))
--- gnucash-3.8b/gnucash/report/standard-reports/register.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/register.scm	2020-01-16 23:40:47.134869184 +0000
@@ -126,27 +126,27 @@
   (let ((heading-list '()))
     (gnc:debug "Column-vector" column-vector)
     (if (date-col column-vector)
-        (addto! heading-list (_ "Date")))
+        (addto! heading-list (G_ "Date")))
     (if (num-col column-vector)
         (addto! heading-list (if action-for-num?
                                  (if ledger-type?
-                                     (_ "T-Num")
-                                     (_ "Num/Action"))
-                                 (_ "Num"))))
+                                     (G_ "T-Num")
+                                     (G_ "Num/Action"))
+                                 (G_ "Num"))))
     (if (description-col column-vector)
-        (addto! heading-list (_ "Description")))
+        (addto! heading-list (G_ "Description")))
     (if (memo-col column-vector)
-        (addto! heading-list (_ "Memo")))
+        (addto! heading-list (G_ "Memo")))
     (if (account-col column-vector)
         (addto! heading-list (if multi-rows?
-                                 (_ "Account")
-                                 (_ "Transfer"))))
+                                 (G_ "Account")
+                                 (G_ "Transfer"))))
     (if (shares-col column-vector)
-        (addto! heading-list (_ "Shares")))
+        (addto! heading-list (G_ "Shares")))
     (if (lot-col column-vector)
-        (addto! heading-list (_ "Lot")))
+        (addto! heading-list (G_ "Lot")))
     (if (price-col column-vector)
-        (addto! heading-list (_ "Price")))
+        (addto! heading-list (G_ "Price")))
     (if (amount-single-col column-vector)
         (addto! heading-list amount-string))
     (if (debit-col column-vector)
@@ -154,13 +154,13 @@
     (if (credit-col column-vector)
         (addto! heading-list credit-string))
     (if (value-single-col column-vector)
-        (addto! heading-list (_ "Value")))
+        (addto! heading-list (G_ "Value")))
     (if (value-debit-col column-vector)
-        (addto! heading-list (_ "Debit Value")))
+        (addto! heading-list (G_ "Debit Value")))
     (if (value-credit-col column-vector)
-        (addto! heading-list (_ "Credit Value")))
+        (addto! heading-list (G_ "Credit Value")))
     (if (balance-col column-vector)
-        (addto! heading-list (_ "Balance")))
+        (addto! heading-list (G_ "Balance")))
     (reverse heading-list)))
 
 (define (add-split-row table split column-vector row-style transaction-info?
@@ -224,8 +224,8 @@
                           ((2) (gnc-account-get-full-name
                                 (xaccSplitGetAccount
                                  (xaccSplitGetOtherSplit split))))
-                          ((1) (_ "None"))
-                          (else (_ "-- Split Transaction --"))))))))
+                          ((1) (G_ "None"))
+                          (else (G_ "-- Split Transaction --"))))))))
     (if (shares-col column-vector)
         (addto! row-contents
                 (gnc:make-html-table-cell/markup
@@ -366,9 +366,9 @@
   (gnc:register-reg-option
    (gnc:make-internal-option "__reg" "double" #f))
   (gnc:register-reg-option
-   (gnc:make-internal-option "__reg" "debit-string" (_ "Debit")))
+   (gnc:make-internal-option "__reg" "debit-string" (G_ "Debit")))
   (gnc:register-reg-option
-   (gnc:make-internal-option "__reg" "credit-string" (_ "Credit")))
+   (gnc:make-internal-option "__reg" "credit-string" (G_ "Credit")))
 
   (gnc:register-reg-option
    (gnc:make-string-option
@@ -578,18 +578,18 @@
        ;; ----------------------------------
        ((null? splits)
         (when reg-report-show-totals?
-          (add-subtotal-row (_ "Total Debits") leader table used-columns
+          (add-subtotal-row (G_ "Total Debits") leader table used-columns
                             debit-collector "grand-total" #f)
-          (add-subtotal-row (_ "Total Credits") leader table used-columns
+          (add-subtotal-row (G_ "Total Credits") leader table used-columns
                             credit-collector "grand-total" #f)
-          (add-subtotal-row (_ "Total Value Debits") leader table used-columns
+          (add-subtotal-row (G_ "Total Value Debits") leader table used-columns
                             debit-value "grand-total" #t)
-          (add-subtotal-row (_ "Total Value Credits") leader table used-columns
+          (add-subtotal-row (G_ "Total Value Credits") leader table used-columns
                             credit-value "grand-total" #t))
         (when ledger-type?
-          (add-subtotal-row (_ "Net Change") leader table used-columns
+          (add-subtotal-row (G_ "Net Change") leader table used-columns
                             total-collector "grand-total" #f))
-        (add-subtotal-row (_ "Value Change") leader table used-columns
+        (add-subtotal-row (G_ "Value Change") leader table used-columns
                           total-value "grand-total" #t))
 
        ;; The general journal has a split that doesn't have an account
@@ -662,7 +662,7 @@
            (table (make-split-table splits
                                     (gnc:report-options report-obj)
                                     debit-string credit-string
-                                    (_ "Amount"))))
+                                    (G_ "Amount"))))
       (gnc:html-document-set-title! document title)
       (gnc:html-document-add-object! document table)
       (qof-query-destroy query))
--- gnucash-3.8b/gnucash/report/standard-reports/general-journal.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/general-journal.scm	2020-01-16 23:42:25.325864499 +0000
@@ -86,8 +86,8 @@
       (list "query" (gnc-query2scm query)) ;; think this wants an scm...
       (list "journal" #t)
       (list "double" #t)
-      (list "debit-string" (_ "Debit"))
-      (list "credit-string" (_ "Credit"))
+      (list "debit-string" (G_ "Debit"))
+      (list "credit-string" (G_ "Credit"))
       )
      )
     ;; we'll leave query malloc'd in case this is required by the C side...
@@ -122,7 +122,7 @@
   ;; just delegate rendering to the Register Report renderer...
   (let* ((renderer (gnc:report-template-renderer/report-guid regrptguid #f))
          (doc (renderer report-obj)))
-    (gnc:html-document-set-title! doc (_ reportname))
+    (gnc:html-document-set-title! doc (G_ reportname))
     doc))
 
 (gnc:define-report 
--- gnucash-3.8b/gnucash/report/standard-reports/advanced-portfolio.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/advanced-portfolio.scm	2020-01-16 23:45:16.860856314 +0000
@@ -1054,8 +1054,8 @@
                    (lambda (foreign domestic date)
                     (find-price (gnc-pricedb-lookup-nearest-in-time-any-currency-t64
 		     pricedb foreign (time64CanonicalDayTime date)) domestic)))))
-	       (headercols (list (_ "Account")))
-	       (totalscols (list (gnc:make-html-table-cell/markup "total-label-cell" (_ "Total"))))
+	       (headercols (list (G_ "Account")))
+	       (totalscols (list (gnc:make-html-table-cell/markup "total-label-cell" (G_ "Total"))))
 	       (sum-total-moneyin (gnc-numeric-zero))
 	       (sum-total-income (gnc-numeric-zero))
 	       (sum-total-both-gains (gnc-numeric-zero))
@@ -1066,37 +1066,37 @@
 
 	  ;;begin building lists for which columns to display
           (if show-symbol
-	      (begin (append! headercols (list (_ "Symbol")))
+	      (begin (append! headercols (list (G_ "Symbol")))
 		     (append! totalscols (list " "))))
 
 	  (if show-listing
-	      (begin (append! headercols (list (_ "Listing")))
+	      (begin (append! headercols (list (G_ "Listing")))
 		     (append! totalscols (list " "))))
 
 	  (if show-shares
-	      (begin (append! headercols (list (_ "Shares")))
+	      (begin (append! headercols (list (G_ "Shares")))
 		     (append! totalscols (list " "))))
 
 	  (if show-price
-	      (begin (append! headercols (list (_ "Price")))
+	      (begin (append! headercols (list (G_ "Price")))
 		     (append! totalscols (list " "))))
 
 	  (append! headercols (list " "
-				    (_ "Basis")
-				    (_ "Value")
-				    (_ "Money In")
-				    (_ "Money Out")
-				    (_ "Realized Gain")
-				    (_ "Unrealized Gain")
-				    (_ "Total Gain")
-				    (_ "Rate of Gain")
-				    (_ "Income")))
+				    (G_ "Basis")
+				    (G_ "Value")
+				    (G_ "Money In")
+				    (G_ "Money Out")
+				    (G_ "Realized Gain")
+				    (G_ "Unrealized Gain")
+				    (G_ "Total Gain")
+				    (G_ "Rate of Gain")
+				    (G_ "Income")))
 
 	  (if (not (eq? handle-brokerage-fees 'ignore-brokerage))
-	      (append! headercols (list (_ "Brokerage Fees"))))
+	      (append! headercols (list (G_ "Brokerage Fees"))))
 
-	  (append! headercols (list (_ "Total Return")
-				    (_ "Rate of Return")))
+	  (append! headercols (list (G_ "Total Return")
+				    (G_ "Rate of Return")))
 
           (append! totalscols (list " "))
 
@@ -1193,14 +1193,14 @@
           (gnc:html-document-add-object! document table)
           (if warn-price-dirty
               (gnc:html-document-append-objects! document
-                                                 (list (gnc:make-html-text (_ "* this commodity data was built using transaction pricing instead of the price list."))
+                                                 (list (gnc:make-html-text (G_ "* this commodity data was built using transaction pricing instead of the price list."))
 						       (gnc:make-html-text (gnc:html-markup-br))
-						       (gnc:make-html-text (_ "If you are in a multi-currency situation, the exchanges may not be correct.")))))
+						       (gnc:make-html-text (G_ "If you are in a multi-currency situation, the exchanges may not be correct.")))))
 
           (if warn-no-price
               (gnc:html-document-append-objects! document
                                                  (list (gnc:make-html-text (if warn-price-dirty (gnc:html-markup-br) ""))
-                                                       (gnc:make-html-text (_ "** this commodity has no price and a price of 1 has been used.")))))
+                                                       (gnc:make-html-text (G_ "** this commodity has no price and a price of 1 has been used.")))))
 )
 
 					;if no accounts selected.
--- gnucash-3.8b/gnucash/report/standard-reports/cash-flow.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/cash-flow.scm	2020-01-16 23:43:08.448862441 +0000
@@ -188,7 +188,7 @@
      doc (string-append
           (get-option gnc:pagename-general gnc:optname-reportname)
           " - "
-          (format #f (_ "~a to ~a")
+          (format #f (G_ "~a to ~a")
                   (qof-print-date from-date-t64) (qof-print-date to-date-t64))))
 
     (if (not (null? accounts))
@@ -203,8 +203,8 @@
                     (if (and (= (gnc-account-get-current-depth account) tree-depth)
                              (pair? (gnc-account-get-children account)))
                         (if show-subaccts?
-                            (_ "~a and subaccounts")
-                            (_ "~a and selected subaccounts"))
+                            (G_ "~a and subaccounts")
+                            (G_ "~a and selected subaccounts"))
                         "~a")
                     (gnc:html-markup-anchor
                      (gnc:account-anchor-text account)
@@ -254,7 +254,7 @@
 
               (gnc:html-document-add-object!
                doc
-               (gnc:make-html-text (_ "Selected Accounts")))
+               (gnc:make-html-text (G_ "Selected Accounts")))
 
               (gnc:html-document-add-object!
                doc
@@ -268,7 +268,7 @@
                table
                "primary-subheading"
                (list
-                (_ "Money into selected accounts comes from")
+                (G_ "Money into selected accounts comes from")
                 ""))
 
               (add-accounts-flow money-in-accounts money-in-alist)
@@ -277,7 +277,7 @@
                table
                "grand-total"
                (list
-                (gnc:make-html-table-header-cell/markup "text-cell" (_ "Money In"))
+                (gnc:make-html-table-header-cell/markup "text-cell" (G_ "Money In"))
                 (gnc:make-html-table-header-cell/markup
                  "total-number-cell"
                  (gnc:sum-collector-commodity
@@ -289,7 +289,7 @@
                table
                "primary-subheading"
                (list
-                (_ "Money out of selected accounts goes to")
+                (G_ "Money out of selected accounts goes to")
                 ""))
 
               (add-accounts-flow money-out-accounts money-out-alist)
@@ -298,7 +298,7 @@
                table
                "grand-total"
                (list
-                (gnc:make-html-table-header-cell/markup "text-cell" (_ "Money Out"))
+                (gnc:make-html-table-header-cell/markup "text-cell" (G_ "Money Out"))
                 (gnc:make-html-table-header-cell/markup
                  "total-number-cell"
                  (gnc:sum-collector-commodity
@@ -310,7 +310,7 @@
                table
                "grand-total"
                (list
-                (gnc:make-html-table-header-cell/markup "text-cell" (_ "Difference"))
+                (gnc:make-html-table-header-cell/markup "text-cell" (G_ "Difference"))
                 (gnc:make-html-table-header-cell/markup
                  "total-number-cell"
                  (gnc:sum-collector-commodity
--- gnucash-3.8b/gnucash/report/standard-reports/balance-forecast.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/balance-forecast.scm	2020-01-16 23:45:31.675855608 +0000
@@ -35,7 +35,7 @@
 (define reportname           (N_ "Balance Forecast"))
 
 (define optname-accounts     (N_ "Accounts"))
-(define opthelp-accounts     (_ "Report on these accounts."))
+(define opthelp-accounts     (G_ "Report on these accounts."))
 
 (define optname-from-date    (N_ "Start Date"))
 (define optname-to-date      (N_ "End Date"))
@@ -47,25 +47,25 @@
 (define optname-plot-width   (N_ "Plot Width"))
 (define optname-plot-height  (N_ "Plot Height"))
 (define optname-show-markers (N_ "Data markers?"))
-(define opthelp-show-markers (_ "Display a mark for each data point."))
+(define opthelp-show-markers (G_ "Display a mark for each data point."))
 
 (define optname-show-reserve (N_ "Show reserve line"))
-(define opthelp-show-reserve (_ "Show reserve line"))
+(define opthelp-show-reserve (G_ "Show reserve line"))
 
 (define optname-reserve      (N_ "Reserve amount"))
-(define opthelp-reserve      (_ "The reserve amount is set to a \
+(define opthelp-reserve      (G_ "The reserve amount is set to a \
 minimum balance desired"))
 
 (define optname-show-target  (N_ "Show target line"))
-(define opthelp-show-target  (_ "Show target line"))
+(define opthelp-show-target  (G_ "Show target line"))
 
 (define optname-target       (N_ "Target amount above reserve"))
-(define opthelp-target       (_ "The target is used to plan for \
+(define opthelp-target       (G_ "The target is used to plan for \
 a future large purchase, which will be added as a line above the \
 reserve amount."))
 
 (define optname-show-minimum (N_ "Show future minimum"))
-(define opthelp-show-minimum (_ "The future minimum will add, for each \
+(define opthelp-show-minimum (G_ "The future minimum will add, for each \
 date point, a projected minimum balance including scheduled transactions."))
 
 ; Options generator
@@ -231,32 +231,32 @@
 
         ;; Minimum line
         (when show-minimum
-          (set! series (cons (list (_ "Minimum") "#0AA") series))
+          (set! series (cons (list (G_ "Minimum") "#0AA") series))
           (gnc:html-linechart-append-column!
            chart (let loop ((balances balances) (result '()))
                    (if (null? balances) (reverse! result)
                        (loop (cdr balances) (cons (apply min balances) result))))))
 
         ;; Balance line (do this here so it draws over the minimum line)
-        (set! series (cons (list (_ "Balance") "#0A0") series))
+        (set! series (cons (list (G_ "Balance") "#0A0") series))
         (gnc:html-linechart-append-column! chart balances)
 
         ;; Target line
         (when show-target
-          (set! series (cons (list (_ "Target") "#FF0") series))
+          (set! series (cons (list (G_ "Target") "#FF0") series))
           (gnc:html-linechart-append-column!
            chart (make-list (length intervals) (+ reserve target))))
 
         ;; Reserve line
         (when show-reserve
-          (set! series (cons (list (_ "Reserve") "#F00") series))
+          (set! series (cons (list (G_ "Reserve") "#F00") series))
           (gnc:html-linechart-append-column!
            chart (make-list (length intervals) reserve)))
 
         ;; Set the chart titles
         (gnc:html-linechart-set-title! chart report-title)
         (gnc:html-linechart-set-subtitle!
-         chart (format #f (_ "~a to ~a")
+         chart (format #f (G_ "~a to ~a")
                        (qof-print-date from-date) (qof-print-date to-date)))
         ;; Set the chart size
         (gnc:html-linechart-set-width! chart plot-width)
--- gnucash-3.8b/gnucash/report/standard-reports/net-charts.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/net-charts.scm	2020-01-16 23:41:38.384866739 +0000
@@ -358,7 +358,7 @@
             gnc:html-linechart-set-subtitle!
             gnc:html-barchart-set-subtitle!)
         chart (format #f
-                       (_ "~a to ~a")
+                       (G_ "~a to ~a")
                        (qof-print-date from-date-t64)
                        (qof-print-date to-date-t64)))
 
@@ -396,13 +396,13 @@
         chart (append
                (if show-sep?
                    (if inc-exp?
-                       (list (_ "Income") (_ "Expense"))
-                       (list (_ "Assets") (_ "Liabilities")))
+                       (list (G_ "Income") (G_ "Expense"))
+                       (list (G_ "Assets") (G_ "Liabilities")))
                    '())
                (if show-net?
                    (if inc-exp?
-                       (list (_ "Net Profit"))
-                       (list (_ "Net Worth")))
+                       (list (G_ "Net Profit"))
+                       (list (G_ "Net Worth")))
                    '())))
 
        ((if linechart?
@@ -435,8 +435,8 @@
        ;;                     (list gnc:pagename-general
        ;;                           gnc:optname-reportname
        ;;                           (if inc-exp?
-       ;;                               (_ "Income Chart")
-       ;;                               (_ "Asset Chart")))))
+       ;;                               (G_ "Income Chart")
+       ;;                               (G_ "Asset Chart")))))
        ;;                   (gnc:make-report-anchor
        ;;                    (if inc-exp?
        ;;                        category-barchart-expense-uuid
@@ -448,8 +448,8 @@
        ;;                     (list gnc:pagename-general
        ;;                           gnc:optname-reportname
        ;;                           (if inc-exp?
-       ;;                               (_ "Expense Chart")
-       ;;                               (_ "Liability Chart"))))))))
+       ;;                               (G_ "Expense Chart")
+       ;;                               (G_ "Liability Chart"))))))))
        ;;             ((if linechart?
        ;;                  gnc:html-linechart-set-button-1-line-urls!
        ;;                  gnc:html-barchart-set-button-1-line-urls!)
@@ -473,16 +473,16 @@
                    (gnc:html-table-set-col-headers!
                     table
                     (append
-                     (list (_ "Date"))
+                     (list (G_ "Date"))
                      (if show-sep?
                          (if inc-exp?
-                             (list (_ "Income") (_ "Expense"))
-                             (list (_ "Assets") (_ "Liabilities")))
+                             (list (G_ "Income") (G_ "Expense"))
+                             (list (G_ "Assets") (G_ "Liabilities")))
                          '())
                      (if show-net?
                          (if inc-exp?
-                             (list (_ "Net Profit"))
-                             (list (_ "Net Worth")))
+                             (list (G_ "Net Profit"))
+                             (list (G_ "Net Worth")))
                          '())))
                    (gnc:html-table-append-column! table date-string-list)
                    (when show-sep?
--- gnucash-3.8b/gnucash/report/standard-reports/budget-income-statement.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/budget-income-statement.scm	2020-01-16 23:43:39.152860976 +0000
@@ -141,7 +141,7 @@
     (add-option
       (gnc:make-string-option
       gnc:pagename-general optname-report-title
-      "a" opthelp-report-title (_ reportname)))
+      "a" opthelp-report-title (G_ reportname)))
     (add-option
       (gnc:make-string-option
       gnc:pagename-general optname-party-name
@@ -439,7 +439,7 @@
       (gnc:html-document-add-object!
        doc (gnc:html-make-generic-simple-warning
             report-title
-            (_ "Reporting range end period cannot be less than start period."))))
+            (G_ "Reporting range end period cannot be less than start period."))))
 
      (else
       ;; Get all the balances for each of the account types.
@@ -507,20 +507,20 @@
               (let ((table (gnc:make-html-table)))
                 (gnc:html-table-append-row! table space)
                 (when label-revenue?
-                  (add-subtotal-line table (_ "Revenues") #f #f))
+                  (add-subtotal-line table (G_ "Revenues") #f #f))
                 (gnc:html-table-add-account-balances table revenue-table params)
                 (when total-revenue?
-                  (add-subtotal-line table (_ "Total Revenue") #f revenue-total))
+                  (add-subtotal-line table (G_ "Total Revenue") #f revenue-total))
                 table))
 
              (exp-table
               (let ((table (gnc:make-html-table)))
                 (gnc:html-table-append-row! table space)
                 (when label-expense?
-                  (add-subtotal-line table (_ "Expenses") #f #f))
+                  (add-subtotal-line table (G_ "Expenses") #f #f))
                 (gnc:html-table-add-account-balances table expense-table params)
                 (when total-expense?
-                  (add-subtotal-line table (_ "Total Expenses") #f expense-total))
+                  (add-subtotal-line table (G_ "Total Expenses") #f expense-total))
                 table))
 
              (budget-name (gnc-budget-get-name budget))
@@ -528,12 +528,12 @@
              (period-for
               (cond
                ((not use-budget-period-range?)
-                (format #f (_ "for Budget ~a") budget-name))
+                (format #f (G_ "for Budget ~a") budget-name))
                ((= user-budget-period-start user-budget-period-end)
-                (format #f (_ "for Budget ~a Period ~d")
+                (format #f (G_ "for Budget ~a Period ~d")
                         budget-name user-budget-period-start))
                (else
-                (format #f (_ "for Budget ~a Periods ~d - ~d")
+                (format #f (G_ "for Budget ~a Periods ~d - ~d")
                         budget-name user-budget-period-start
                         user-budget-period-end)))))
 
@@ -561,8 +561,8 @@
 
         (report-line
          (if standard-order? exp-table inc-table)
-         (string-append (_ "Net income") " " period-for)
-         (string-append (_ "Net loss") " " period-for)
+         (string-append (G_ "Net income") " " period-for)
+         (string-append (G_ "Net loss") " " period-for)
          net-income
          (* 2 (1- tree-depth)) exchange-fn #f #f)
 
--- gnucash-3.8b/gnucash/report/standard-reports/account-summary.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/account-summary.scm	2020-01-16 23:45:10.301856627 +0000
@@ -145,7 +145,7 @@
     (add-option
      (gnc:make-string-option
       gnc:pagename-general optname-report-title
-      "a" opthelp-report-title (_ reportname)))
+      "a" opthelp-report-title (G_ reportname)))
     (add-option
      (gnc:make-string-option
       gnc:pagename-general optname-party-name
@@ -321,7 +321,7 @@
      doc (string-append
           company-name " " report-title " "
           (if sx?
-              (format #f (_ "For Period Covering ~a to ~a")
+              (format #f (G_ "For Period Covering ~a to ~a")
                       (qof-print-date from-date)
                       (qof-print-date to-date))
               (qof-print-date to-date))))
@@ -402,10 +402,10 @@
            build-table
            (map make-header
                 (append
-                 (if show-code? (list (_ "Code")) '())
-                 (if show-type? (list (_ "Type")) '())
-                 (if show-desc? (list (_ "Description")) '())
-                 (list (_ "Account title")))))
+                 (if show-code? (list (G_ "Code")) '())
+                 (if show-type? (list (G_ "Type")) '())
+                 (if show-desc? (list (G_ "Description")) '())
+                 (list (G_ "Account title")))))
           ;; add any fields to be displayed before the account name
           (if show-code? (add-col 'account-code))
           (if show-type? (add-col 'account-type-string))
@@ -417,7 +417,7 @@
                 account-cols))
           (when show-bals?
             (gnc:html-table-set-cell/tag!
-             build-table 0 (+ cur-col account-cols) "number-header" (_ "Balance")))
+             build-table 0 (+ cur-col account-cols) "number-header" (G_ "Balance")))
           (let rowloop ((row 0))
             (when (< row table-rows)
               (gnc:html-table-set-row-markup!
@@ -432,7 +432,7 @@
           (set! cur-col (+ cur-col hold-table-width))
           (when show-notes?
             (gnc:html-table-set-cell/tag!
-             build-table 0 cur-col "number-header" (_ "Notes"))
+             build-table 0 cur-col "number-header" (G_ "Notes"))
             (add-col 'account-notes))
 
           (gnc:html-document-add-object! doc build-table)
--- gnucash-3.8b/gnucash/report/standard-reports/income-gst-statement.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/income-gst-statement.scm	2020-01-16 23:42:01.986865612 +0000
@@ -39,17 +39,17 @@
 (define pagename-filter (N_ "Filter"))
 (define TAX-SETUP-DESC
   (gnc:make-html-text
-   (_ "This report is useful to calculate periodic business tax payable/receivable from \
+   (G_ "This report is useful to calculate periodic business tax payable/receivable from \
 authorities. From 'Edit report options' above, choose your Business Income and Business Expense accounts. \
 Each transaction may contain, in addition to the accounts payable/receivable or bank accounts, \
 a split to a tax account, e.g. Income:Sales -$1000, Liability:GST on Sales -$100, Asset:Bank $1100.")
    (gnc:html-markup-br)
    (gnc:html-markup-br)
-   (_ "These tax accounts can either be populated using the standard register, or from Business Invoices and Bills \
+   (G_ "These tax accounts can either be populated using the standard register, or from Business Invoices and Bills \
 which will require Tax Tables to be set up correctly. Please see the documentation.")
    (gnc:html-markup-br)
    (gnc:html-markup-br)
-   (_ "From the Report Options, you will need to select the accounts which will \
+   (G_ "From the Report Options, you will need to select the accounts which will \
 hold the GST/VAT taxes collected or paid. These accounts must contain splits which document the \
 monies which are wholly sent or claimed from tax authorities during periodic GST/VAT returns. These \
 accounts must be of type ASSET for taxes paid on expenses, and type LIABILITY for taxes collected on sales.")
@@ -201,7 +201,7 @@
     ;;         friendly-heading-fn  - unused in GST report
     (append
      ;; Translators: "Gross Sales" refer to Net Sales + GST/VAT on Sales
-     (list (vector (_ "Gross Sales")
+     (list (vector (G_ "Gross Sales")
                    gross-sales
                    #t #t #f
                    (lambda (a) "")))
@@ -211,7 +211,7 @@
                                     #t #t #f
                                     (lambda (a) "")))
               accounts-sales)
-         (list (vector (_ "Net Sales")
+         (list (vector (G_ "Net Sales")
                        sales-without-tax
                        #t #t #f
                        (lambda (a) ""))))
@@ -221,12 +221,12 @@
                                     #t #t #f
                                     (lambda (a) "")))
               accounts-tax-collected)
-         (list (vector (_ "Tax on Sales")
+         (list (vector (G_ "Tax on Sales")
                        tax-on-sales
                        #t #t #f
                        (lambda (a) ""))))
      ;; Translators: "Gross Purchases" refer to Net Purchase + GST/VAT on Purchase
-     (list (vector (_ "Gross Purchases")
+     (list (vector (G_ "Gross Purchases")
                    gross-purchases
                    #f #t #f
                    (lambda (a) "")))
@@ -236,7 +236,7 @@
                                     #f #t #f
                                     (lambda (a) "")))
               accounts-purchases)
-         (list (vector (_ "Net Purchases")
+         (list (vector (G_ "Net Purchases")
                        purchases-without-tax
                        #f #t #f
                        (lambda (a) ""))))
@@ -246,13 +246,13 @@
                                     #f #t #f
                                     (lambda (a) "")))
               accounts-tax-paid)
-         (list (vector (_ "Tax on Purchases")
+         (list (vector (G_ "Tax on Purchases")
                        tax-on-purchases
                        #f #t #f
                        (lambda (a) ""))))
      (if (opt-val gnc:pagename-display (N_ "Gross Balance"))
          ;; Translators: "Gross Balance" refer to "Gross Sales - Gross Purchases" in GST Report
-         (list (vector (_ "Gross Balance")
+         (list (vector (G_ "Gross Balance")
                        gross-balance
                        #f #t #f
                        (lambda (a) "")))
@@ -260,14 +260,14 @@
          ;; Note: Net income = net balance - other costs
      (if (opt-val gnc:pagename-display (N_ "Net Balance"))
          ;; Translators: "Net Balance" refer to Net Sales - Net Purchases in GST Report
-         (list (vector (_ "Net Balance")
+         (list (vector (G_ "Net Balance")
                        net-balance
                        #f #t #f
                        (lambda (a) "")))
          '())
      (if (opt-val gnc:pagename-display (N_ "Tax payable"))
          ;; Translators: "Tax Payable" refer to the difference GST Sales - GST Purchases
-         (list (vector (_ "Tax payable")
+         (list (vector (G_ "Tax payable")
                        tax-payable
                        #f #t #f
                        (lambda (a) "")))
--- gnucash-3.8b/gnucash/report/standard-reports/average-balance.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/average-balance.scm	2020-01-16 23:45:25.168855918 +0000
@@ -144,9 +144,9 @@
 (define columns
   ;; Watch out -- these names should be consistent with the display
   ;; option where you choose them, otherwise users are confused.
-  (list (_ "Period start") (_ "Period end") (_ "Average") 
-        (_ "Maximum") (_ "Minimum") (_ "Gain") 
-        (_ "Loss") (_ "Profit") ))
+  (list (G_ "Period start") (G_ "Period end") (G_ "Average") 
+        (G_ "Maximum") (G_ "Minimum") (G_ "Gain") 
+        (G_ "Loss") (G_ "Profit") ))
 
 
 (define (analyze-splits splits balances daily-dates interval-dates
--- gnucash-3.8b/gnucash/report/standard-reports/cashflow-barchart.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/cashflow-barchart.scm	2020-01-16 23:43:18.886861943 +0000
@@ -291,7 +291,7 @@
           (gnc:html-barchart-set-title! chart report-title)
           (gnc:html-barchart-set-subtitle!
            chart (format #f
-                          (_ "~a to ~a")
+                          (G_ "~a to ~a")
                           (qof-print-date from-date-t64)
                           (qof-print-date to-date-t64)))
           (gnc:html-barchart-set-width! chart width)
@@ -310,9 +310,9 @@
           ;; Legend labels, colors
           (gnc:html-barchart-set-col-labels!
            chart (append
-                  (if show-in? (list (_ "Money In")) '())
-                  (if show-out? (list (_ "Money Out")) '())
-                  (if show-net? (list (_ "Net Flow")) '())
+                  (if show-in? (list (G_ "Money In")) '())
+                  (if show-out? (list (G_ "Money Out")) '())
+                  (if show-net? (list (G_ "Net Flow")) '())
                   ))
           (gnc:html-barchart-set-col-colors!
            chart (append
@@ -334,14 +334,14 @@
           (if (and non-zeros show-table?)
               (let* ((table (gnc:make-html-table)))
                 (gnc:html-table-set-col-headers!
-                 table (append (list (_ "Date"))
-                               (if show-in? (list (_ "Money In")) '())
-                               (if show-out? (list (_ "Money Out")) '())
-                               (if show-net? (list (_ "Net Flow")) '())
+                 table (append (list (G_ "Date"))
+                               (if show-in? (list (G_ "Money In")) '())
+                               (if show-out? (list (G_ "Money Out")) '())
+                               (if show-net? (list (G_ "Net Flow")) '())
                                ))
 
                 (gnc:html-document-add-object!
-                 doc (gnc:make-html-text (gnc:html-markup-h3 (_ "Overview:"))))
+                 doc (gnc:make-html-text (gnc:html-markup-h3 (G_ "Overview:"))))
                 (gnc:html-table-append-column! table (append date-string-list (list "Total")))
 
                 (if show-in?
--- gnucash-3.8b/gnucash/report/standard-reports/budget-balance-sheet.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/budget-balance-sheet.scm	2020-01-16 23:44:08.859859559 +0000
@@ -122,7 +122,7 @@
     (add-option
       (gnc:make-string-option
       gnc:pagename-general optname-report-title
-      "a" opthelp-report-title (_ reportname)))
+      "a" opthelp-report-title (G_ reportname)))
     (add-option
       (gnc:make-string-option
       gnc:pagename-general optname-party-name
@@ -661,7 +661,7 @@
               (gnc:html-table-append-row! right-table space)))
 
           (gnc:report-percent-done 80)
-	  (if label-assets? (add-subtotal-line left-table (_ "Assets") #f #f))
+	  (if label-assets? (add-subtotal-line left-table (G_ "Assets") #f #f))
 	  (set! asset-table
             (gnc:make-html-acct-table/env/accts
             (append table-env (list (list 'get-balance-fn asset-get-balance-fn)))
@@ -673,16 +673,16 @@
               (if new-existing?
                 (begin
                   (add-subtotal-line
-                    left-table (_ "Existing Assets") #f existing-assets)
+                    left-table (G_ "Existing Assets") #f existing-assets)
                   (add-subtotal-line
-                    left-table (_ "Allocated Assets") #f allocated-assets)))
+                    left-table (G_ "Allocated Assets") #f allocated-assets)))
 
               (if (not (gnc-commodity-collector-allzero? unallocated-assets))
                 (add-subtotal-line
-                  left-table (_ "Unallocated Assets") #f unallocated-assets))
+                  left-table (G_ "Unallocated Assets") #f unallocated-assets))
 
               (add-subtotal-line
-                left-table (_ "Total Assets") #f asset-balance)))
+                left-table (G_ "Total Assets") #f asset-balance)))
 	  
 	  (if report-form?
 	      (add-rule left-table))
@@ -691,7 +691,7 @@
 	  
 	  (gnc:report-percent-done 85)
 	  (if label-liabilities?
-	      (add-subtotal-line right-table (_ "Liabilities") #f #f))
+	      (add-subtotal-line right-table (G_ "Liabilities") #f #f))
           (set! liability-table
             (gnc:make-html-acct-table/env/accts
               (append table-env
@@ -705,22 +705,22 @@
                 (begin
                   (add-subtotal-line
                     right-table
-                    (_ "Existing Liabilities")
+                    (G_ "Existing Liabilities")
                     #f
                     existing-liabilities)
 
                   (add-subtotal-line
-                    right-table (_ "New Liabilities") #f new-liabilities)))
+                    right-table (G_ "New Liabilities") #f new-liabilities)))
 
 	      (add-subtotal-line
-                right-table (_ "Total Liabilities") #f liability-balance)))
+                right-table (G_ "Total Liabilities") #f liability-balance)))
 	  
 	  (add-rule right-table)
 	  
 	  (gnc:report-percent-done 88)
 	  (if label-equity?
 	      (add-subtotal-line
-	       right-table (_ "Equity") #f #f))
+	       right-table (G_ "Equity") #f #f))
 	  (set! equity-table
 		(gnc:make-html-acct-table/env/accts
                   (append table-env
@@ -736,27 +736,27 @@
               (begin
                 (add-subtotal-line
                   right-table
-                  (_ "Existing Retained Earnings")
-                  (_ "Existing Retained Losses")
+                  (G_ "Existing Retained Earnings")
+                  (G_ "Existing Retained Losses")
                   existing-retained-earnings)
 
                 (add-subtotal-line
                   right-table
-                  (_ "New Retained Earnings")
-                  (_ "New Retained Losses")
+                  (G_ "New Retained Earnings")
+                  (G_ "New Retained Losses")
                   new-retained-earnings)))
 
               (add-subtotal-line
                 right-table
-                (_ "Total Retained Earnings")
-                (_ "Total Retained Losses")
+                (G_ "Total Retained Earnings")
+                (G_ "Total Retained Losses")
                 retained-earnings))
 
 
           (if (not (gnc-commodity-collector-allzero? unrealized-gain))
             (add-subtotal-line right-table
-              (_ "Unrealized Gains")
-              (_ "Unrealized Losses")
+              (G_ "Unrealized Gains")
+              (G_ "Unrealized Losses")
               unrealized-gain))
 
 
@@ -765,19 +765,19 @@
               (if new-existing?
                 (begin
                   (add-subtotal-line
-                    right-table (_ "Existing Equity") #f existing-equity)
+                    right-table (G_ "Existing Equity") #f existing-equity)
 
                   (add-subtotal-line
-                    right-table (_ "New Equity") #f new-equity)))
+                    right-table (G_ "New Equity") #f new-equity)))
 
 	      (add-subtotal-line
-                right-table (_ "Total Equity") #f equity-balance)))
+                right-table (G_ "Total Equity") #f equity-balance)))
 	  
 	  (add-rule right-table)
 	  
           (add-subtotal-line
             right-table
-            (gnc:html-string-sanitize (_ "Total Liabilities & Equity"))
+            (gnc:html-string-sanitize (G_ "Total Liabilities & Equity"))
             #f
             liability-plus-equity)
 	  
--- gnucash-3.8b/gnucash/report/standard-reports/balsheet-pnl.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/balsheet-pnl.scm	2020-01-16 23:44:20.960858982 +0000
@@ -46,7 +46,7 @@
 
 (define FOOTER-TEXT
   (gnc:make-html-text
-   (_ "WARNING: Foreign currency conversions, and unrealized gains
+   (G_ "WARNING: Foreign currency conversions, and unrealized gains
 calculations are not confirmed correct. This report may be modified
 without notice. Bug reports are very welcome at
 https://bugs.gnucash.org/")))
@@ -140,32 +140,32 @@
 (define periodlist
   (list
    (list #f
-         (cons 'text (_ "Disabled"))
-         (cons 'tip (_ "Disabled")))
+         (cons 'text (G_ "Disabled"))
+         (cons 'tip (G_ "Disabled")))
 
    (list 'YearDelta
-         (cons 'text (_ "Year"))
-         (cons 'tip (_ "One year.")))
+         (cons 'text (G_ "Year"))
+         (cons 'tip (G_ "One year.")))
 
    (list 'HalfYearDelta
-         (cons 'text (_ "Half Year"))
-         (cons 'tip (_ "Half Year.")))
+         (cons 'text (G_ "Half Year"))
+         (cons 'tip (G_ "Half Year.")))
 
    (list 'QuarterDelta
-         (cons 'text (_ "Quarter"))
-         (cons 'tip (_ "One Quarter.")))
+         (cons 'text (G_ "Quarter"))
+         (cons 'tip (G_ "One Quarter.")))
 
    (list 'MonthDelta
-         (cons 'text (_ "Month"))
-         (cons 'tip (_ "One Month.")))
+         (cons 'text (G_ "Month"))
+         (cons 'tip (G_ "One Month.")))
 
    (list 'TwoWeekDelta
-         (cons 'text (_ "2Week"))
-         (cons 'tip (_ "Two Weeks.")))
+         (cons 'text (G_ "2Week"))
+         (cons 'tip (G_ "Two Weeks.")))
 
    (list 'WeekDelta
-         (cons 'text (_ "Week"))
-         (cons 'tip (_ "One Week.")))))
+         (cons 'text (G_ "Week"))
+         (cons 'tip (G_ "One Week.")))))
 
 (define (keylist->vectorlist keylist)
   (map
@@ -240,11 +240,11 @@
       "d" opthelp-options-summary
       'never
       (list (vector 'always
-                    (_ "Always")
-                    (_ "Always display summary."))
+                    (G_ "Always")
+                    (G_ "Always display summary."))
             (vector 'never
-                    (_ "Never")
-                    (_ "Disable report summary.")))))
+                    (G_ "Never")
+                    (G_ "Disable report summary.")))))
 
     ;; accounts to work on
     (add-option
@@ -353,7 +353,7 @@
       (add-option
        (gnc:make-string-option
         pagename-entries optname-closing-pattern
-        "a" opthelp-closing-pattern (_ "Closing Entries")))
+        "a" opthelp-closing-pattern (G_ "Closing Entries")))
 
       (add-option
        (gnc:make-simple-boolean-option
@@ -512,7 +512,7 @@
                        (disable-account-indent? (gnc-account-get-full-name account))
                        (else (xaccAccountGetName account))))
            (acct-label (if (and (not virtual?) total?)
-                           (string-append (_ "Total For ") acct-name)
+                           (string-append (G_ "Total For ") acct-name)
                            acct-name))
            (acct-url (and account-anchor?
                           (not total?)
@@ -666,7 +666,7 @@
 
   (if show-total?
       (add-indented-row 0
-                        (string-append (_ "Total For ") title)
+                        (string-append (G_ "Total For ") title)
                         "total-label-cell"
                         maxindent
                         (map
@@ -861,7 +861,7 @@
                          (format #f "~a ~a "
                                  (gnc:monetary->string orig-monetary)
                                  (gnc-commodity-get-nice-symbol common-currency))
-                         (_ "missing")))))
+                         (G_ "missing")))))
                  (gnc:html-text-append! cell (gnc:html-markup-br)))
                commodities)
               (gnc:make-html-table-cell/markup "number-cell" cell))))
@@ -924,7 +924,7 @@
              (display report-title)
              (display " ")
              (if (or incr (eq? report-type 'pnl))
-                 (format #t (_ "~a to ~a")
+                 (format #t (G_ "~a to ~a")
                          (qof-print-date startdate) (qof-print-date enddate))
                  (display (qof-print-date enddate))))))
 
@@ -1095,38 +1095,38 @@
                               ))))
 
         (when incr
-          (add-to-table multicol-table-left (_ "Date") '()
+          (add-to-table multicol-table-left (G_ "Date") '()
                         #:get-col-header-fn get-col-header-fn
                         #:show-accounts? #f
                         #:show-total? #f)
           (if enable-dual-columns?
-              (add-to-table multicol-table-right (_ "Date") '()
+              (add-to-table multicol-table-right (G_ "Date") '()
                             #:get-col-header-fn get-col-header-fn
                             #:show-accounts? #f
                             #:show-total? #f)))
 
         (unless (null? asset-accounts)
-          (add-to-table multicol-table-left (_ "Asset") asset-accounts))
+          (add-to-table multicol-table-left (G_ "Asset") asset-accounts))
 
         (unless (null? liability-accounts)
-          (add-to-table multicol-table-right (_ "Liability") liability-accounts
+          (add-to-table multicol-table-right (G_ "Liability") liability-accounts
                         #:negate-amounts? #t))
 
         (add-to-table
-         multicol-table-right (_ "Equity")
+         multicol-table-right (G_ "Equity")
          (append equity-accounts
                  (if common-currency
-                     (list (vector (_ "Unrealized Gains")
+                     (list (vector (G_ "Unrealized Gains")
                                    unrealized-gain-fn))
                      '())
                  (if (null? income-expense)
                      '()
-                     (list (vector (_ "Retained Earnings")
+                     (list (vector (G_ "Retained Earnings")
                                    retained-earnings-fn))))
          #:negate-amounts? #t)
 
         (if (and common-currency show-rates?)
-            (add-to-table multicol-table-right (_ "Exchange Rates")
+            (add-to-table multicol-table-right (G_ "Exchange Rates")
                           asset-liability
                           #:get-col-header-fn get-exchange-rates-fn
                           #:show-accounts? #f
@@ -1136,7 +1136,7 @@
             (gnc:html-document-add-object!
              doc
              (gnc:make-html-text
-              (gnc:html-markup-anchor chart (_ "Barchart")))))))
+              (gnc:html-markup-anchor chart (G_ "Barchart")))))))
 
      ((eq? report-type 'pnl)
       (let* ((closing-str (get-option pagename-entries optname-closing-pattern))
@@ -1239,7 +1239,7 @@
                        (header (gnc:make-html-text
                                 (qof-print-date (car datepair))
                                 (gnc:html-markup-br)
-                                (_ " to ")
+                                (G_ " to ")
                                 (qof-print-date (cdr datepair))))
                        (cell (gnc:make-html-table-cell/markup
                               "total-label-cell" header)))
@@ -1282,33 +1282,33 @@
                                                         get-cell-anchor-fn)))))
 
         (when incr
-          (add-to-table multicol-table-left (_ "Period") '()
+          (add-to-table multicol-table-left (G_ "Period") '()
                         #:get-col-header-fn get-col-header-fn
                         #:show-accounts? #f
                         #:show-total? #f)
           (if enable-dual-columns?
-              (add-to-table multicol-table-right (_ "Period") '()
+              (add-to-table multicol-table-right (G_ "Period") '()
                             #:get-col-header-fn get-col-header-fn
                             #:show-accounts? #f
                             #:show-total? #f)))
 
         (unless (null? income-accounts)
-          (add-to-table multicol-table-left (_ "Income") income-accounts
+          (add-to-table multicol-table-left (G_ "Income") income-accounts
                         #:negate-amounts? #t))
 
         (unless (null? expense-accounts)
-          (add-to-table multicol-table-right (_ "Expense") expense-accounts))
+          (add-to-table multicol-table-right (G_ "Expense") expense-accounts))
 
         (unless (or (null? income-accounts)
                     (null? expense-accounts))
-          (add-to-table multicol-table-left (_ "Net Income")
+          (add-to-table multicol-table-left (G_ "Net Income")
                         income-expense
                         #:show-accounts? #f
                         #:negate-amounts? #t
                         #:force-total? #t))
 
         (if (and common-currency show-rates?)
-            (add-to-table multicol-table-left (_ "Exchange Rates")
+            (add-to-table multicol-table-left (G_ "Exchange Rates")
                           income-expense
                           #:get-col-header-fn get-exchange-rates-fn
                           #:show-accounts? #f
@@ -1337,8 +1337,8 @@
     ;;  doc " table, td{ border-width: 1px; border-style:solid; border-color: lightgray; border-collapse: collapse}")
     doc))
 
-(define balsheet-reportname (_ "Balance Sheet (Multicolumn)"))
-(define pnl-reportname (_ "Income Statement (Multicolumn)"))
+(define balsheet-reportname (G_ "Balance Sheet (Multicolumn)"))
+(define pnl-reportname (G_ "Income Statement (Multicolumn)"))
 
 (gnc:define-report
  'version 1
--- gnucash-3.8b/gnucash/report/standard-reports/general-ledger.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/standard-reports/general-ledger.scm	2020-01-16 23:42:18.570864821 +0000
@@ -150,7 +150,7 @@
   ;; just delegate rendering to the Transaction Report renderer...
   (let ((document ((gnc:report-template-renderer/report-guid xactrptguid xactrptname)
                    report-obj)))
-    (gnc:html-document-set-title! document (_ reportname))
+    (gnc:html-document-set-title! document (G_ reportname))
     document))
 
 (gnc:define-report 
--- gnucash-3.8b/gnucash/report/report-gnome/dialog-report-column-view.c.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/report-gnome/dialog-report-column-view.c	2020-01-16 23:24:49.343914883 +0000
@@ -490,7 +490,7 @@
                 oldlist = SCM_CDR(oldlist);
             }
             newlist = scm_append
-                      (scm_list_n (scm_reverse(scm_cons(SCM_LIST4(new_report,
+                      (scm_list_n (scm_reverse(scm_cons(scm_list_4(new_report,
                                                scm_from_int (1),
                                                scm_from_int (1),
                                                SCM_BOOL_F),
@@ -502,7 +502,7 @@
         {
             newlist = scm_append
                       (scm_list_n (oldlist,
-                                   SCM_LIST1(SCM_LIST4(new_report,
+                                   scm_list_1(scm_list_4(new_report,
                                              scm_from_int (1),
                                              scm_from_int (1),
                                              SCM_BOOL_F)),
@@ -680,7 +680,7 @@
 
         if (dlg_ret == GTK_RESPONSE_OK)
         {
-            current = SCM_LIST4(SCM_CAR(current),
+            current = scm_list_4(SCM_CAR(current),
                                 scm_from_int (gtk_spin_button_get_value_as_int
                                               (GTK_SPIN_BUTTON(colspin))),
                                 scm_from_int (gtk_spin_button_get_value_as_int
--- gnucash-3.8b/gnucash/report/report-gnome/report-gnome.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/report-gnome/report-gnome.scm	2020-01-16 23:32:10.531893832 +0000
@@ -57,7 +57,7 @@
             (template (cdr item))
             (report-guid (gnc:report-template-report-guid template))
             (menu-tip (or (gnc:report-template-menu-tip template)
-                          (format #f (_ "Display the ~a report") (_ menu-name))))
+                          (format #f (G_ "Display the ~a report") (G_ menu-name))))
             (menu-path (append (list gnc:menuname-reports)
                                (or (gnc:report-template-menu-path template)
                                    '()))))
--- gnucash-3.8b/gnucash/report/report-system/report-utilities.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/report-system/report-utilities.scm	2020-01-16 23:31:32.947895626 +0000
@@ -106,24 +106,24 @@
 (define (gnc:account-get-type-string-plural type)
   (assoc-ref
    (list 
-    (cons ACCT-TYPE-BANK (_ "Bank"))
-    (cons ACCT-TYPE-CASH (_ "Cash"))
-    (cons ACCT-TYPE-CREDIT (_ "Credits"))
-    (cons ACCT-TYPE-ASSET (_ "Assets"))
-    (cons ACCT-TYPE-LIABILITY (_ "Liabilities"))
-    (cons ACCT-TYPE-STOCK (_ "Stocks"))
-    (cons ACCT-TYPE-MUTUAL (_ "Mutual Funds"))
-    (cons ACCT-TYPE-CURRENCY (_ "Currencies"))
-    (cons ACCT-TYPE-INCOME (_ "Income"))
-    (cons ACCT-TYPE-EXPENSE (_ "Expenses"))
-    (cons ACCT-TYPE-EQUITY (_ "Equities"))
-    (cons ACCT-TYPE-CHECKING (_ "Checking"))
-    (cons ACCT-TYPE-SAVINGS (_ "Savings"))
-    (cons ACCT-TYPE-MONEYMRKT (_ "Money Market"))
-    (cons ACCT-TYPE-RECEIVABLE (_ "Accounts Receivable"))
-    (cons ACCT-TYPE-PAYABLE (_ "Accounts Payable"))
-    (cons ACCT-TYPE-CREDITLINE (_ "Credit Lines"))
-    (cons ACCT-TYPE-TRADING (_ "Trading Accounts")))
+    (cons ACCT-TYPE-BANK (G_ "Bank"))
+    (cons ACCT-TYPE-CASH (G_ "Cash"))
+    (cons ACCT-TYPE-CREDIT (G_ "Credits"))
+    (cons ACCT-TYPE-ASSET (G_ "Assets"))
+    (cons ACCT-TYPE-LIABILITY (G_ "Liabilities"))
+    (cons ACCT-TYPE-STOCK (G_ "Stocks"))
+    (cons ACCT-TYPE-MUTUAL (G_ "Mutual Funds"))
+    (cons ACCT-TYPE-CURRENCY (G_ "Currencies"))
+    (cons ACCT-TYPE-INCOME (G_ "Income"))
+    (cons ACCT-TYPE-EXPENSE (G_ "Expenses"))
+    (cons ACCT-TYPE-EQUITY (G_ "Equities"))
+    (cons ACCT-TYPE-CHECKING (G_ "Checking"))
+    (cons ACCT-TYPE-SAVINGS (G_ "Savings"))
+    (cons ACCT-TYPE-MONEYMRKT (G_ "Money Market"))
+    (cons ACCT-TYPE-RECEIVABLE (G_ "Accounts Receivable"))
+    (cons ACCT-TYPE-PAYABLE (G_ "Accounts Payable"))
+    (cons ACCT-TYPE-CREDITLINE (G_ "Credit Lines"))
+    (cons ACCT-TYPE-TRADING (G_ "Trading Accounts")))
    type))
 
 ;; Get the list of all different commodities that are used within the
@@ -717,13 +717,13 @@
 
 (define (gnc:report-starting report-name)
   (gnc-window-show-progress (format #f
-				     (_ "Building '~a' report ...")
+				     (G_ "Building '~a' report ...")
 				     (gnc:gettext report-name))
 			    0))
 
 (define (gnc:report-render-starting report-name)
   (gnc-window-show-progress (format #f
-				     (_ "Rendering '~a' report ...")
+				     (G_ "Rendering '~a' report ...")
 				     (if (string-null? report-name)
 					 (gnc:gettext "Untitled")
 					 (gnc:gettext report-name)))
--- gnucash-3.8b/gnucash/report/report-system/html-style-sheet.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/report-system/html-style-sheet.scm	2020-01-16 23:31:04.780896970 +0000
@@ -127,7 +127,7 @@
                (open gnc:current-saved-stylesheets
                      (logior O_WRONLY O_CREAT O_TRUNC)))))
     (if (not port)
-        (gnc:warn (_ "Can't save style sheet"))
+        (gnc:warn (G_ "Can't save style sheet"))
         (begin
           (hash-fold
            (lambda (id ss-obj p)
--- gnucash-3.8b/gnucash/report/report-system/trep-engine.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/report-system/trep-engine.scm	2020-01-16 23:30:52.393897561 +0000
@@ -102,8 +102,8 @@
 (define def:primary-subtotal-style "primary-subheading")
 (define def:secondary-subtotal-style "secondary-subheading")
 
-(define NO-MATCHING-TRANS-HEADER (_ "No matching transactions found"))
-(define NO-MATCHING-TRANS-TEXT (_ "No transactions were found that \
+(define NO-MATCHING-TRANS-HEADER (G_ "No matching transactions found"))
+(define NO-MATCHING-TRANS-TEXT (G_ "No transactions were found that \
 match the time interval and account selection specified \
 in the Options panel."))
 
@@ -118,11 +118,11 @@
   (list 'account-name 'account-code))
 
 (define reconcile-list
-  (list (cons #\n (_ "Unreconciled"))
-        (cons #\c (_ "Cleared"))
-        (cons #\y (_ "Reconciled"))
-        (cons #\f (_ "Frozen"))
-        (cons #\v (_ "Voided"))))
+  (list (cons #\n (G_ "Unreconciled"))
+        (cons #\c (G_ "Cleared"))
+        (cons #\y (G_ "Reconciled"))
+        (cons #\f (G_ "Frozen"))
+        (cons #\v (G_ "Voided"))))
 
 (define (sortkey-list split-action?)
   ;; Defines the different sorting keys, as an association-list
@@ -141,29 +141,29 @@
               (cons 'sortkey (list SPLIT-ACCT-FULLNAME))
               (cons 'split-sortvalue
                     (compose gnc-account-get-full-name xaccSplitGetAccount))
-              (cons 'text (_ "Account Name"))
-              (cons 'tip (_ "Sort & subtotal by account name."))
+              (cons 'text (G_ "Account Name"))
+              (cons 'tip (G_ "Sort & subtotal by account name."))
               (cons 'renderer-fn xaccSplitGetAccount))
 
         (list 'account-code
               (cons 'sortkey (list SPLIT-ACCOUNT ACCOUNT-CODE-))
               (cons 'split-sortvalue (compose xaccAccountGetCode xaccSplitGetAccount))
-              (cons 'text (_ "Account Code"))
-              (cons 'tip (_ "Sort & subtotal by account code."))
+              (cons 'text (G_ "Account Code"))
+              (cons 'tip (G_ "Sort & subtotal by account code."))
               (cons 'renderer-fn xaccSplitGetAccount))
 
         (list 'date
               (cons 'sortkey (list SPLIT-TRANS TRANS-DATE-POSTED))
               (cons 'split-sortvalue (compose xaccTransGetDate xaccSplitGetParent))
-              (cons 'text (_ "Date"))
-              (cons 'tip (_ "Sort by date."))
+              (cons 'text (G_ "Date"))
+              (cons 'tip (G_ "Sort by date."))
               (cons 'renderer-fn #f))
 
         (list 'reconciled-date
               (cons 'sortkey (list SPLIT-DATE-RECONCILED))
               (cons 'split-sortvalue xaccSplitGetDateReconciled)
-              (cons 'text (_ "Reconciled Date"))
-              (cons 'tip (_ "Sort by the Reconciled Date."))
+              (cons 'text (G_ "Reconciled Date"))
+              (cons 'tip (G_ "Sort by the Reconciled Date."))
               (cons 'renderer-fn #f))
 
         (list 'reconciled-status
@@ -171,8 +171,8 @@
               (cons 'split-sortvalue (lambda (s)
                                        (length (memv (xaccSplitGetReconcile s)
                                                      (map car reconcile-list)))))
-              (cons 'text (_ "Reconciled Status"))
-              (cons 'tip (_ "Sort by the Reconciled Status"))
+              (cons 'text (G_ "Reconciled Status"))
+              (cons 'tip (G_ "Sort by the Reconciled Status"))
               (cons 'renderer-fn (lambda (s)
                                    (assv-ref reconcile-list
                                              (xaccSplitGetReconcile s)))))
@@ -180,80 +180,80 @@
         (list 'register-order
               (cons 'sortkey (list QUERY-DEFAULT-SORT))
               (cons 'split-sortvalue #f)
-              (cons 'text (_ "Register Order"))
-              (cons 'tip (_ "Sort as in the register."))
+              (cons 'text (G_ "Register Order"))
+              (cons 'tip (G_ "Sort as in the register."))
               (cons 'renderer-fn #f))
 
         (list 'corresponding-acc-name
               (cons 'sortkey (list SPLIT-CORR-ACCT-NAME))
               (cons 'split-sortvalue xaccSplitGetCorrAccountFullName)
-              (cons 'text (_ "Other Account Name"))
-              (cons 'tip (_ "Sort by account transferred from/to's name."))
+              (cons 'text (G_ "Other Account Name"))
+              (cons 'tip (G_ "Sort by account transferred from/to's name."))
               (cons 'renderer-fn (compose xaccSplitGetAccount xaccSplitGetOtherSplit)))
 
         (list 'corresponding-acc-code
               (cons 'sortkey (list SPLIT-CORR-ACCT-CODE))
               (cons 'split-sortvalue xaccSplitGetCorrAccountCode)
-              (cons 'text (_ "Other Account Code"))
-              (cons 'tip (_ "Sort by account transferred from/to's code."))
+              (cons 'text (G_ "Other Account Code"))
+              (cons 'tip (G_ "Sort by account transferred from/to's code."))
               (cons 'renderer-fn (compose xaccSplitGetAccount xaccSplitGetOtherSplit)))
 
         (list 'amount
               (cons 'sortkey (list SPLIT-VALUE))
               (cons 'split-sortvalue xaccSplitGetValue)
-              (cons 'text (_ "Amount"))
-              (cons 'tip (_ "Sort by amount."))
+              (cons 'text (G_ "Amount"))
+              (cons 'tip (G_ "Sort by amount."))
               (cons 'renderer-fn #f))
 
         (list 'description
               (cons 'sortkey (list SPLIT-TRANS TRANS-DESCRIPTION))
               (cons 'split-sortvalue (compose xaccTransGetDescription
                                               xaccSplitGetParent))
-              (cons 'text (_ "Description"))
-              (cons 'tip (_ "Sort by description."))
+              (cons 'text (G_ "Description"))
+              (cons 'tip (G_ "Sort by description."))
               (cons 'renderer-fn (compose xaccTransGetDescription xaccSplitGetParent)))
 
         (if split-action?
             (list 'number
                   (cons 'sortkey (list SPLIT-ACTION))
                   (cons 'split-sortvalue xaccSplitGetAction)
-                  (cons 'text (_ "Number/Action"))
-                  (cons 'tip (_ "Sort by check number/action."))
+                  (cons 'text (G_ "Number/Action"))
+                  (cons 'tip (G_ "Sort by check number/action."))
                   (cons 'renderer-fn #f))
 
             (list 'number
                   (cons 'sortkey (list SPLIT-TRANS TRANS-NUM))
                   (cons 'split-sortvalue (compose xaccTransGetNum xaccSplitGetParent))
-                  (cons 'text (_ "Number"))
-                  (cons 'tip (_ "Sort by check/transaction number."))
+                  (cons 'text (G_ "Number"))
+                  (cons 'tip (G_ "Sort by check/transaction number."))
                   (cons 'renderer-fn #f)))
 
         (list 't-number
               (cons 'sortkey (list SPLIT-TRANS TRANS-NUM))
               (cons 'split-sortvalue (compose xaccTransGetNum xaccSplitGetParent))
-              (cons 'text (_ "Transaction Number"))
-              (cons 'tip (_ "Sort by transaction number."))
+              (cons 'text (G_ "Transaction Number"))
+              (cons 'tip (G_ "Sort by transaction number."))
               (cons 'renderer-fn #f))
 
         (list 'memo
               (cons 'sortkey (list SPLIT-MEMO))
               (cons 'split-sortvalue xaccSplitGetMemo)
-              (cons 'text (_ "Memo"))
-              (cons 'tip (_ "Sort by memo."))
+              (cons 'text (G_ "Memo"))
+              (cons 'tip (G_ "Sort by memo."))
               (cons 'renderer-fn xaccSplitGetMemo))
 
         (list 'notes
               (cons 'sortkey #f)
               (cons 'split-sortvalue (compose xaccTransGetNotes xaccSplitGetParent))
-              (cons 'text (_ "Notes"))
-              (cons 'tip (_ "Sort by transaction notes."))
+              (cons 'text (G_ "Notes"))
+              (cons 'tip (G_ "Sort by transaction notes."))
               (cons 'renderer-fn (compose xaccTransGetNotes xaccSplitGetParent)))
 
         (list 'none
               (cons 'sortkey '())
               (cons 'split-sortvalue #f)
-              (cons 'text (_ "None"))
-              (cons 'tip (_ "Do not sort."))
+              (cons 'text (G_ "None"))
+              (cons 'tip (G_ "Do not sort."))
               (cons 'renderer-fn #f))))
 
 (define (time64-year t64)
@@ -285,22 +285,22 @@
    (list 'none
          (cons 'split-sortvalue #f)
          (cons 'date-sortvalue #f)
-         (cons 'text (_ "None"))
-         (cons 'tip (_ "None."))
+         (cons 'text (G_ "None"))
+         (cons 'tip (G_ "None."))
          (cons 'renderer-fn #f))
 
    (list 'daily
          (cons 'split-sortvalue (lambda (s) (time64-day (split->time64 s))))
          (cons 'date-sortvalue time64-day)
-         (cons 'text (_ "Daily"))
-         (cons 'tip (_ "Daily."))
+         (cons 'text (G_ "Daily"))
+         (cons 'tip (G_ "Daily."))
          (cons 'renderer-fn (lambda (s) (qof-print-date (split->time64 s)))))
 
    (list 'weekly
          (cons 'split-sortvalue (lambda (s) (time64-week (split->time64 s))))
          (cons 'date-sortvalue time64-week)
-         (cons 'text (_ "Weekly"))
-         (cons 'tip (_ "Weekly."))
+         (cons 'text (G_ "Weekly"))
+         (cons 'tip (G_ "Weekly."))
          (cons 'renderer-fn (compose gnc:date-get-week-year-string
                                      gnc-localtime
                                      split->time64)))
@@ -308,8 +308,8 @@
    (list 'monthly
          (cons 'split-sortvalue (lambda (s) (time64-month (split->time64 s))))
          (cons 'date-sortvalue time64-month)
-         (cons 'text (_ "Monthly"))
-         (cons 'tip (_ "Monthly."))
+         (cons 'text (G_ "Monthly"))
+         (cons 'tip (G_ "Monthly."))
          (cons 'renderer-fn (compose gnc:date-get-month-year-string
                                      gnc-localtime
                                      split->time64)))
@@ -317,8 +317,8 @@
    (list 'quarterly
          (cons 'split-sortvalue (lambda (s) (time64-quarter (split->time64 s))))
          (cons 'date-sortvalue time64-quarter)
-         (cons 'text (_ "Quarterly"))
-         (cons 'tip (_ "Quarterly."))
+         (cons 'text (G_ "Quarterly"))
+         (cons 'tip (G_ "Quarterly."))
          (cons 'renderer-fn (compose gnc:date-get-quarter-year-string
                                      gnc-localtime
                                      split->time64)))
@@ -326,8 +326,8 @@
    (list 'yearly
          (cons 'split-sortvalue (lambda (s) (time64-year (split->time64 s))))
          (cons 'date-sortvalue time64-year)
-         (cons 'text (_ "Yearly"))
-         (cons 'tip (_ "Yearly."))
+         (cons 'text (G_ "Yearly"))
+         (cons 'tip (G_ "Yearly."))
          (cons 'renderer-fn (compose gnc:date-get-year-string
                                      gnc-localtime
                                      split->time64)))))
@@ -335,46 +335,46 @@
 (define filter-list
   (list
    (list 'none
-         (cons 'text (_ "None"))
-         (cons 'tip (_ "Do not do any filtering.")))
+         (cons 'text (G_ "None"))
+         (cons 'tip (G_ "Do not do any filtering.")))
 
    (list 'include
-         (cons 'text (_ "Include Transactions to/from Filter Accounts"))
-         (cons 'tip (_ "Include transactions to/from filter accounts only.")))
+         (cons 'text (G_ "Include Transactions to/from Filter Accounts"))
+         (cons 'tip (G_ "Include transactions to/from filter accounts only.")))
 
    (list 'exclude
-         (cons 'text (_ "Exclude Transactions to/from Filter Accounts"))
-         (cons 'tip (_ "Exclude transactions to/from all filter accounts.")))))
+         (cons 'text (G_ "Exclude Transactions to/from Filter Accounts"))
+         (cons 'tip (G_ "Exclude transactions to/from all filter accounts.")))))
 
 (define show-void-list
   (list
    (list 'non-void-only
-         (cons 'text (_ "Non-void only"))
-         (cons 'tip (_ "Show only non-voided transactions.")))
+         (cons 'text (G_ "Non-void only"))
+         (cons 'tip (G_ "Show only non-voided transactions.")))
 
    (list 'void-only
-         (cons 'text (_ "Void only"))
-         (cons 'tip (_ "Show only voided transactions.")))
+         (cons 'text (G_ "Void only"))
+         (cons 'tip (G_ "Show only voided transactions.")))
 
    (list 'both
-         (cons 'text (_ "Both"))
-         (cons 'tip (_ "Show both (and include void transactions in totals).")))))
+         (cons 'text (G_ "Both"))
+         (cons 'tip (G_ "Show both (and include void transactions in totals).")))))
 
 (define show-closing-list
   (list
    (list 'exclude-closing
-         (cons 'text (_ "Exclude closing transactions"))
-         (cons 'tip (_ "Exclude closing transactions from report."))
+         (cons 'text (G_ "Exclude closing transactions"))
+         (cons 'tip (G_ "Exclude closing transactions from report."))
          (cons 'closing-match #f))
 
    (list 'include-both
-         (cons 'text (_ "Show both closing and regular transactions"))
-         (cons 'tip (_ "Show both (and include closing transactions in totals)."))
+         (cons 'text (G_ "Show both closing and regular transactions"))
+         (cons 'tip (G_ "Show both (and include closing transactions in totals)."))
          (cons 'closing-match 'both))
 
    (list 'closing-only
-         (cons 'text (_ "Show closing transactions only"))
-         (cons 'tip (_ "Show only closing transactions."))
+         (cons 'text (G_ "Show closing transactions only"))
+         (cons 'tip (G_ "Show only closing transactions."))
          (cons 'closing-match #t))))
 
 (define reconcile-status-list
@@ -384,52 +384,52 @@
   ;;      (logior CLEARED-NO CLEARED-CLEARED) for unreconciled & cleared
   (list
    (list 'all
-         (cons 'text (_ "All"))
-         (cons 'tip (_ "Show All Transactions"))
+         (cons 'text (G_ "All"))
+         (cons 'tip (G_ "Show All Transactions"))
          (cons 'filter-types #f))
 
    (list 'unreconciled
-         (cons 'text (_ "Unreconciled"))
-         (cons 'tip (_ "Unreconciled only"))
+         (cons 'text (G_ "Unreconciled"))
+         (cons 'tip (G_ "Unreconciled only"))
          (cons 'filter-types CLEARED-NO))
 
    (list 'cleared
-         (cons 'text (_ "Cleared"))
-         (cons 'tip (_ "Cleared only"))
+         (cons 'text (G_ "Cleared"))
+         (cons 'tip (G_ "Cleared only"))
          (cons 'filter-types CLEARED-CLEARED))
 
    (list 'reconciled
-         (cons 'text (_ "Reconciled"))
-         (cons 'tip (_ "Reconciled only"))
+         (cons 'text (G_ "Reconciled"))
+         (cons 'tip (G_ "Reconciled only"))
          (cons 'filter-types CLEARED-RECONCILED))))
 
 
 (define ascending-list
   (list
    (list 'ascend
-         (cons 'text (_ "Ascending"))
-         (cons 'tip (_ "Smallest to largest, earliest to latest.")))
+         (cons 'text (G_ "Ascending"))
+         (cons 'tip (G_ "Smallest to largest, earliest to latest.")))
    (list 'descend
-         (cons 'text (_ "Descending"))
-         (cons 'tip (_ "Largest to smallest, latest to earliest.")))))
+         (cons 'text (G_ "Descending"))
+         (cons 'tip (G_ "Largest to smallest, latest to earliest.")))))
 
 (define sign-reverse-list
   (list
    (list 'global
-         (cons 'text (_ "Use Global Preference"))
-         (cons 'tip (_ "Use reversing option specified in global preference."))
+         (cons 'text (G_ "Use Global Preference"))
+         (cons 'tip (G_ "Use reversing option specified in global preference."))
          (cons 'acct-types #f))
    (list 'none
-         (cons 'text (_ "None"))
-         (cons 'tip (_ "Don't change any displayed amounts."))
+         (cons 'text (G_ "None"))
+         (cons 'tip (G_ "Don't change any displayed amounts."))
          (cons 'acct-types '()))
    (list 'income-expense
-         (cons 'text (_ "Income and Expense"))
-         (cons 'tip (_ "Reverse amount display for Income and Expense Accounts."))
+         (cons 'text (G_ "Income and Expense"))
+         (cons 'tip (G_ "Reverse amount display for Income and Expense Accounts."))
          (cons 'acct-types (list ACCT-TYPE-INCOME ACCT-TYPE-EXPENSE)))
    (list 'credit-accounts
-         (cons 'text (_ "Credit Accounts"))
-         (cons 'tip (_ "Reverse amount display for Liability, Payable, Equity, \
+         (cons 'text (G_ "Credit Accounts"))
+         (cons 'tip (G_ "Reverse amount display for Liability, Payable, Equity, \
 Credit Card, and Income accounts."))
          (cons 'acct-types (list ACCT-TYPE-LIABILITY ACCT-TYPE-PAYABLE
                                  ACCT-TYPE-EQUITY ACCT-TYPE-CREDIT
@@ -529,7 +529,7 @@
   (gnc:register-trep-option
    (gnc:make-complex-boolean-option
     gnc:pagename-general optname-common-currency
-    "e" (_ "Convert all transactions into a common currency.") #f
+    "e" (G_ "Convert all transactions into a common currency.") #f
     #f
     (lambda (x)
       (gnc-option-db-set-option-selectable-by-name
@@ -543,38 +543,38 @@
   (gnc:register-trep-option
    (gnc:make-simple-boolean-option
     gnc:pagename-general optname-orig-currency
-    "f1" (_ "Also show original currency amounts") #f))
+    "f1" (G_ "Also show original currency amounts") #f))
 
   (gnc:register-trep-option
    (gnc:make-simple-boolean-option
     gnc:pagename-general optname-table-export
-    "g" (_ "Formats the table suitable for cut & paste exporting with extra cells.")
+    "g" (G_ "Formats the table suitable for cut & paste exporting with extra cells.")
     #f))
 
   (gnc:register-trep-option
    (gnc:make-multichoice-option
     gnc:pagename-general optname-infobox-display
-    "h" (_ "Add summary of options.")
+    "h" (G_ "Add summary of options.")
     'no-match
     ;; This is an alist of conditions for displaying the infobox
     ;; 'no-match for empty-report
     ;; 'match for generated report
     (list (vector 'no-match
-                  (_ "If no transactions matched")
-                  (_ "Display summary if no transactions were matched."))
+                  (G_ "If no transactions matched")
+                  (G_ "Display summary if no transactions were matched."))
           (vector 'always
-                  (_ "Always")
-                  (_ "Always display summary."))
+                  (G_ "Always")
+                  (G_ "Always display summary."))
           (vector 'never
-                  (_ "Never")
-                  (_ "Disable report summary.")))))
+                  (G_ "Never")
+                  (G_ "Disable report summary.")))))
 
   ;; Filtering Options
 
   (gnc:register-trep-option
    (gnc:make-string-option
     pagename-filter optname-account-matcher
-    "a5" (_ "Show only accounts whose full name matches this filter e.g. ':Travel' will match \
+    "a5" (G_ "Show only accounts whose full name matches this filter e.g. ':Travel' will match \
 Expenses:Travel:Holiday and Expenses:Business:Travel. It can be left blank, which will \
 disable the filter.")
     ""))
@@ -583,7 +583,7 @@
    (gnc:make-simple-boolean-option
     pagename-filter optname-account-matcher-regex
     "a6"
-    (_ "By default the account filter will search substring only. Set this to true to \
+    (G_ "By default the account filter will search substring only. Set this to true to \
 enable full POSIX regular expressions capabilities. 'Car|Flights' will match both \
 Expenses:Car and Expenses:Flights. Use a period (.) to match a single character e.g. \
 '20../.' will match 'Travel 2017/1 London'. ")
@@ -592,7 +592,7 @@
   (gnc:register-trep-option
    (gnc:make-string-option
     pagename-filter optname-transaction-matcher
-    "i1" (_ "Show only transactions where description, notes, or memo matches this filter.
+    "i1" (G_ "Show only transactions where description, notes, or memo matches this filter.
 e.g. '#gift' will find all transactions with #gift in description, notes or memo. It can be left \
 blank, which will disable the filter.")
     ""))
@@ -601,7 +601,7 @@
    (gnc:make-simple-boolean-option
     pagename-filter optname-transaction-matcher-regex
     "i2"
-    (_ "By default the transaction filter will search substring only. Set this to true to \
+    (G_ "By default the transaction filter will search substring only. Set this to true to \
 enable full POSIX regular expressions capabilities. '#work|#family' will match both \
 tags within description, notes or memo. ")
     #f))
@@ -610,13 +610,13 @@
    (gnc:make-simple-boolean-option
     pagename-filter optname-transaction-matcher-exclude
     "i3"
-    (_ "If this option is selected, transactions matching filter are excluded.")
+    (G_ "If this option is selected, transactions matching filter are excluded.")
     #f))
 
   (gnc:register-trep-option
    (gnc:make-multichoice-option
     pagename-filter optname-reconcile-status
-    "j1" (_ "Filter by reconcile status.")
+    "j1" (G_ "Filter by reconcile status.")
     'all
     (keylist->vectorlist reconcile-status-list)))
 
@@ -630,7 +630,7 @@
   (gnc:register-trep-option
    (gnc:make-multichoice-option
     pagename-filter optname-closing-transactions
-    "l" (_ "By default most users should not include closing \
+    "l" (G_ "By default most users should not include closing \
 transactions in a transaction report. Closing transactions are \
 transfers from income and expense accounts to equity, and must usually \
 be excluded from periodic reporting.")
@@ -643,7 +643,7 @@
   (gnc:register-trep-option
    (gnc:make-account-list-option
     gnc:pagename-accounts optname-accounts
-    "a" (_ "Report on these accounts.")
+    "a" (G_ "Report on these accounts.")
     ;; select, by default, no accounts! Selecting all accounts will
     ;; always imply an insanely long waiting time upon opening, and it
     ;; is almost never useful. So we instead display the normal error
@@ -656,7 +656,7 @@
   (gnc:register-trep-option
    (gnc:make-account-list-option
     gnc:pagename-accounts optname-filterby
-    "c1" (_ "Filter on these accounts.")
+    "c1" (G_ "Filter on these accounts.")
     (lambda ()
       '())
     #f #t))
@@ -664,7 +664,7 @@
   (gnc:register-trep-option
    (gnc:make-multichoice-callback-option
     gnc:pagename-accounts optname-filtertype
-    "c" (_ "Filter account.")
+    "c" (G_ "Filter account.")
     'none
     (keylist->vectorlist filter-list)
     #f
@@ -757,7 +757,7 @@
     (gnc:register-trep-option
      (gnc:make-multichoice-callback-option
       pagename-sorting optname-prime-sortkey
-      "a" (_ "Sort by this criterion first.")
+      "a" (G_ "Sort by this criterion first.")
       prime-sortkey
       key-choice-list #f
       (lambda (x)
@@ -768,49 +768,49 @@
      (gnc:make-simple-boolean-option
       pagename-sorting optname-full-account-name
       "j1"
-      (_ "Show the full account name for subtotals and subheadings?")
+      (G_ "Show the full account name for subtotals and subheadings?")
       #f))
 
     (gnc:register-trep-option
      (gnc:make-simple-boolean-option
       pagename-sorting optname-show-account-code
       "j2"
-      (_ "Show the account code for subtotals and subheadings?")
+      (G_ "Show the account code for subtotals and subheadings?")
       #f))
 
     (gnc:register-trep-option
      (gnc:make-simple-boolean-option
       pagename-sorting optname-show-account-description
       "j3"
-      (_ "Show the account description for subheadings?")
+      (G_ "Show the account description for subheadings?")
       #f))
 
     (gnc:register-trep-option
      (gnc:make-simple-boolean-option
       pagename-sorting optname-show-informal-headers
       "j4"
-      (_ "Show the informal headers for debit/credit accounts?")
+      (G_ "Show the informal headers for debit/credit accounts?")
       #f))
 
     (gnc:register-trep-option
      (gnc:make-simple-boolean-option
       pagename-sorting optname-indenting
       "j5"
-      (_ "Add indenting columns with grouping and subtotals?")
+      (G_ "Add indenting columns with grouping and subtotals?")
       #t))
 
     (gnc:register-trep-option
      (gnc:make-simple-boolean-option
       pagename-sorting optname-show-subtotals-only
       "j6"
-      (_ "Show subtotals only, hiding transactional detail?")
+      (G_ "Show subtotals only, hiding transactional detail?")
       #f))
 
     (gnc:register-trep-option
      (gnc:make-complex-boolean-option
       pagename-sorting optname-prime-subtotal
       "e5"
-      (_ "Subtotal according to the primary key?")
+      (G_ "Subtotal according to the primary key?")
       prime-sortkey-subtotal-true #f
       (lambda (x)
         (set! prime-sortkey-subtotal-true x)
@@ -819,7 +819,7 @@
     (gnc:register-trep-option
      (gnc:make-multichoice-callback-option
       pagename-sorting optname-prime-date-subtotal
-      "e2" (_ "Do a date subtotal.")
+      "e2" (G_ "Do a date subtotal.")
       prime-date-subtotal
       date-subtotal-choice-list #f
       (lambda (x)
@@ -829,7 +829,7 @@
     (gnc:register-trep-option
      (gnc:make-multichoice-option
       pagename-sorting optname-prime-sortorder
-      "e" (_ "Order of primary sorting.")
+      "e" (G_ "Order of primary sorting.")
       'ascend
       ascending-choice-list))
 
@@ -838,7 +838,7 @@
      (gnc:make-multichoice-callback-option
       pagename-sorting optname-sec-sortkey
       "f"
-      (_ "Sort by this criterion second.")
+      (G_ "Sort by this criterion second.")
       sec-sortkey
       key-choice-list #f
       (lambda (x)
@@ -849,7 +849,7 @@
      (gnc:make-complex-boolean-option
       pagename-sorting optname-sec-subtotal
       "i5"
-      (_ "Subtotal according to the secondary key?")
+      (G_ "Subtotal according to the secondary key?")
       sec-sortkey-subtotal-true #f
       (lambda (x)
         (set! sec-sortkey-subtotal-true x)
@@ -858,7 +858,7 @@
     (gnc:register-trep-option
      (gnc:make-multichoice-callback-option
       pagename-sorting optname-sec-date-subtotal
-      "i2" (_ "Do a date subtotal.")
+      "i2" (G_ "Do a date subtotal.")
       sec-date-subtotal
       date-subtotal-choice-list #f
       (lambda (x)
@@ -868,7 +868,7 @@
     (gnc:register-trep-option
      (gnc:make-multichoice-option
       pagename-sorting optname-sec-sortorder
-      "i" (_ "Order of Secondary sorting.")
+      "i" (G_ "Order of Secondary sorting.")
       'ascend
       ascending-choice-list)))
 
@@ -921,38 +921,38 @@
      ;; One list per option here with: option-name, sort-tag,
      ;; help-string, default-value
      (list
-      (list (N_ "Date")                         "a"  (_ "Display the date?") #t)
-      (list (N_ "Reconciled Date")              "a2" (_ "Display the reconciled date?") #f)
+      (list (N_ "Date")                         "a"  (G_ "Display the date?") #t)
+      (list (N_ "Reconciled Date")              "a2" (G_ "Display the reconciled date?") #f)
       (if BOOK-SPLIT-ACTION
-          (list (N_ "Num/Action")               "b"  (_ "Display the check number?") #t)
-          (list (N_ "Num")                      "b"  (_ "Display the check number?") #t))
-      (list (N_ "Description")                  "c"  (_ "Display the description?") #t)
-      (list (N_ "Notes")                        "d2" (_ "Display the notes if the memo is unavailable?") #t)
+          (list (N_ "Num/Action")               "b"  (G_ "Display the check number?") #t)
+          (list (N_ "Num")                      "b"  (G_ "Display the check number?") #t))
+      (list (N_ "Description")                  "c"  (G_ "Display the description?") #t)
+      (list (N_ "Notes")                        "d2" (G_ "Display the notes if the memo is unavailable?") #t)
       ;; account name option appears here
-      (list (N_ "Use Full Account Name")        "f"  (_ "Display the full account name?") #t)
-      (list (N_ "Account Code")                 "g"  (_ "Display the account code?") #f)
+      (list (N_ "Use Full Account Name")        "f"  (G_ "Display the full account name?") #t)
+      (list (N_ "Account Code")                 "g"  (G_ "Display the account code?") #f)
       ;; other account name option appears here
-      (list (N_ "Use Full Other Account Name")  "i"  (_ "Display the full account name?") #f)
-      (list (N_ "Other Account Code")           "j"  (_ "Display the other account code?") #f)
-      (list (N_ "Shares")                       "k"  (_ "Display the number of shares?") #f)
-      (list (N_ "Price")                        "l"  (_ "Display the shares price?") #f)
+      (list (N_ "Use Full Other Account Name")  "i"  (G_ "Display the full account name?") #f)
+      (list (N_ "Other Account Code")           "j"  (G_ "Display the other account code?") #f)
+      (list (N_ "Shares")                       "k"  (G_ "Display the number of shares?") #f)
+      (list (N_ "Price")                        "l"  (G_ "Display the shares price?") #f)
       ;; note the "Amount" multichoice option in between here
-      (list optname-grid                        "m5" (_ "Display a subtotal summary table. This requires Display/Amount being 'single") #f)
-      (list (N_ "Running Balance")              "n"  (_ "Display a running balance?") #f)
-      (list (N_ "Totals")                       "o"  (_ "Display the totals?") #t)))
+      (list optname-grid                        "m5" (G_ "Display a subtotal summary table. This requires Display/Amount being 'single") #f)
+      (list (N_ "Running Balance")              "n"  (G_ "Display a running balance?") #f)
+      (list (N_ "Totals")                       "o"  (G_ "Display the totals?") #t)))
 
     (when BOOK-SPLIT-ACTION
       (gnc:register-trep-option
        (gnc:make-simple-boolean-option
         gnc:pagename-display (N_ "Trans Number")
-        "b2" (_ "Display the trans number?") #f)))
+        "b2" (G_ "Display the trans number?") #f)))
 
     ;; Add an option to display the memo, and disable the notes option
     ;; when memos are not included.
     (gnc:register-trep-option
      (gnc:make-complex-boolean-option
       gnc:pagename-display (N_ "Memo")
-      "d"  (_ "Display the memo?") #t
+      "d"  (G_ "Display the memo?") #t
       disp-memo?
       (lambda (x)
         (set! disp-memo? x)
@@ -962,7 +962,7 @@
     (gnc:register-trep-option
      (gnc:make-complex-boolean-option
       gnc:pagename-display (N_ "Account Name")
-      "e"  (_ "Display the account name?") #t
+      "e"  (G_ "Display the account name?") #t
       disp-accname?
       (lambda (x)
         (set! disp-accname? x)
@@ -972,7 +972,7 @@
     (gnc:register-trep-option
      (gnc:make-complex-boolean-option
       gnc:pagename-display (N_ "Other Account Name")
-      "h5"  (_ "Display the other account name? (if this is a split transaction, this parameter is guessed).") #f
+      "h5"  (G_ "Display the other account name? (if this is a split transaction, this parameter is guessed).") #f
       disp-other-accname?
       (lambda (x)
         (set! disp-other-accname? x)
@@ -981,14 +981,14 @@
     (gnc:register-trep-option
      (gnc:make-multichoice-callback-option
       gnc:pagename-display optname-detail-level
-      "h" (_ "Amount of detail to display per transaction.")
+      "h" (G_ "Amount of detail to display per transaction.")
       'single
       (list (vector 'multi-line
-                    (_ "Multi-Line")
-                    (_ "Display all splits in a transaction on a separate line."))
+                    (G_ "Multi-Line")
+                    (G_ "Display all splits in a transaction on a separate line."))
             (vector 'single
-                    (_ "Single")
-                    (_ "Display one line per transaction, merging multiple splits where required.")))
+                    (G_ "Single")
+                    (G_ "Display one line per transaction, merging multiple splits where required.")))
       #f
       (lambda (x)
         (set! detail-is-single? (eq? x 'single))
@@ -997,12 +997,12 @@
     (gnc:register-trep-option
      (gnc:make-multichoice-callback-option
       gnc:pagename-display (N_ "Amount")
-      "m" (_ "Display the amount?")
+      "m" (G_ "Display the amount?")
       amount-value
       (list
-       (vector 'none   (_ "None") (_ "No amount display."))
-       (vector 'single (_ "Single") (_ "Single Column Display."))
-       (vector 'double (_ "Double") (_ "Two Column Display.")))
+       (vector 'none   (G_ "None") (G_ "No amount display."))
+       (vector 'single (G_ "Single") (G_ "Single Column Display."))
+       (vector 'double (G_ "Double") (G_ "Two Column Display.")))
       #f
       (lambda (x)
         (set! amount-value x)
@@ -1011,12 +1011,12 @@
     (gnc:register-trep-option
      (gnc:make-simple-boolean-option
       gnc:pagename-display (N_ "Enable links")
-      "m2" (_ "Enable hyperlinks in amounts.") #t))
+      "m2" (G_ "Enable hyperlinks in amounts.") #t))
 
     (gnc:register-trep-option
      (gnc:make-multichoice-option
       gnc:pagename-display (N_ "Sign Reverses")
-      "m1" (_ "Reverse amount display for certain account types.")
+      "m1" (G_ "Reverse amount display for certain account types.")
       'global
       (keylist->vectorlist sign-reverse-list))))
 
@@ -1128,7 +1128,7 @@
              (left-cols-list
               (append
                (add-if (column-uses? 'date)
-                       (vector (_ "Date")
+                       (vector (G_ "Date")
                                (lambda (split transaction-row?)
                                  (and transaction-row?
                                       (gnc:make-html-table-cell/markup
@@ -1138,7 +1138,7 @@
                                          (xaccSplitGetParent split))))))))
 
                (add-if (column-uses? 'reconciled-date)
-                       (vector (_ "Reconciled Date")
+                       (vector (G_ "Reconciled Date")
                                (lambda (split transaction-row?)
                                  (let ((reconcile-date
                                         (and (char=? (xaccSplitGetReconcile split) #\y)
@@ -1152,8 +1152,8 @@
                        (vector (if (and BOOK-SPLIT-ACTION
                                         (opt-val gnc:pagename-display
                                                  (N_ "Trans Number")))
-                                   (_ "Num/T-Num")
-                                   (_ "Num"))
+                                   (G_ "Num/T-Num")
+                                   (G_ "Num"))
                                (lambda (split transaction-row?)
                                  (let* ((trans (xaccSplitGetParent split))
                                         (num (gnc-get-num-action trans split))
@@ -1171,7 +1171,7 @@
                                          "text-cell" num-string))))))
 
                (add-if (column-uses? 'description)
-                       (vector (_ "Description")
+                       (vector (G_ "Description")
                                (lambda (split transaction-row?)
                                  (define trans (xaccSplitGetParent split))
                                  (and transaction-row?
@@ -1181,8 +1181,8 @@
 
                (add-if (column-uses? 'memo)
                        (vector (if (column-uses? 'notes)
-                                   (string-append (_ "Memo") "/" (_ "Notes"))
-                                   (_ "Memo"))
+                                   (string-append (G_ "Memo") "/" (G_ "Notes"))
+                                   (G_ "Memo"))
                                (lambda (split transaction-row?)
                                  (define trans (xaccSplitGetParent split))
                                  (define memo (xaccSplitGetMemo split))
@@ -1191,7 +1191,7 @@
                                      memo))))
 
                (add-if (or (column-uses? 'account-name) (column-uses? 'account-code))
-                       (vector (_ "Account")
+                       (vector (G_ "Account")
                                (lambda (split transaction-row?)
                                  (account-namestring
                                   (xaccSplitGetAccount split)
@@ -1201,7 +1201,7 @@
 
                (add-if (or (column-uses? 'other-account-name)
                            (column-uses? 'other-account-code))
-                       (vector (_ "Transfer from/to")
+                       (vector (G_ "Transfer from/to")
                                (lambda (split transaction-row?)
                                  (and (< 1 (xaccTransCountSplits
                                             (xaccSplitGetParent split)))
@@ -1213,14 +1213,14 @@
                                        (column-uses? 'other-account-full-name))))))
 
                (add-if (column-uses? 'shares)
-                       (vector (_ "Shares")
+                       (vector (G_ "Shares")
                                (lambda (split transaction-row?)
                                  (gnc:make-html-table-cell/markup
                                   "number-cell"
                                   (xaccSplitGetAmount split)))))
 
                (add-if (column-uses? 'price)
-                       (vector (_ "Price")
+                       (vector (G_ "Price")
                                (lambda (split transaction-row?)
                                  ;; share price is retrieved as an
                                  ;; exact rational; convert for
@@ -1317,39 +1317,39 @@
          ;;                             friendly name for account debit/credit
 
          (if (column-uses? 'amount-single)
-             (list (vector (header-commodity (_ "Amount"))
+             (list (vector (header-commodity (G_ "Amount"))
                            converted-amount #t #t #f
                            (lambda (a) "")))
              '())
 
          (if (column-uses? 'amount-double)
-             (list (vector (header-commodity (_ "Debit"))
+             (list (vector (header-commodity (G_ "Debit"))
                            converted-debit-amount #f #t #t
                            friendly-debit)
-                   (vector (header-commodity (_ "Credit"))
+                   (vector (header-commodity (G_ "Credit"))
                            converted-credit-amount #f #t #f
                            friendly-credit))
              '())
 
          (if (and (column-uses? 'amount-original-currency)
                   (column-uses? 'amount-single))
-             (list (vector (_ "Amount")
+             (list (vector (G_ "Amount")
                            original-amount #t #t #f
                            (lambda (a) "")))
              '())
 
          (if (and (column-uses? 'amount-original-currency)
                   (column-uses? 'amount-double))
-             (list (vector (_ "Debit")
+             (list (vector (G_ "Debit")
                            original-debit-amount #f #t #t
                            friendly-debit)
-                   (vector (_ "Credit")
+                   (vector (G_ "Credit")
                            original-credit-amount #f #t #f
                            friendly-credit))
              '())
 
          (if (column-uses? 'running-balance)
-             (list (vector (_ "Running Balance")
+             (list (vector (G_ "Running Balance")
                            running-balance #t #f #f
                            (lambda (a) "")))
              '()))))
@@ -1528,7 +1528,7 @@
               (data-columns (car list-of-commodities))))
             (loop "" (cdr list-of-commodities))))))
 
-    (define (total-string str) (string-append (_ "Total For ") str))
+    (define (total-string str) (string-append (G_ "Total For ") str))
 
     ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     ;; renderers
@@ -1539,7 +1539,7 @@
                                 show-account-name? show-account-full-name?)
       ;;# on multi-line splits we can get an empty ('()) account
       (if (null? account)
-          (_ "Split Transaction")
+          (G_ "Split Transaction")
           (with-output-to-string
             (lambda ()
               (when show-account-code?
@@ -1597,7 +1597,7 @@
           (render-generic sortkey split)))))
 
     (define (render-grand-total)
-      (_ "Grand Total"))
+      (G_ "Grand Total"))
 
     ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     ;; add-split-row
@@ -1870,7 +1870,7 @@
     (append
      (list (cond
             ((positive? commodity-idx) "")
-            ((eq? row 'row-total) (_ "Grand Total"))
+            ((eq? row 'row-total) (G_ "Grand Total"))
             (else (cdr row))))
      (map (lambda (col) (make-table-cell row col commodity-idx 1))
           list-of-cols)
@@ -1884,8 +1884,8 @@
     (gnc:html-table-set-col-headers!
      table (append (list "")
                    (map cdr list-of-cols)
-                   (list (_ "Total"))
-                   (if row-average-enabled? (list (_ "Average")) '())))
+                   (list (G_ "Total"))
+                   (if row-average-enabled? (list (G_ "Average")) '())))
     (gnc:html-table-set-style!
      table "th"
      'attribute (list "class" "column-heading-right"))
@@ -2074,13 +2074,13 @@
         ((symbol? account-matcher-regexp)
          (gnc:html-make-generic-warning
           report-title (gnc:report-id report-obj)
-          (string-append (_ "Error") " " (symbol->string account-matcher-regexp))
+          (string-append (G_ "Error") " " (symbol->string account-matcher-regexp))
           ""))
 
         ((symbol? transaction-matcher-regexp)
          (gnc:html-make-generic-warning
           report-title (gnc:report-id report-obj)
-          (string-append (_ "Error") " " (symbol->string transaction-matcher-regexp))
+          (string-append (G_ "Error") " " (symbol->string transaction-matcher-regexp))
           ""))))
 
       ;; if an empty-report-message is passed by a derived report to
@@ -2182,7 +2182,7 @@
            (gnc:make-html-text
             (gnc:html-markup-h3
              (format #f
-                     (_ "From ~a to ~a")
+                     (G_ "From ~a to ~a")
                      (qof-print-date begindate)
                      (qof-print-date enddate)))))
 
@@ -2227,8 +2227,8 @@
                       ;; Translators: ~a error type, ~a filename, ~s error details
                       (let ((fmt (N_ "error ~a during csv output to ~a: ~s")))
                         (gnc:gui-error (format #f fmt key filename args)
-                                       (format #f (_ fmt) key filename args)))))
-                  (gnc:gui-error csvlist (_ csvlist))))))
+                                       (format #f (G_ fmt) key filename args)))))
+                  (gnc:gui-error csvlist (G_ csvlist))))))
 
           (unless (and subtotal-table?
                        (opt-val pagename-sorting optname-show-subtotals-only))
--- gnucash-3.8b/gnucash/report/report-system/html-acct-table.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/report-system/html-acct-table.scm	2020-01-16 23:30:15.728899310 +0000
@@ -597,13 +597,13 @@
 	 (balance-mode (or (get-val env 'balance-mode) 'post-closing))
 	 (closing-pattern (or (get-val env 'closing-pattern)
 			      (list
-			       (list 'str (_ "Closing Entries"))
+			       (list 'str (G_ "Closing Entries"))
 			       (list 'cased #f)
 			       (list 'regexp #f)
 			       (list 'closing #t))))
 	 (adjusting-pattern (or (get-val env 'adjusting-pattern)
 				(list
-				 (list 'str (_ "Adjusting Entries"))
+				 (list 'str (G_ "Adjusting Entries"))
 				 (list 'cased #f)
 				 (list 'regexp #f))))
 	 (report-budget (or (get-val env 'report-budget) #f))
@@ -796,7 +796,7 @@
                         (not children-displayed?)
                         (and (gnc-commodity-collector-allzero? recursive-bal)
                              (eq? zero-mode 'omit-leaf-acct)))
-              (let ((lbl-txt (gnc:make-html-text (_ "Total") " ")))
+              (let ((lbl-txt (gnc:make-html-text (G_ "Total") " ")))
                 (apply gnc:html-text-append! lbl-txt (gnc:html-text-body label))
                 (if (eq? subtotal-mode 'canonically-tabbed)
                     (set! disp-depth (+ disp-depth 1))
--- gnucash-3.8b/gnucash/report/report-system/eguile-gnc.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/report-system/eguile-gnc.scm	2020-01-16 23:29:48.247900621 +0000
@@ -199,7 +199,7 @@
   ; Error handler to display any errors while evaluating the template
   (define (error-handler key subr message args . rest)
     (display "<p>")
-    (display (_ "An error occurred when processing the template:"))
+    (display (G_ "An error occurred when processing the template:"))
     (display "<br><pre>")
     (display
       (escape-html
@@ -252,7 +252,7 @@
 (define (eguile-file-to-string infile environment)
   (cond
    ((not (access? infile R_OK))
-    (format #f (_ "Template file \"~a\" can not be read") infile))
+    (format #f (G_ "Template file \"~a\" can not be read") infile))
    (else
     (let ((script (with-input-from-file infile
                     (lambda ()
--- gnucash-3.8b/gnucash/report/report-system/html-utilities.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/report-system/html-utilities.scm	2020-01-16 23:31:19.096896286 +0000
@@ -606,7 +606,7 @@
 	      (remove-last-empty-row) ;; FIXME: do this here or not?
 	      (add-subtotal-row! 
 	       current-depth 
-	       (let ((total-text (gnc:make-html-text (_ "Total") " ")))
+	       (let ((total-text (gnc:make-html-text (G_ "Total") " ")))
 		 (if (gnc:html-text? groupname)
 		     (apply gnc:html-text-append! 
 			    total-text
@@ -709,12 +709,12 @@
 	(gnc:html-table-set-col-headers!
 	 table 
 	 (list (gnc:make-html-table-header-cell/size 
-		1 tree-depth (_ "Account name"))
+		1 tree-depth (G_ "Account name"))
 	       (gnc:make-html-table-header-cell/size
 		1 (if show-other-curr? 
 		      (* 2 tree-depth)
 		      tree-depth)
-		(_ "Balance")))))
+		(G_ "Balance")))))
 
     ;; No extra alignment here because that's already done in
     ;; html-acct-table-cell.
@@ -741,15 +741,15 @@
       (gnc:html-table-set-col-headers!
        table (list (gnc:make-html-table-header-cell/size
                     1 2 (if (null? (cdr comm-list))
-                            (_ "Exchange rate")
-                            (_ "Exchange rates"))))))
+                            (G_ "Exchange rate")
+                            (G_ "Exchange rates"))))))
     table))
 
 
 (define (gnc:html-make-generic-budget-warning report-title-string)
   (gnc:html-make-generic-simple-warning
     report-title-string
-    (_ "No budgets exist. You must create at least one budget.")))
+    (G_ "No budgets exist. You must create at least one budget.")))
 
 
 (define (gnc:html-make-generic-simple-warning report-title-string message)
@@ -769,7 +769,7 @@
       (gnc-build-url URL-TYPE-OPTIONS
        (string-append "report-id=" (format #f "~a" report-id))
        "")
-      (_ "Edit report options")))))
+      (G_ "Edit report options")))))
 
 (define* (gnc:html-render-options-changed options #:optional plaintext?)
   ;; options -> html-object or string, depending on plaintext?.  This
@@ -785,7 +785,7 @@
       (catch 'wrong-type-arg
         (lambda () (proc d))
         (const #f)))
-    (or (and (boolean? d) (if d (_ "Enabled") (_ "Disabled")))
+    (or (and (boolean? d) (if d (G_ "Enabled") (G_ "Disabled")))
         (and (null? d) "null")
         (and (list? d) (string-join (map disp d) ", "))
         (and (pair? d) (format #f "~a . ~a"
@@ -836,7 +836,7 @@
   (let ((p (gnc:make-html-text)))
    (gnc:html-text-append!
     p
-    (gnc:html-markup-h2 (string-append (_ report-title-string) ":"))
+    (gnc:html-markup-h2 (string-append (G_ report-title-string) ":"))
     (gnc:html-markup-h2 warning-title-string)
     (gnc:html-markup-p warning-string)
     (gnc:html-make-options-link report-id))
@@ -848,23 +848,23 @@
     report-title-string
     report-id
     ""
-    (_ "This report requires you to specify certain report options.")))
+    (G_ "This report requires you to specify certain report options.")))
 
 (define (gnc:html-make-no-account-warning
          report-title-string report-id)
   (gnc:html-make-generic-warning
     report-title-string
     report-id
-    (_ "No accounts selected")
-    (_ "This report requires accounts to be selected in the report options.")))
+    (G_ "No accounts selected")
+    (G_ "This report requires accounts to be selected in the report options.")))
 
 (define (gnc:html-make-empty-data-warning
          report-title-string report-id)
   (gnc:html-make-generic-warning
     report-title-string
     report-id
-    (_ "No data")
-    (_ "The selected accounts contain no data/transactions (or only zeroes) for the selected time period")))
+    (G_ "No data")
+    (G_ "The selected accounts contain no data/transactions (or only zeroes) for the selected time period")))
 
 (define (gnc:html-js-include file)
   (format #f
--- gnucash-3.8b/gnucash/report/report-system/report.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/report-system/report.scm	2020-01-16 23:31:40.723895255 +0000
@@ -89,13 +89,13 @@
 
 ;; define strings centrally to ease code clarity
 (define rpterr-dupe
-  (_ "One of your reports has a report-guid that is a duplicate. Please check the report system, especially your saved reports, for a report with this report-guid: "))
+  (G_ "One of your reports has a report-guid that is a duplicate. Please check the report system, especially your saved reports, for a report with this report-guid: "))
 (define rpterr-upgraded
-  (_ "The GnuCash report system has been upgraded. Your old saved reports have been transferred into a new format. If you experience trouble with saved reports, please contact the GnuCash development team."))
-(define rpterr-guid1 (_ "Wrong report definition: "))
-(define rpterr-guid2 (_ " Report is missing a GUID."))
+  (G_ "The GnuCash report system has been upgraded. Your old saved reports have been transferred into a new format. If you experience trouble with saved reports, please contact the GnuCash development team."))
+(define rpterr-guid1 (G_ "Wrong report definition: "))
+(define rpterr-guid2 (G_ " Report is missing a GUID."))
 (define rptwarn-legacy
-  (_ "Some reports stored in a legacy format were found. This format is not supported anymore so these reports may not have been restored properly."))
+  (G_ "Some reports stored in a legacy format were found. This format is not supported anymore so these reports may not have been restored properly."))
 (define (gui-error str)
   (if (gnucash-ui-is-running)
       (gnc-error-dialog '() str)
@@ -255,7 +255,7 @@
          (gnc:make-string-option
           gnc:pagename-general gnc:optname-reportname "0a"
           (N_ "Enter a descriptive name for this report.")
-          (_ (gnc:report-template-name report-template))))
+          (G_ (gnc:report-template-name report-template))))
         (stylesheet
          (gnc:make-multichoice-option
           gnc:pagename-general gnc:optname-stylesheet "0b"
@@ -267,7 +267,7 @@
               (string->symbol (gnc:html-style-sheet-name ss))
               (gnc:html-style-sheet-name ss)
               (string-append (gnc:html-style-sheet-name ss)
-                             " " (_ "stylesheet."))))
+                             " " (G_ "stylesheet."))))
            (gnc:get-html-style-sheets)))))
 
     (let ((options (if (procedure? generator)
--- gnucash-3.8b/gnucash/report/stylesheets/stylesheet-footer.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/stylesheets/stylesheet-footer.scm	2020-01-16 23:46:03.434854092 +0000
@@ -374,13 +374,13 @@
              (gnc:make-html-text
               (gnc:html-markup-h3 headline)
               (gnc:html-markup-br)
-              (_ "Prepared by: ")
+              (G_ "Prepared by: ")
               (gnc:html-markup-b preparer)
               (gnc:html-markup-br)
-              (_ "Prepared for: ")
+              (G_ "Prepared for: ")
               (gnc:html-markup-b prepared-for)
               (gnc:html-markup-br)
-              (_ "Date: ")
+              (G_ "Date: ")
               (qof-print-date
                (current-time)))
 
--- gnucash-3.8b/gnucash/report/stylesheets/stylesheet-head-or-tail.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/stylesheets/stylesheet-head-or-tail.scm	2020-01-16 23:46:09.785853789 +0000
@@ -430,7 +430,7 @@
              ;; print preparer info as additional header info
              (gnc:make-html-text
               (gnc:html-markup-i
-               (_ "Prepared by: ")
+               (G_ "Prepared by: ")
                (gnc:html-markup-b preparer))
               (gnc:html-markup-br))
              " ")
@@ -438,7 +438,7 @@
              ;; print receiver info as additional header info
              (gnc:make-html-text
               (gnc:html-markup-i
-               (_ "Prepared for: ")
+               (G_ "Prepared for: ")
                (gnc:html-markup-b prepared-for)
                (gnc:html-markup-br)))
              " ")
@@ -447,14 +447,14 @@
              (if show-time?
                  (gnc:make-html-text
                   (gnc:html-markup-i
-                   (_ "Report Creation Date: ")
+                   (G_ "Report Creation Date: ")
                    (qof-print-date (gnc:get-today))
                    " "
                    (gnc-print-time64 (current-time) "%X %Z"))
                   (gnc:html-markup-br))
                  (gnc:make-html-text
                   (gnc:html-markup-i
-                   (_ "Report Creation Date: ")
+                   (G_ "Report Creation Date: ")
                    (qof-print-date (gnc:get-today)))
                   (gnc:html-markup-br)))
              " ")
@@ -524,7 +524,7 @@
            ;; print preparer info as additional header info
            (gnc:make-html-text
             (gnc:html-markup-i
-             (_ "Prepared by: ")
+             (G_ "Prepared by: ")
              (gnc:html-markup-b preparer))
             (gnc:html-markup-br))
            " ")
@@ -532,7 +532,7 @@
            ;; print receiver info as additional header info
            (gnc:make-html-text
             (gnc:html-markup-i
-             (_ "Prepared for: ")
+             (G_ "Prepared for: ")
              (gnc:html-markup-b prepared-for))
             (gnc:html-markup-br))
            " ")
@@ -541,14 +541,14 @@
            (if show-time?
                (gnc:make-html-text
                 (gnc:html-markup-i
-                 (_ "Report Creation Date: ")
+                 (G_ "Report Creation Date: ")
                  (qof-print-date (gnc:get-today))
                  " "
                  (gnc-print-time64 (current-time) "%X %Z"))
                 (gnc:html-markup-br))
                (gnc:make-html-text
                 (gnc:html-markup-i
-                 (_ "Report Creation Date: ")
+                 (G_ "Report Creation Date: ")
                  (qof-print-date (gnc:get-today))
                  (gnc:html-markup-br))))
            " ")
@@ -556,7 +556,7 @@
            ;; print the GnuCash version string as additional header info
            (gnc:make-html-text
             (gnc:html-markup-i
-             (_ "GnuCash ")
+             (G_ "GnuCash ")
              gnc:version)
             (gnc:html-markup-br))
            " ")
--- gnucash-3.8b/gnucash/report/stylesheets/stylesheet-css.scm.orig	2019-12-28 17:33:34.000000000 +0000
+++ gnucash-3.8b/gnucash/report/stylesheets/stylesheet-css.scm	2020-01-16 23:45:58.847854311 +0000
@@ -189,7 +189,7 @@
       (gnc:html-document-set-style-text! ssdoc default-css)
       (gnc:html-document-add-object!
        ssdoc (gnc:make-html-text
-              (_ "&lt;/style is disallowed in CSS. Using default CSS."))))
+              (G_ "&lt;/style is disallowed in CSS. Using default CSS."))))
 
      (else
       (gnc:html-document-set-style-text! ssdoc all-css)))
--- gnucash-3.8b/gnucash/report/locale-specific/us/taxtxf.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/locale-specific/us/taxtxf.scm	2020-01-16 23:48:19.688486443 +0000
@@ -3386,8 +3386,8 @@
  'options-generator tax-options-generator
  'renderer (lambda (report-obj)
              (generate-tax-schedule
-              (_ "Taxable Income/Deductible Expenses")
-              (_ "This report shows transaction detail for your accounts \
+              (G_ "Taxable Income/Deductible Expenses")
+              (G_ "This report shows transaction detail for your accounts \
 related to Income Taxes.")
               report-obj
               #t
@@ -3395,8 +3395,8 @@
  'export-types (list (cons "TXF" 'txf))
  'export-thunk (lambda (report-obj choice file-name)
                  (generate-tax-schedule
-                  (_ "Taxable Income/Deductible Expenses")
-                  (_ "This page shows transaction detail for relevant \
+                  (G_ "Taxable Income/Deductible Expenses")
+                  (G_ "This page shows transaction detail for relevant \
 Income Tax accounts.")
                   report-obj
                   #f
--- gnucash-3.8b/gnucash/report/locale-specific/us/taxtxf-de_DE.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/locale-specific/us/taxtxf-de_DE.scm	2020-01-16 23:48:14.464100190 +0000
@@ -264,7 +264,7 @@
            (gnc:html-markup-p
             (gnc:html-markup
              "blue"
-             (_ "WARNING: There are duplicate TXF codes assigned\
+             (G_ "WARNING: There are duplicate TXF codes assigned\
  to some accounts. Only TXF codes with payer sources may be repeated."))))
           (map (lambda (s)
                  (gnc:html-text-append!
@@ -289,10 +289,10 @@
   (gnc:html-table-prepend-row!
    table
    (append (list (gnc:make-html-table-header-cell/markup
-                  "account-header" (_ "Account Name")))
+                  "account-header" (G_ "Account Name")))
            (make-sub-headers max-level)
            (list (gnc:make-html-table-header-cell/markup
-                  "number-header" (_ "Total"))))))
+                  "number-header" (G_ "Total"))))))
 
 (define (make-sub-headers max-level)
   (if (<= max-level 1)
@@ -830,7 +830,7 @@
                    "center"
                    (gnc:html-markup-p
                     (gnc:html-markup/format
-                     (_ "Period from ~a to ~a") from-date to-date)))))
+                     (G_ "Period from ~a to ~a") from-date to-date)))))
             
             (gnc:html-document-add-object!
              doc (gnc:make-html-text
@@ -873,17 +873,17 @@
  'options-generator tax-options-generator
  'renderer (lambda (report-obj)
              (generate-tax-or-txf
-              (_ "Taxable Income / Deductible Expenses")
-              (_ "This report shows your Taxable Income and \
+              (G_ "Taxable Income / Deductible Expenses")
+              (G_ "This report shows your Taxable Income and \
 Deductible Expenses.")
               report-obj
               #t
               #f))
- 'export-types (list (cons (_ "XML") 'txf))
+ 'export-types (list (cons (G_ "XML") 'txf))
  'export-thunk (lambda (report-obj choice file-name)
                  (generate-tax-or-txf
-                  (_ "Taxable Income / Deductible Expenses")
-                  (_ "This page shows your Taxable Income and \
+                  (G_ "Taxable Income / Deductible Expenses")
+                  (G_ "This page shows your Taxable Income and \
 Deductible Expenses.")
                   report-obj
                   #f
--- gnucash-3.8b/gnucash/report/utility-reports/welcome-to-gnucash.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/utility-reports/welcome-to-gnucash.scm	2020-01-16 23:46:42.179852244 +0000
@@ -55,7 +55,7 @@
        (gnc:lookup-option options section name) value))
 
     (set! options (gnc:report-options (gnc-report-find view)))
-    (set-option! "General" "Report name" (_ "Welcome to GnuCash"))
+    (set-option! "General" "Report name" (G_ "Welcome to GnuCash"))
     (set-option! "General" "Number of columns" 2)
 
     ;; mark the reports as needing to be saved 
@@ -92,10 +92,10 @@
      doc
      (gnc:make-html-text 
       (gnc:html-markup-h2
-       (format #f (_ "Welcome to GnuCash ~a !")
+       (format #f (G_ "Welcome to GnuCash ~a !")
                gnc:version))
       (gnc:html-markup-p
-       (format #f (_ "GnuCash ~a has lots of nice features. Here are a few.")
+       (format #f (G_ "GnuCash ~a has lots of nice features. Here are a few.")
                gnc:version))))
     doc))
 
--- gnucash-3.8b/gnucash/report/utility-reports/view-column.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/utility-reports/view-column.scm	2020-01-16 23:46:35.859852545 +0000
@@ -138,8 +138,8 @@
 	     (gnc:html-table-cell-append-objects!
 	      contents-cell
 	      (gnc:make-html-text
-	       (gnc:html-markup-h3 (_ "Report error"))
-               (_ "An error occurred while running the report.")
+	       (gnc:html-markup-h3 (G_ "Report error"))
+               (G_ "An error occurred while running the report.")
                (gnc:html-markup "pre" gnc:last-captured-error))))
 
 	 ;; increment the alloc number for each occupied row
@@ -166,14 +166,14 @@
 		   URL-TYPE-OPTIONS
 		   (format #f "report-id=~a" (car report-info))
 		   "")
-		  (_ "Edit Options"))
+		  (G_ "Edit Options"))
 		 " "
 		 (gnc:html-markup-anchor
 		  (gnc-build-url
 		   URL-TYPE-REPORT
 		   (format #f "id=~a" (car report-info))
 		   "")
-		  (_ "Single Report")))))
+		  (G_ "Single Report")))))
 
 	 ;; add the report-table to the toplevel-cell
 	 (gnc:html-table-cell-append-objects!
--- gnucash-3.8b/gnucash/report/utility-reports/hello-world.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/gnucash/report/utility-reports/hello-world.scm	2020-01-16 23:46:29.497852849 +0000
@@ -307,7 +307,7 @@
       ;; translation of the given string is available for the
       ;; current locale, then the translation is returned,
       ;; otherwise the original string is returned.
-      (gnc:html-document-set-title! document (_ "Hello, World"))
+      (gnc:html-document-set-title! document (G_ "Hello, World"))
 
       ;; we make a "text object" to add a bunch of text to.
       ;; the function gnc:make-html-text can take any number of 
@@ -322,63 +322,63 @@
        (gnc:make-html-text         
         (gnc:html-markup-p
          (gnc:html-markup/format
-          (_ "This is a sample GnuCash report. \
+          (G_ "This is a sample GnuCash report. \
 See the guile (scheme) source code in the scm/report directory \
 for details on writing your own reports, \
 or extending existing reports.")))
         (gnc:html-markup-p
          (gnc:html-markup/format
-          (_ "For help on writing reports, or to contribute your brand \
+          (G_ "For help on writing reports, or to contribute your brand \
 new, totally cool report, consult the mailing list ~a.")
           (gnc:html-markup-anchor 
            "mailto:gnucash-devel@gnucash.org"
            (gnc:html-markup-tt "gnucash-devel@gnucash.org")))
-         (_ "For details on subscribing to that list, see &lt;https://www.gnucash.org/&gt;.")
-         (_ "You can learn more about writing scheme at &lt;https://www.scheme.com/tspl2d/&gt;."))
+         (G_ "For details on subscribing to that list, see &lt;https://www.gnucash.org/&gt;.")
+         (G_ "You can learn more about writing scheme at &lt;https://www.scheme.com/tspl2d/&gt;."))
 
         (gnc:html-markup-p
          (gnc:html-markup/format
-          (_ "The current time is ~a.") 
+          (G_ "The current time is ~a.") 
           (gnc:html-markup-b time-string)))
 
         (gnc:html-markup-p
          (gnc:html-markup/format
-          (_ "The boolean option is ~a.")
-          (gnc:html-markup-b (if bool-val (_ "true") (_ "false")))))
+          (G_ "The boolean option is ~a.")
+          (gnc:html-markup-b (if bool-val (G_ "true") (G_ "false")))))
 
         (gnc:html-markup-p
          (gnc:html-markup/format
-          (_ "The multi-choice option is ~a.")
+          (G_ "The multi-choice option is ~a.")
           (gnc:html-markup-b (symbol->string mult-val))))
 
         (gnc:html-markup-p
          (gnc:html-markup/format
-          (_ "The string option is ~a.") 
+          (G_ "The string option is ~a.") 
           (gnc:html-markup-b string-val)))
 
         (gnc:html-markup-p
          (gnc:html-markup/format
-          (_ "The date option is ~a.") 
+          (G_ "The date option is ~a.") 
           (gnc:html-markup-b date-string)))
 
         (gnc:html-markup-p
          (gnc:html-markup/format
-          (_ "The date and time option is ~a.") 
+          (G_ "The date and time option is ~a.") 
           (gnc:html-markup-b date-string2)))
 
         (gnc:html-markup-p
          (gnc:html-markup/format 
-          (_ "The relative date option is ~a.")
+          (G_ "The relative date option is ~a.")
           (gnc:html-markup-b rel-date-string)))
 
         (gnc:html-markup-p
          (gnc:html-markup/format 
-          (_ "The combination date option is ~a.")
+          (G_ "The combination date option is ~a.")
           (gnc:html-markup-b combo-date-string)))
 
         (gnc:html-markup-p
          (gnc:html-markup/format 
-          (_ "The number option is ~a.")
+          (G_ "The number option is ~a.")
           (gnc:html-markup-b (number->string num-val))))
 
         ;; Here we print the value of the number option formatted as
@@ -389,7 +389,7 @@
         ;; it yourself -- it will be wrong in other locales.
         (gnc:html-markup-p 
          (gnc:html-markup/format
-          (_ "The number option formatted as currency is ~a.")
+          (G_ "The number option formatted as currency is ~a.")
           (gnc:html-markup-b
            (xaccPrintAmount
             (inexact->exact num-val)
@@ -401,19 +401,19 @@
       (gnc:html-document-add-object!
        document
        (gnc:make-html-text
-        (gnc:html-markup-p (_ "Items you selected:"))))
+        (gnc:html-markup-p (G_ "Items you selected:"))))
 
       (if (not (null? list-val))
           (let ((table (gnc:make-html-table)))
             (gnc:html-table-append-column! 
              table (map symbol->string list-val))
             (gnc:html-table-set-caption! table 
-                                         (_ "List items selected"))
+                                         (G_ "List items selected"))
             (gnc:html-document-add-object! document table))
           (let ((txt (gnc:make-html-text)))
             (gnc:html-text-append!
              txt
-             (gnc:html-markup-p (_ "(You selected no list items.)")))
+             (gnc:html-markup-p (G_ "(You selected no list items.)")))
             (gnc:html-document-add-object! document txt)))
       
       ;; here's a bullet list of accounts.  We can mark up the
@@ -449,17 +449,17 @@
           (gnc:html-document-add-object!
            document
            (gnc:make-html-text
-            (gnc:html-markup-p (_ "You have selected no accounts.")))))
+            (gnc:html-markup-p (G_ "You have selected no accounts.")))))
             
       (gnc:html-document-add-object! 
        document 
        (gnc:make-html-text 
-        (gnc:html-markup-anchor (gnc-build-url URL-TYPE-HELP "gnucash-guide" "") (_ "Display help"))))
+        (gnc:html-markup-anchor (gnc-build-url URL-TYPE-HELP "gnucash-guide" "") (G_ "Display help"))))
 
       (gnc:html-document-add-object! 
        document 
        (gnc:make-html-text 
-        (gnc:html-markup-p (_ "Have a nice day!"))))
+        (gnc:html-markup-p (G_ "Have a nice day!"))))
       
       document)))
 
--- gnucash-3.8b/libgnucash/scm/price-quotes.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/libgnucash/scm/price-quotes.scm	2020-01-16 23:11:58.743951650 +0000
@@ -400,7 +400,7 @@
        prices)))
 
   (define (show-error msg)
-    (gnc:gui-error msg (_ msg)))
+    (gnc:gui-error msg (G_ msg)))
 
   ;; Add the alphavantage api key to the environment. This value is taken from
   ;; the Online Quotes preference tab
@@ -476,18 +476,18 @@
           (gnc-verify-dialog
            window #t (with-output-to-string
                        (lambda ()
-                         (display (_ "Unable to retrieve quotes for these items:"))
+                         (display (G_ "Unable to retrieve quotes for these items:"))
                          (display "\n  ")
                          (display (string-join problem-syms "\n  "))
                          (newline)
-                         (display (_ "Continue using only the good quotes?")))))))
+                         (display (G_ "Continue using only the good quotes?")))))))
 
        (else
         (set! keep-going? #f)
         (gnc-error-dialog
          window (with-output-to-string
                   (lambda ()
-                    (display (_ "Unable to retrieve quotes for these items:"))
+                    (display (G_ "Unable to retrieve quotes for these items:"))
                     (display "\n  ")
                     (display (string-join problem-syms "\n  ")))))))))
 
@@ -502,11 +502,11 @@
                  window #t
                  (with-output-to-string
                    (lambda ()
-                     (display (_ "Unable to create prices for these items:"))
+                     (display (G_ "Unable to create prices for these items:"))
                      (display "\n  ")
                      (display (string-join (filter string? prices) "\n  "))
                      (newline)
-                     (display (_ "Add remaining good quotes?"))))))
+                     (display (G_ "Add remaining good quotes?"))))))
               (gnc:warn
                (with-output-to-string
                  (lambda ()
@@ -524,7 +524,7 @@
     (cond
      ((list? sources)
       ;; Translators: ~A is the version string
-      (format #t (_ "Found Finance::Quote version ~A.") (car sources))
+      (format #t (G_ "Found Finance::Quote version ~A.") (car sources))
       (newline)
       (gnc:msg "Found Finance::Quote version " (car sources))
       (gnc-quote-source-set-fq-installed (car sources) (cdr sources))))))
--- gnucash-3.8b/libgnucash/tax/us/txf.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/libgnucash/tax/us/txf.scm	2020-01-16 23:12:40.638949651 +0000
@@ -93,7 +93,7 @@
 
 (define (gnc:txf-get-help categories code)
   (or (assv-ref txf-help-strings code)
-      (_ "No help available.")))
+      (G_ "No help available.")))
 
 (define (gnc:txf-get-codes categories tax-entity-type)
   (and-let* ((sym (string->symbol tax-entity-type))
--- gnucash-3.8b/libgnucash/app-utils/gettext.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/libgnucash/app-utils/gettext.scm	2020-01-16 23:09:19.972959226 +0000
@@ -27,15 +27,15 @@
 
 ;; gettext functions
 (define gnc:gettext gnc-gettext-helper)
-(define _ gnc:gettext)
+(define G_ gnc:gettext)
 (define-syntax N_
   (syntax-rules ()
-    ((_ x) x)))
+    ((G_ x) x)))
 
 
 (if (< (string->number (major-version)) 2)
     (export-syntax N_))
 
 (export gnc:gettext)
-(export _)
+(export G_)
 (export N_)
--- gnucash-3.8b/libgnucash/app-utils/date-utilities.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/libgnucash/app-utils/date-utilities.scm	2020-01-16 23:36:56.376880194 +0000
@@ -87,7 +87,7 @@
   (let* ((beginweekt64 (* (gnc:time64-get-week (gnc-mktime datevec)) 7 86400))
          (begin-string (qof-print-date (+ beginweekt64 (* 3 86400))))
          (end-string (qof-print-date (+ beginweekt64 (* 9 86400)))))
-    (format #f (_ "~a to ~a") begin-string end-string)))
+    (format #f (G_ "~a to ~a") begin-string end-string)))
 
 ;; is leap year?
 (define (gnc:leap-year? year)
@@ -447,11 +447,11 @@
   (let ((rel-date-data (hash-ref gnc:relative-date-hash date-symbol)))
     (if rel-date-data
         ((gnc:reldate-get-fn rel-date-data))
-        (let* ((msg (_ "Tried to look up an undefined date symbol \
+        (let* ((msg (G_ "Tried to look up an undefined date symbol \
 '~a'. This report was probably saved by a later version of GnuCash. \
 Defaulting to today."))
                (conmsg (format #f msg date-symbol))
-               (uimsg (format #f (_ msg) date-symbol)))
+               (uimsg (format #f (G_ msg) date-symbol)))
           (gnc:gui-warn conmsg uimsg)
           (current-time)))))
 
--- gnucash-3.8b/libgnucash/app-utils/options.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/libgnucash/app-utils/options.scm	2020-01-16 23:37:09.895879549 +0000
@@ -27,7 +27,7 @@
 GnuCash. One of the newer ~a options '~a' is not available, fallback to \
 the option '~a'."))
          (console-msg (format #f template type newoption fallback))
-         (ui-msg (format #f (_ template) type newoption fallback)))
+         (ui-msg (format #f (G_ template) type newoption fallback)))
     (gnc:gui-warn console-msg ui-msg)))
 
 (define (gnc:make-option
--- gnucash-3.8b/libgnucash/app-utils/prefs.scm.orig	2019-12-28 00:53:21.000000000 +0000
+++ gnucash-3.8b/libgnucash/app-utils/prefs.scm	2020-01-16 23:37:39.609878131 +0000
@@ -94,7 +94,7 @@
         (cons ACCT-TYPE-EQUITY     (N_ "Increase"))))
 
 (define (gnc:get-debit-string type)
-  (_ (assoc-ref gnc:*debit-strings* type)))
+  (G_ (assoc-ref gnc:*debit-strings* type)))
 
 (define (gnc:get-credit-string type)
-  (_ (assoc-ref gnc:*credit-strings* type)))
+  (G_ (assoc-ref gnc:*credit-strings* type)))
--- gnucash-3.8b/libgnucash/app-utils/c-interface.scm.orig	2019-12-06 17:26:33.000000000 +0000
+++ gnucash-3.8b/libgnucash/app-utils/c-interface.scm	2020-01-16 23:09:49.011957840 +0000
@@ -81,7 +81,7 @@
 (define (gnc:make-string-database)
   (define string-hash (make-hash-table))
   (define (lookup key)
-    (_ (hash-ref string-hash key)))
+    (G_ (hash-ref string-hash key)))
   (define (store key string)
     (hash-set! string-hash key string))
   (define (dispatch message . args)
