#!/bin/bash
#
. build_funcs

TARNAME=PyQtPurchasing_gpl
TARNAMEEXTRA=
TARDIR=~/tmp/new/p
#TAR_EXT=.tar.gz
VERSION=5.8
VERSIONEXTRA=
BUILD=1

WEBPAGE="http://www.riverbankcomputing.co.uk/software/pyqt/download"

#TAR_PROG=
#TAR_OPTS=
PKGNAME=PyQtPurchasing
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}-${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
# patch -p1 < ${CWD}/
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

export QTDIR=/usr/lib${LIBDIRSUFFIX}/qt5
PATH=/usr/lib${LIBDIRSUFFIX}/qt5/bin:$PATH

if [ ${DO_CONFIGURE} == "yes" ]
then
echo yes | python configure.py --verbose
# CFLAGS="${SLKCFLAGS}" CXXFLAGS="${SLKCFLAGS}"
# --qmake=/usr/lib${LIBDIRSUFFIX}/qt5/bin/qmake
fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

make install DESTDIR=${PKG} INSTALL_ROOT=${PKG}

#strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  GPL_EXCEPTION*.TXT LICENSE.* OPENSOURCE-NOTICE.TXT THANKS doc/* \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "Python bindings for Qt Purchasing"
These are the Python bindings for Qt Purchasing. You must also have 
the SIP Python bindings generator installed.

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
