#!/bin/bash
#
. build_funcs

TARNAME=libvorbis
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/new/l
#TAR_EXT=.tar.gz
VERSION=1.2.3
VERSIONEXTRA=
BUILD=1

WEB_PAGE="http://www.xiph.org"

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 #patch -p1 < ${CWD}/
# ./autogen.sh
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

if [ ${DO_CONFIGURE} == "yes" ]
then
CFLAGS="-O2 -march=i486 ${CPUOPT}=i686" \
CXXFLAGS="-O2 -march=i486 ${CPUOPT}=i686" \
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --localstatedir=/var/lib \
	    --mandir=/usr/man
fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

make install DESTDIR=${PKG}

#strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* HACKING INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

#mv ${PKG}/usr/share/doc/libvorbis-1.2.1svn/* ${PKG}/usr/doc/${TARNAME}-${VERSION}
#rmdir -p ${PKG}/usr/share/doc/libvorbis-1.2.1svn

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "Ogg Vorbis library"
This library supports the Vorbis General Audio Compression Codec
(commonly known as Ogg Vorbis).  Ogg Vorbis is a fully open,
non-proprietary, patent-and-royalty-free, general-purpose compressed
audio format for audio and music at fixed and variable bitrates.

The libvorbis library requires libao and libogg.  You'll find some
basic tools for creating and using Ogg Vorbis files in the
vorbis-tools package.

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
