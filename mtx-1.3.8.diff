--- mtx-1.3.8/mtx.c.orig	2003-09-30 03:43:44.000000000 +0100
+++ mtx-1.3.8/mtx.c	2005-02-24 12:32:02.000000000 +0000
@@ -121,6 +121,7 @@
 static void do_Erase(void);
 static void NoBarCode(void);
 static void do_Position(void);
+static void do_DPosition(void);
 static void Invert2(void);
 static void Exchange(void);
 
@@ -148,6 +149,7 @@
   { 0, "erase", do_Erase, 1, 0},
   { 0, "nobarcode", NoBarCode, 0,0},
   { 1,"position", do_Position, 1, 1},
+  { 1,"dposition", do_DPosition, 1, 1},
   { 0, "invert2", Invert2, 0, 0}, 
   { 3, "exchange", Exchange, 1, 1 },
   { 0, NULL, NULL }
@@ -169,6 +171,7 @@
   mtx [ -f <loader-dev> ] [eepos eepos-number] transfer <storage-element-number> <storage-element-number>\n\
   mtx [ -f <loader-dev> ] [eepos eepos-number][invert][invert2] exchange <storage-element-number> <storage-element-number>\n\
   mtx [ -f <device> ] position <storage-element-number>\n\
+  mtx [ -f <device> ] dposition <drive#>\n\
   mtx [ -f <device> ] eject\n");
 
 
@@ -206,7 +209,7 @@
 } 
 static void do_Position(void) {
 	int driveno,src;
-	if(arg1 >= 0 && arg1 <= ElementStatus->StorageElementCount) {
+	if(arg1 > 0 && arg1 <= ElementStatus->StorageElementCount) {
 		driveno = arg1-1;
 	} else {
 		driveno = 0;
@@ -215,6 +218,17 @@
 	Position(src);
 }
 
+static void do_DPosition(void) {
+	int driveno,src;
+	if(arg1 >= 0 && arg1 < ElementStatus->DataTransferElementCount) {
+		driveno = arg1;
+	} else {
+		driveno = 0;
+	}
+	src = ElementStatus->DataTransferElementAddress[driveno];
+	Position(src);
+}
+
 /* First and Last are easy. Next is the bitch. */
 static void First(void){
   int driveno;
@@ -502,11 +516,11 @@
   /* Now look up the actual devices: */
   dest=ElementStatus->DataTransferElementAddress[arg2];
   src=ElementStatus->StorageElementAddress[arg1];
-  fprintf(stdout, "Loading media from Storage Element %d into drive %d...",arg1+1,arg2);
-  fflush(stdout);
+//  fprintf(stdout, "Loading media from Storage Element %d into drive %d...",arg1+1,arg2);
+//  fflush(stdout);
   Move(src,dest);  /* load it into the particular slot, if possible! */
-  fprintf(stdout,"done\n");
-  fflush(stdout);
+//  fprintf(stdout,"done\n");
+//  fflush(stdout);
   /* now set the status for further command son this line... */
   ElementStatus->StorageElementFull[arg1] = false;
   ElementStatus->DataTransferElementFull[arg2] = true;
@@ -640,11 +654,11 @@
   if (dest < 0) { /* we STILL don't know, sigh... */
     FatalError("Do not know which slot to unload tape into!\n");
   }
-  fprintf(stdout, "Unloading drive %d into Storage Element %d...",arg2, arg1+1);
-  fflush(stdout); /* make it real-time :-( */ 
+//  fprintf(stdout, "Unloading drive %d into Storage Element %d...",arg2, arg1+1);
+//  fflush(stdout); /* make it real-time :-( */ 
   Move(src,dest);
-  fprintf(stdout, "done\n");
-  fflush(stdout);
+//  fprintf(stdout, "done\n");
+//  fflush(stdout);
   ElementStatus->StorageElementFull[arg1] = true;
   ElementStatus->DataTransferElementFull[arg2] = false;
 }
--- mtx-1.3.8/scsi_linux.c.orig	2003-09-30 04:08:43.000000000 +0100
+++ mtx-1.3.8/scsi_linux.c	2005-02-24 08:39:13.000000000 +0000
@@ -144,7 +144,7 @@
     io_hdr.dxferp = buff;
     io_hdr.mx_sb_len = sizeof(RequestSense_T);
     io_hdr.sbp = RequestSense;
-    io_hdr.timeout = sg_timeout;
+    io_hdr.timeout = sg_timeout*1000/HZ;
     io_hdr.pack_id = pack_id++;
     if (diop && *diop)
         io_hdr.flags |= SG_FLAG_DIRECT_IO;
@@ -202,7 +202,7 @@
     io_hdr.dxferp = buff;
     io_hdr.mx_sb_len = sizeof(RequestSense_T);
     io_hdr.sbp = RequestSense;
-    io_hdr.timeout = sg_timeout;
+    io_hdr.timeout = sg_timeout*1000/HZ;
     io_hdr.pack_id = pack_id++;
     if (diop && *diop)
         io_hdr.flags |= SG_FLAG_DIRECT_IO;
