--- mpgedit-0.73dev2/mpgedit/contrib/python/py_mpgedit/makefile.linux.orig	2006-12-28 08:42:45.000000000 +0000
+++ mpgedit-0.73dev2/mpgedit/contrib/python/py_mpgedit/makefile.linux	2007-10-15 10:46:17.000000000 +0100
@@ -3,4 +3,4 @@
 #
 
 install:
-	./setup_pympgedit.py install
+	./setup_pympgedit.py install --root=$(DESTDIR)
--- mpgedit-0.73dev2/mpgedit/install.sh.orig	2006-01-01 23:43:26.000000000 +0000
+++ mpgedit-0.73dev2/mpgedit/install.sh	2007-10-15 11:42:34.000000000 +0100
@@ -1,6 +1,6 @@
 #!/bin/sh
 product=mpgedit_0.7p2
-install_root=/usr/local
+#install_root=/usr/local
 
 man1="mpgedit.1 xmpgedit.1 decoder.so.1 mp3decoder.sh.1
       scramble_times.pl.1 scramble.pl.1 unscramble.pl.1"
@@ -72,48 +72,48 @@
 #
 do_gtkrc_config()
 {
-  if [ ! -d "/usr/local/etc/gtk-2.0" ]; then
-    if [ "`uname`" = "Linux" ]; then
-      count=`locate etc/gtk-2.0 | grep 'gtk-2.0$' | wc -l`
-      if [ $count -gt 1 ]; then
-        echo "WARNING: Unable to determine GTK+ 2.0 install directory"
-        echo "         You must manually configure the gtkrc file pixmap_path"
-        return
-      fi
-      gtkrc="`locate etc/gtk-2.0 | grep 'gtk-2.0$'`"
-    fi
-  elif [ "$os" = "darwin" ]; then
-    gtkrc="/sw/share/themes/Default/gtk-2.0/gtkrc"
-  else
-    gtkrc="/usr/local/etc/gtk-2.0"
-  fi
-  if [ -f "$gtkrc/gtkrc" ]; then
-    tmptst=`grep pixmap_path "$gtkrc/gtkrc"`
-    if [ -z "$tmptst" ]; then
-      # This is simple, add pixmap_path to existing gtkrc file
-      #
-      echo "pixmap_path \"$install_root/share/xmpgedit\"" >> "$gtkrc/gtkrc"
-    else
-      # Determine if xmpgedit is already in pixmap path
-      #
-      tmptst=`grep "$install_root/share/xmpgedit" "$gtkrc/gtkrc"`
-      if [ -z "$tmptst" ]; then
-        sed -e "s|pixmap_path \(.*\)\"|pixmap_path \1:$install_root/share/xmpgedit\"|" "$gtkrc/gtkrc" > /tmp/gtkrc$$
-        i=1
-        while [ -f "$gtkrc/gtkrc.$i" ]; do
-          i=`expr $i + 1`
-        done
-        cp "$gtkrc/gtkrc" "$gtkrc/gtkrc.$i"
-        cp "/tmp/gtkrc$$" "$gtkrc/gtkrc"
-      fi
-    fi
-  else
-    # This is simple, create gtkrc with needed entry
-    #
-    echo "pixmap_path \"$install_root/share/xmpgedit\"" > "$gtkrc/gtkrc"
-  fi
+#  if [ ! -d "/usr/local/etc/gtk-2.0" ]; then
+#    if [ "`uname`" = "Linux" ]; then
+#      count=`locate etc/gtk-2.0 | grep 'gtk-2.0$' | wc -l`
+#      if [ $count -gt 1 ]; then
+#        echo "WARNING: Unable to determine GTK+ 2.0 install directory"
+#        echo "         You must manually configure the gtkrc file pixmap_path"
+#        return
+#      fi
+#      gtkrc="`locate etc/gtk-2.0 | grep 'gtk-2.0$'`"
+#    fi
+#  elif [ "$os" = "darwin" ]; then
+#    gtkrc="/sw/share/themes/Default/gtk-2.0/gtkrc"
+ # else
+#    gtkrc="/usr/local/etc/gtk-2.0"
+#  fi
+#  if [ -f "$gtkrc/gtkrc" ]; then
+#    tmptst=`grep pixmap_path "$gtkrc/gtkrc"`
+#    if [ -z "$tmptst" ]; then
+#      # This is simple, add pixmap_path to existing gtkrc file
+#      #
+#      echo "pixmap_path \"$install_root/share/xmpgedit\"" >> "$gtkrc/gtkrc"
+#    else
+#      # Determine if xmpgedit is already in pixmap path
+#      #
+#      tmptst=`grep "$install_root/share/xmpgedit" "$gtkrc/gtkrc"`
+#      if [ -z "$tmptst" ]; then
+#        sed -e "s|pixmap_path \(.*\)\"|pixmap_path \1:$install_root/share/xmpgedit\"|" "$gtkrc/gtkrc" > /tmp/gtkrc$$
+#        i=1
+#        while [ -f "$gtkrc/gtkrc.$i" ]; do
+#          i=`expr $i + 1`
+#        done
+#        cp "$gtkrc/gtkrc" "$gtkrc/gtkrc.$i"
+#        cp "/tmp/gtkrc$$" "$gtkrc/gtkrc"
+#      fi
+#    fi
+#  else
+#    # This is simple, create gtkrc with needed entry
+#    #
+#    echo "pixmap_path \"$install_root/share/xmpgedit\"" > "$gtkrc/gtkrc"
+#  fi
 
-  unset count tmptst gtkrc i
+#  unset count tmptst gtkrc i
 }
 
 
@@ -121,50 +121,50 @@
 {
   get_install_root
   
-  echo "Installing '$product' in '$install_root'"
-  install -d $man_base/man1
-  install -d $install_root/lib
-  install -d $install_root/bin
+  echo "Installing '$product' in '${DESTDIR}$install_root'"
+  install -d ${DESTDIR}$man_base/man1
+  install -d ${DESTDIR}$install_root/lib
+  install -d ${DESTDIR}$install_root/bin
   
-  echo "Installing man pages ($man_base/man1)..."
-  install -m 444 $man1 $man_base/man1
+  echo "Installing man pages (${DESTDIR}$man_base/man1)..."
+  install -m 444 $man1 ${DESTDIR}$man_base/man1
   
-  echo "Installing shared libraries ($install_root/lib)..."
-  install $lib $install_root/lib
+  echo "Installing shared libraries (${DESTDIR}$install_root/lib)..."
+  install $lib ${DESTDIR}$install_root/lib
   
-  echo "Installing executables ($install_root/bin)..."
-  install $bin $install_root/bin
+  echo "Installing executables (${DESTDIR}$install_root/bin)..."
+  install $bin ${DESTDIR}$install_root/bin
 
   if [ -d "gui" ]; then
     cd gui
   fi
-  echo "Installing GUI executables ($install_root/bin)..."
-  install $guibin $install_root/bin
+  echo "Installing GUI executables (${DESTDIR}$install_root/bin)..."
+  install $guibin ${DESTDIR}$install_root/bin
 
-  echo "Installing xmpgedit pixmaps ($install_root/share/xmpgedit)..."
+  echo "Installing xmpgedit pixmaps (${DESTDIR}$install_root/share/xmpgedit)..."
   #
   # Note: trailing slash here is extremely important, as it tells -D
   # xmpgedit is a directory, not a file.
   #
-  install -d        $install_root/share/xmpgedit/
-  mkdir   -p        $install_root/share/xmpgedit/
-  install $share    $install_root/share/xmpgedit/
+  install -d        ${DESTDIR}$install_root/share/xmpgedit/
+  mkdir   -p        ${DESTDIR}$install_root/share/xmpgedit/
+  install $share    ${DESTDIR}$install_root/share/xmpgedit/
   #
   # Attempt to install pixmaps in a standard location.
   #
-  if [ -d "/usr/share/pixmaps" -a ! -d "/usr/share/pixmaps/xmpgedit" ]; then
-    ln -s $install_root/share/xmpgedit /usr/share/pixmaps/xmpgedit
-  elif [ -d "/usr/local/share" -a ! -d "/usr/local/share/xmpgedit" ]; then
-    ln -s $install_root/share/xmpgedit /usr/local/share/xmpgedit
-  fi
+#  if [ -d "/usr/share/pixmaps" -a ! -d "/usr/share/pixmaps/xmpgedit" ]; then
+#    ln -s $install_root/share/xmpgedit /usr/share/pixmaps/xmpgedit
+#  elif [ -d "/usr/local/share" -a ! -d "/usr/local/share/xmpgedit" ]; then
+#    ln -s $install_root/share/xmpgedit /usr/local/share/xmpgedit
+#  fi
 
   if [ -d "gui" ]; then
     cd ..
   fi
   
-  rm -f $install_root/lib/libmpgedit_decoder.$shlibext
+  rm -f ${DESTDIR}$install_root/lib/libmpgedit_decoder.$shlibext
   ln -s libdecoder_mpg123.$shlibext \
-        $install_root/lib/libmpgedit_decoder.$shlibext
+        ${DESTDIR}$install_root/lib/libmpgedit_decoder.$shlibext
 
   if [ $F_FLAG = "YES" ]; then
   ( cd /usr/lib
@@ -172,34 +172,6 @@
   )
   fi
   
-  if [ -f "/etc/ld.so.conf" ]; then
-    line=`grep $install_root/lib /etc/ld.so.conf`
-    if [ -z "$line" ]; then
-  
-      # Short-circuit interactive question if -y provided on command line
-      #
-      if [ $Y_FLAG = "NO" ]; then
-        echo
-        echo "$install_root/lib not found in /etc/ld.so.conf"
-        echo "This is needed for proper operation of mpgedit"
-        echo
-        echo -n "  Do you want to add this now? [Y/n] "
-        read line
-        line=`echo $line | tr '[A-Z]' '[a-z]'`
-      else
-        line=$Y_FLAG
-      fi
-      if [ "$line" != "n" -a "$line" != "no" ]; then
-        echo "updating /etc/ld.so.conf..."
-        echo "$install_root/lib" >> /etc/ld.so.conf
-      fi
-    fi
-     # Always run ldconfig, even if install path was previously in ld.so.conf,
-     # because this install may have added new libraries not previously in
-     # the library cache.
-    /sbin/ldconfig
-  fi
-
   if [ $F_FLAG = "YES" ]; then
     do_man_config $man_base
     do_gtkrc_config
@@ -313,11 +285,6 @@
 #
 # ============================ main =======================
 #
-uid=`id | sed -e 's/uid=\([0-9][0-9]*\).*/\1/'`
-if [ $uid != 0 ]; then
-  echo "ERROR: Can only install '$product' as root"
-  exit 1;
-fi
 
 PATH=$PATH:/usr/sbin:/usr/bin
 export PATH
