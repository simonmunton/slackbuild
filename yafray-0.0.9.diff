--- yafray-0.0.9/src/loader/mlex.cc.orig	2004-12-22 09:26:24.000000000 +0000
+++ yafray-0.0.9/src/loader/mlex.cc	2010-07-03 17:27:26.000000000 +0100
@@ -21,6 +21,7 @@
  */
 
 #include<stdio.h>
+#include<cstring>
 #include<iostream>
 #include "mlex.h"
 using namespace std;
--- yafray-0.0.9/src/shaders/basictex.cc.orig	2006-06-10 01:41:26.000000000 +0100
+++ yafray-0.0.9/src/shaders/basictex.cc	2010-07-03 17:29:49.000000000 +0100
@@ -23,6 +23,7 @@
 #include "basictex.h"
 #include "object3d.h"
 #include <iostream>
+#include <cstring>
 
 #include "targaIO.h"
 #include "HDR_io.h"
@@ -259,7 +260,7 @@
 		intp_type = BICUBIC;
 	
 	// Load image, try to determine from extensions first
-	char *ext = strrchr(filename, '.');
+	const char *ext = strrchr(filename, '.');
 	bool jpg_tried = false;
 	bool tga_tried = false;
 	bool hdr_tried = false;
--- yafray-0.0.9/src/yafraycore/buffer.h.orig	2005-06-27 15:11:30.000000000 +0100
+++ yafray-0.0.9/src/yafraycore/buffer.h	2010-07-03 17:13:43.000000000 +0100
@@ -28,6 +28,7 @@
 #endif
 
 #include <cstdio>
+#include <cstdlib>
 #include <iostream>
 #include "color.h"
 
--- yafray-0.0.9/src/yafraycore/targaIO.cc.orig	2006-05-18 16:36:08.000000000 +0100
+++ yafray-0.0.9/src/yafraycore/targaIO.cc	2010-07-03 17:23:10.000000000 +0100
@@ -3,6 +3,7 @@
 //--------------------------------------------------------------------------------
 #include "targaIO.h"
 #include "vector3d.h"
+#include <cstring>
 
 //--------------------------------------------------------------------------------
 // Save uncompressed 24 bit targa
--- yafray-0.0.9/src/yafraycore/ccthreads.h.orig	2010-07-03 17:16:45.000000000 +0100
+++ yafray-0.0.9/src/yafraycore/ccthreads.h	2010-07-03 17:16:17.000000000 +0100
@@ -7,6 +7,7 @@
 #endif
 
 #include<errno.h>
+#include <cstdlib>
 
 #if HAVE_PTHREAD
 #include<pthread.h>
--- yafray-0.0.9/src/yafraycore/HDR_io.cc.orig	2010-07-03 17:15:41.000000000 +0100
+++ yafray-0.0.9/src/yafraycore/HDR_io.cc	2010-07-03 17:15:13.000000000 +0100
@@ -5,6 +5,8 @@
 
 #include "HDR_io.h"
 
+#include<cstring>
+
 #ifdef HAVE_CONFIG_H
 #include<config.h>
 #endif
--- yafray-0.0.9/src/yafraycore/renderblock.cc.orig	2005-05-30 07:28:19.000000000 +0100
+++ yafray-0.0.9/src/yafraycore/renderblock.cc	2010-07-03 17:19:03.000000000 +0100
@@ -1,5 +1,6 @@
 
 #include "renderblock.h"
+#include <cstdlib>
 
 using namespace std;
 
--- yafray-0.0.9/src/yafraycore/kdtree.cc.orig	2006-07-14 10:58:05.000000000 +0100
+++ yafray-0.0.9/src/yafraycore/kdtree.cc	2010-07-03 17:17:53.000000000 +0100
@@ -4,6 +4,7 @@
 #include <math.h>
 #include <limits>
 #include <time.h>
+#include <cstring>
 
 __BEGIN_YAFRAY
 
--- yafray-0.0.9/src/yafraycore/geometree.h.orig	2004-12-22 09:26:38.000000000 +0000
+++ yafray-0.0.9/src/yafraycore/geometree.h	2010-07-03 17:22:27.000000000 +0100
@@ -2,6 +2,7 @@
 #define __GEOMETREE_H
 
 #include"bound.h"
+#include <limits>
 
 __BEGIN_YAFRAY
 
--- yafray-0.0.9/src/yafraycore/threadedscene.cc.orig	2005-07-04 16:01:46.000000000 +0100
+++ yafray-0.0.9/src/yafraycore/threadedscene.cc	2016-02-07 14:45:35.686414471 +0000
@@ -25,6 +25,8 @@
 #include <cstdio>
 #include <cstdlib>
 #include<fstream>
+#include <sys/types.h>
+#include <unistd.h>
 
 using namespace std;
 
--- yafray-0.0.9/linux-settings.py.orig	2006-07-14 11:14:52.000000000 +0100
+++ yafray-0.0.9/linux-settings.py	2016-02-07 14:53:40.213979105 +0000
@@ -10,8 +10,9 @@
 	global prefix
 	prefix = args.get('prefix','/usr/local')
 
-def get_libpath(args): return prefix+"/lib"
-def get_pluginpath(args): return prefix+"/lib/yafray"
+def get_libpath(args):
+	return args.get('libdir', prefix+"/lib")
+def get_pluginpath(args): return get_libpath(args)+"/yafray"
 def get_binpath(args): return prefix+"/bin"
 def get_confpath(args): return prefix+"/etc"
 def get_cxxflags(args):
--- yafray-0.0.9/src/yafraycore/targaIO.cc.orig	2019-07-13 06:25:26.918366076 +0100
+++ yafray-0.0.9/src/yafraycore/targaIO.cc	2019-07-13 06:28:06.989358439 +0100
@@ -172,7 +172,7 @@
 				err_str = "could not seek file footer!";
 				fclose(fp);
 				fp = NULL;
-				return false;
+				return NULL;
 			}
 			if(strncmp(&footer.signature[0], "TRUEVISION-XFILE", 16) != 0)
 			{
@@ -181,7 +181,7 @@
 				err_str = "File is no v2.0 Targa file!";
 				fclose(fp);
 				fp = NULL;
-				return false;
+				return NULL;
 			}
 			rewind(fp);
 		}
@@ -194,7 +194,7 @@
 			err_str = "Colormap image without colormap??";
 			fclose(fp);
 			fp = NULL;
-			return false;
+			return NULL;
 		}
 
 		cmap_bits = header[7];
@@ -204,7 +204,7 @@
 			err_str = "Unsupported colormap bitformat";
 			fclose(fp);
 			fp = NULL;
-			return false;
+			return NULL;
 		}
 
 		if ((header[2]!=TGA_UNC_TRUE) && (header[2]!=TGA_UNC_GRAY) &&
@@ -214,7 +214,7 @@
 			err_str = "Targa type not supported";
 			fclose(fp);
 			fp = NULL;
-			return false;
+			return NULL;
 		}
 
 		isgray = ((header[2]==TGA_UNC_GRAY) | (header[2]==TGA_RLE_GRAY));
@@ -234,7 +234,7 @@
 				err_str = "Unsupported grayscale image format";
 				fclose(fp);
 				fp = NULL;
-				return false;
+				return NULL;
 			}
 		}
 		else if (IS_CMAP) {
@@ -243,7 +243,7 @@
 				err_str = "24/32 bit colormap index???";
 				fclose(fp);
 				fp = NULL;
-				return false;
+				return NULL;
 			}
 		}
 		else {
@@ -251,7 +251,7 @@
 				err_str = "Unsupported pixelformat, only accept 15/16-, 24- or 32-bit";
 				fclose(fp);
 				fp = NULL;
-				return false;
+				return NULL;
 			}
 		}
 
@@ -262,7 +262,7 @@
 				err_str = "Unsupported alpha format";
 				fclose(fp);
 				fp = NULL;
-				return false;
+				return NULL;
 			}
 		}
 
