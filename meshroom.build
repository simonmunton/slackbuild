#!/bin/bash
#
. build_funcs

TARNAME=meshroom
TARNAMEEXTRA=
TARSEP="-"
TARDIR=${SOURCE}/m
#TAR_EXT=.tar.gz
VERSION=2021.1.0
VERSIONEXTRA=
BUILD=4

WEBPAGE="https://github.com/alicevision/meshroom"

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 patch -p1 -b -z .orig < ${CWD}/meshroom-2021.1.0.diff

  # Hardcode camera_database and voctree default value
  sed -i "s:'ALICEVISION_VOCTREE', '':'ALICEVISION_VOCTREE', '/usr/share/aliceVision/vlfeat_K80L3.SIFT.tree':g" meshroom/nodes/aliceVision/*.py
  sed -i "s:'ALICEVISION_SENSOR_DB', '':'ALICEVISION_SENSOR_DB', '/usr/share/aliceVision/cameraSensors.db':g" meshroom/nodes/aliceVision/*.py

)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

mkdir _BuilD_
cd _BuilD_

PKGCFLAGS="-O2 -march=i686 ${CPUOPT}=i686"

if [ ${DO_CONFIGURE} == "yes" ]
then
if [ -f ../configure ]
then
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
../configure --prefix=/usr \
            --sysconfdir=/etc \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --localstatedir=/var/lib \
	    --mandir=/usr/man
elif [ -f ../CMakeLists.txt ]
then
cmake -DCMAKE_C_FLAGS:STRING="${SLKCFLAGS}" \
      -DCMAKE_CXX_FLAGS:STRING="${SLKCFLAGS}" \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DMAN_INSTALL_DIR=/usr/man \
      -DLIB_SUFFIX=${LIBDIRSUFFIX} \
      -DSYSCONF_INSTALL_DIR=/etc \
      -DBUILD_DIR=`pwd` \
      -DMR_BUILD_QTOIIO=off \
      -DMR_BUILD_QMLALEMBIC=off \
      -DMR_BUILD_QTALICEVISION=off \
      ..
elif [ -f ../meson.build ]
then
  meson --prefix=/usr . ..
fi

fi

if [ ${DO_MAKE} == "yes" ]
then
if [ -f ../meson.build ]
then
  ninja || exit
else
#  make ${NUM_JOBS} || exit
:
fi
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

if [ -f ../meson.build ]
then
  DESTDIR=${PKG} ninja install
else
#  make install DESTDIR=${PKG}
  cd ..

  PYTHON3_VERSION=$( python3 -c 'import sys; print(sys.version[:3])' )
  PYTHON3_SITE=$( python3 -c 'import sysconfig; print(sysconfig.get_paths()["purelib"])' )


  mkdir -p ${PKG}${PYTHON3_SITE}
  cp -pr meshroom ${PKG}${PYTHON3_SITE}
  python3 -m compileall ${PKG}${PYTHON3_SITE}
  mkdir -p ${PKG}/usr/bin
  cp bin/meshroom_* ${PKG}/usr/bin
  sed -i "s@/usr/bin/env python@/usr/bin/env python3@" ${PKG}/usr/bin/*

  cat << EOF > ${PKG}/usr/bin/meshroom
#! /bin/bash

export QML2_IMPORT_PATH=/usr/lib${LIBDIRSUFFIX}/meshroom/qml:\$QML2_IMPORT_PATH
export QT_PLUGIN_PATH=/usr/lib${LIBDIRSUFFIX}/meshroom:\$QT_PLUGIN_PATH

python3 -m meshroom.ui "\$@"

EOF

  chmod +x ${PKG}/usr/bin/*

  cd _BuilD_
fi

cd ..

strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "3D Reconstruction Software"
Meshroom is a free, open-source 3D Reconstruction Software based on 
the AliceVision Photogrammetric Computer Vision framework.

EOF

post_install

cd ${PKG}
su -c "chown -R root:root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}:${GROUP} ${PKG}"
