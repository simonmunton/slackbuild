--- synfig-0.61.08/src/modules/mod_libavcodec/trgt_av.cpp.orig	2008-05-20 09:37:37.000000000 +0100
+++ synfig-0.61.08/src/modules/mod_libavcodec/trgt_av.cpp	2008-05-20 10:15:57.000000000 +0100
@@ -35,7 +35,8 @@
 
 extern "C"
 {
-#include <avformat.h>
+#include <libavformat/avformat.h>
+#include <libswscale/swscale.h>
 }
 
 #include <synfig/general.h>
@@ -294,6 +295,8 @@
 
 	//int		stream_nb_frames;
 
+	struct SwsContext *img_convert_ctx;
+
 	bool open(AVFormatContext *formatc, AVStream *stream)
 	{
 		if(!formatc || !stream)
@@ -360,6 +363,8 @@
 			}
 		}
 
+		img_convert_ctx = NULL;
+
 		return true;
 	}
 
@@ -389,9 +394,19 @@
 		if ( pict && context->pix_fmt != PIX_FMT_RGB24 )
 		{
 			//We're using RGBA at the moment, write custom conversion code later (get less accuracy errors)
-			img_convert((AVPicture *)encodable, context->pix_fmt,
-						(AVPicture *)pict, PIX_FMT_RGB24,
-						context->width, context->height);
+			//img_convert((AVPicture *)encodable, context->pix_fmt,
+			//			(AVPicture *)pict, PIX_FMT_RGB24,
+			//			context->width, context->height);
+			if (img_convert_ctx == NULL)
+                       	    img_convert_ctx = sws_getContext(context->width, context->height,
+                                                    	    PIX_FMT_RGB24,
+                                                    	    context->width, context->height,
+                                                    	    context->pix_fmt,
+                                                    	    SWS_BICUBIC,
+                                                    	    NULL, NULL, NULL);
+	                sws_scale(img_convert_ctx, pict->data,
+                    		    pict->linesize, 0, context->height,
+                        	    encodable->data, encodable->linesize);
 
 			pict = encodable;
 		}
@@ -465,6 +480,12 @@
 			encodable = 0;
 		}
 
+		if (img_convert_ctx)
+		{
+			sws_freeContext (img_convert_ctx);
+			img_convert_ctx = NULL;
+		}
+
 		videobuffer.resize(0);
 	}
 };
@@ -674,7 +695,7 @@
 			if(!(format->flags & AVFMT_NOFILE))
 			{
 				/* close the output file */
-				url_fclose(&formatc->pb);
+				url_fclose(formatc->pb);
 			}
 
 			/* free the stream */
