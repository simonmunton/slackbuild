--- DevIL-1.6.8-rc2/include/IL/ilut.h.orig	2008-07-16 07:54:29.000000000 +0100
+++ DevIL-1.6.8-rc2/include/IL/ilut.h	2008-07-16 07:53:19.000000000 +0100
@@ -234,7 +234,7 @@
 extern "C" {
 #endif
 
-	ILAPI BITMAP* ILAPIENTRY ilutAllegLoadImage(Lstring FileName);
+	ILAPI BITMAP* ILAPIENTRY ilutAllegLoadImage(ILstring FileName);
 	ILAPI BITMAP* ILAPIENTRY ilutConvertToAlleg(PALETTE Pal);
 #endif//ILUT_USE_ALLEGRO
 
--- DevIL-1.6.8-rc2/include/IL/devil_internal_exports.h.orig.orig	2008-07-16 07:54:29.000000000 +0100
+++ DevIL-1.6.8-rc2/include/IL/devil_internal_exports.h.orig	2008-07-16 07:54:29.000000000 +0100
@@ -91,7 +91,7 @@
 #endif
 
 // Internal library functions in IL
-ILAPI ILimage* ILAPIENTRY ilGetCurImage(ILvoid);
+ILAPI ILimage* ILAPIENTRY ilGetCurImage(void);
 ILAPI ILvoid   ILAPIENTRY ilSetCurImage(ILimage *Image);
 ILAPI ILvoid   ILAPIENTRY ilSetError(ILenum Error);
 ILAPI ILvoid   ILAPIENTRY ilSetPal(ILpal *Pal);
@@ -113,15 +113,15 @@
 //
 // Image functions
 //
-ILAPI ILvoid    ILAPIENTRY iBindImageTemp  (ILvoid);
+ILAPI ILvoid    ILAPIENTRY iBindImageTemp  (void);
 ILAPI ILboolean ILAPIENTRY ilClearImage_   (ILimage *Image);
 ILAPI ILvoid    ILAPIENTRY ilCloseImage    (ILimage *Image);
 ILAPI ILvoid    ILAPIENTRY ilClosePal      (ILpal *Palette);
-ILAPI ILpal*    ILAPIENTRY iCopyPal        (ILvoid);
+ILAPI ILpal*    ILAPIENTRY iCopyPal        (void);
 ILAPI ILboolean ILAPIENTRY ilCopyImageAttr (ILimage *Dest, ILimage *Src);
 ILAPI ILimage*  ILAPIENTRY ilCopyImage_    (ILimage *Src);
 ILAPI ILvoid    ILAPIENTRY ilGetClear      (ILvoid *Colours, ILenum Format, ILenum Type);
-ILAPI ILuint    ILAPIENTRY ilGetCurName    (ILvoid);
+ILAPI ILuint    ILAPIENTRY ilGetCurName    (void);
 ILAPI ILboolean ILAPIENTRY ilIsValidPal    (ILpal *Palette);
 ILAPI ILimage*  ILAPIENTRY ilNewImage      (ILuint Width, ILuint Height, ILuint Depth, ILubyte Bpp, ILubyte Bpc);
 ILAPI ILimage*  ILAPIENTRY ilNewImageFull  (ILuint Width, ILuint Height, ILuint Depth, ILubyte Bpp, ILenum Format, ILenum Type, ILvoid *Data);
--- DevIL-1.6.8-rc2/include/IL/il.h.orig.orig	2008-07-16 07:54:29.000000000 +0100
+++ DevIL-1.6.8-rc2/include/IL/il.h.orig	2008-07-16 07:54:29.000000000 +0100
@@ -445,15 +445,15 @@
 ILAPI ILvoid    ILAPIENTRY ilBindImage(ILuint Image);
 ILAPI ILboolean ILAPIENTRY ilBlit(ILuint Source, ILint DestX, ILint DestY, ILint DestZ, ILuint SrcX, ILuint SrcY, ILuint SrcZ, ILuint Width, ILuint Height, ILuint Depth);
 ILAPI ILvoid    ILAPIENTRY ilClearColour(ILclampf Red, ILclampf Green, ILclampf Blue, ILclampf Alpha);
-ILAPI ILboolean ILAPIENTRY ilClearImage(ILvoid);
-ILAPI ILuint    ILAPIENTRY ilCloneCurImage(ILvoid);
+ILAPI ILboolean ILAPIENTRY ilClearImage(void);
+ILAPI ILuint    ILAPIENTRY ilCloneCurImage(void);
 ILAPI ILboolean ILAPIENTRY ilCompressFunc(ILenum Mode);
 ILAPI ILboolean ILAPIENTRY ilConvertImage(ILenum DestFormat, ILenum DestType);
 ILAPI ILboolean ILAPIENTRY ilConvertPal(ILenum DestFormat);
 ILAPI ILboolean ILAPIENTRY ilCopyImage(ILuint Src);
 ILAPI ILuint    ILAPIENTRY ilCopyPixels(ILuint XOff, ILuint YOff, ILuint ZOff, ILuint Width, ILuint Height, ILuint Depth, ILenum Format, ILenum Type, ILvoid *Data);
 ILAPI ILuint    ILAPIENTRY ilCreateSubImage(ILenum Type, ILuint Num);
-ILAPI ILboolean ILAPIENTRY ilDefaultImage(ILvoid);
+ILAPI ILboolean ILAPIENTRY ilDefaultImage(void);
 ILAPI ILvoid    ILAPIENTRY ilDeleteImage(const ILuint Num);
 ILAPI ILvoid    ILAPIENTRY ilDeleteImages(ILsizei Num, const ILuint *Images);
 ILAPI ILboolean ILAPIENTRY ilDisable(ILenum Mode);
@@ -464,16 +464,16 @@
 ILAPI ILubyte*  ILAPIENTRY ilGetAlpha(ILenum Type);
 ILAPI ILboolean ILAPIENTRY ilGetBoolean(ILenum Mode);
 ILAPI ILvoid    ILAPIENTRY ilGetBooleanv(ILenum Mode, ILboolean *Param);
-ILAPI ILubyte*  ILAPIENTRY ilGetData(ILvoid);
+ILAPI ILubyte*  ILAPIENTRY ilGetData(void);
 ILAPI ILuint    ILAPIENTRY ilGetDXTCData(ILvoid *Buffer, ILuint BufferSize, ILenum DXTCFormat);
-ILAPI ILenum    ILAPIENTRY ilGetError(ILvoid);
+ILAPI ILenum    ILAPIENTRY ilGetError(void);
 ILAPI ILint     ILAPIENTRY ilGetInteger(ILenum Mode);
 ILAPI ILvoid    ILAPIENTRY ilGetIntegerv(ILenum Mode, ILint *Param);
-ILAPI ILuint    ILAPIENTRY ilGetLumpPos(ILvoid);
-ILAPI ILubyte*  ILAPIENTRY ilGetPalette(ILvoid);
+ILAPI ILuint    ILAPIENTRY ilGetLumpPos(void);
+ILAPI ILubyte*  ILAPIENTRY ilGetPalette(void);
 ILAPI ILstring  ILAPIENTRY ilGetString(ILenum StringName);
 ILAPI ILvoid    ILAPIENTRY ilHint(ILenum Target, ILenum Mode);
-ILAPI ILvoid    ILAPIENTRY ilInit(ILvoid);
+ILAPI ILvoid    ILAPIENTRY ilInit(void);
 ILAPI ILboolean ILAPIENTRY ilIsDisabled(ILenum Mode);
 ILAPI ILboolean ILAPIENTRY ilIsEnabled(ILenum Mode);
 ILAPI ILboolean ILAPIENTRY ilIsImage(ILuint Image);
@@ -489,7 +489,7 @@
 ILAPI ILvoid    ILAPIENTRY ilModAlpha( ILdouble AlphaValue );
 ILAPI ILboolean ILAPIENTRY ilOriginFunc(ILenum Mode);
 ILAPI ILboolean ILAPIENTRY ilOverlayImage(ILuint Source, ILint XCoord, ILint YCoord, ILint ZCoord);
-ILAPI ILvoid    ILAPIENTRY ilPopAttrib(ILvoid);
+ILAPI ILvoid    ILAPIENTRY ilPopAttrib(void);
 ILAPI ILvoid    ILAPIENTRY ilPushAttrib(ILuint Bits);
 ILAPI ILvoid    ILAPIENTRY ilRegisterFormat(ILenum Format);
 ILAPI ILboolean ILAPIENTRY ilRegisterLoad(const ILstring Ext, IL_LOADPROC Load);
@@ -501,9 +501,9 @@
 ILAPI ILvoid    ILAPIENTRY ilRegisterType(ILenum Type);
 ILAPI ILboolean ILAPIENTRY ilRemoveLoad(const ILstring Ext);
 ILAPI ILboolean ILAPIENTRY ilRemoveSave(const ILstring Ext);
-ILAPI ILvoid    ILAPIENTRY ilResetMemory(ILvoid);
-ILAPI ILvoid    ILAPIENTRY ilResetRead(ILvoid);
-ILAPI ILvoid    ILAPIENTRY ilResetWrite(ILvoid);
+ILAPI ILvoid    ILAPIENTRY ilResetMemory(void);
+ILAPI ILvoid    ILAPIENTRY ilResetRead(void);
+ILAPI ILvoid    ILAPIENTRY ilResetWrite(void);
 ILAPI ILboolean ILAPIENTRY ilSave(ILenum Type, ILstring FileName);
 ILAPI ILuint    ILAPIENTRY ilSaveF(ILenum Type, ILHANDLE File);
 ILAPI ILboolean ILAPIENTRY ilSaveImage(const ILstring FileName);
@@ -518,7 +518,7 @@
 ILAPI ILvoid    ILAPIENTRY ilSetRead(fOpenRProc, fCloseRProc, fEofProc, fGetcProc, fReadProc, fSeekRProc, fTellRProc);
 ILAPI ILvoid    ILAPIENTRY ilSetString(ILenum Mode, const char *String);
 ILAPI ILvoid    ILAPIENTRY ilSetWrite(fOpenWProc, fCloseWProc, fPutcProc, fSeekWProc, fTellWProc, fWriteProc);
-ILAPI ILvoid    ILAPIENTRY ilShutDown(ILvoid);
+ILAPI ILvoid    ILAPIENTRY ilShutDown(void);
 ILAPI ILboolean ILAPIENTRY ilTexImage(ILuint Width, ILuint Height, ILuint Depth, ILubyte numChannels, ILenum Format, ILenum Type, ILvoid *Data);
 ILAPI ILenum    ILAPIENTRY ilTypeFromExt(const ILstring FileName);
 ILAPI ILboolean ILAPIENTRY ilTypeFunc(ILenum Mode);
--- DevIL-1.6.8-rc2/include/IL/il_wrap.h.orig.orig	2008-07-16 07:54:29.000000000 +0100
+++ DevIL-1.6.8-rc2/include/IL/il_wrap.h.orig	2008-07-16 07:54:30.000000000 +0100
@@ -29,44 +29,44 @@
 	ILboolean	ActiveImage(ILuint);
 	ILboolean	ActiveLayer(ILuint);
 	ILboolean	ActiveMipmap(ILuint);
-	ILboolean	Clear(ILvoid);
+	ILboolean	Clear(void);
 	ILvoid		ClearColour(ILclampf, ILclampf, ILclampf, ILclampf);
 	ILboolean	Convert(ILenum);
 	ILboolean	Copy(ILuint);
-	ILboolean	Default(ILvoid);
-	ILboolean	Flip(ILvoid);
-	ILboolean	SwapColours(ILvoid);
+	ILboolean	Default(void);
+	ILboolean	Flip(void);
+	ILboolean	SwapColours(void);
 	ILboolean	Resize(ILuint, ILuint, ILuint);
 	ILboolean	TexImage(ILuint, ILuint, ILuint, ILubyte, ILenum, ILenum, ILvoid*);
 
 	
 	// Image handling
-	ILvoid		Bind(ILvoid) const;
+	ILvoid		Bind(void) const;
 	ILvoid		Bind(ILuint);
-	ILvoid		Close(ILvoid) { this->Delete(); }
-	ILvoid		Delete(ILvoid);
+	ILvoid		Close(void) { this->Delete(); }
+	ILvoid		Delete(void);
 	ILvoid		iGenBind();
 	ILenum		PaletteAlphaIndex();
 
 	// Image characteristics
-	ILuint		Width(ILvoid);
-	ILuint		Height(ILvoid);
-	ILuint		Depth(ILvoid);
-	ILubyte		Bpp(ILvoid);
-	ILubyte		Bitpp(ILvoid);
-	ILenum		PaletteType(ILvoid);
-	ILenum		Format(ILvoid);
-	ILenum		Type(ILvoid);
-	ILuint		NumImages(ILvoid);
-	ILuint		NumMipmaps(ILvoid);
-	ILuint		GetId(ILvoid) const;
-    ILenum      GetOrigin(ILvoid);
-	ILubyte		*GetData(ILvoid);
-	ILubyte		*GetPalette(ILvoid);
+	ILuint		Width(void);
+	ILuint		Height(void);
+	ILuint		Depth(void);
+	ILubyte		Bpp(void);
+	ILubyte		Bitpp(void);
+	ILenum		PaletteType(void);
+	ILenum		Format(void);
+	ILenum		Type(void);
+	ILuint		NumImages(void);
+	ILuint		NumMipmaps(void);
+	ILuint		GetId(void) const;
+    ILenum      GetOrigin(void);
+	ILubyte		*GetData(void);
+	ILubyte		*GetPalette(void);
 
 
 	// Rendering
-	ILuint		BindImage(ILvoid);
+	ILuint		BindImage(void);
 	ILuint		BindImage(ILenum);
 
 
@@ -111,12 +111,12 @@
 class ilOgl
 {
 public:
-	static ILvoid		Init(ILvoid);
+	static ILvoid		Init(void);
 	static GLuint		BindTex(ilImage &);
 	static ILboolean	Upload(ilImage &, ILuint);
 	static GLuint		Mipmap(ilImage &);
-	static ILboolean	Screen(ILvoid);
-	static ILboolean	Screenie(ILvoid);
+	static ILboolean	Screen(void);
+	static ILboolean	Screenie(void);
 };
 #endif//ILUT_USE_OPENGL
 
@@ -125,7 +125,7 @@
 class ilAlleg
 {
 public:
-	static ILvoid	Init(ILvoid);
+	static ILvoid	Init(void);
 	static BITMAP	*Convert(ilImage &);
 };
 #endif//ILUT_USE_ALLEGRO
@@ -135,7 +135,7 @@
 class ilWin32
 {
 public:
-	static ILvoid		Init(ILvoid);
+	static ILvoid		Init(void);
 	static HBITMAP		Convert(ilImage &);
 	static ILboolean	GetClipboard(ilImage &);
 	static ILvoid		GetInfo(ilImage &, BITMAPINFO *Info);
@@ -175,7 +175,7 @@
 	static ILboolean		IsDisabled(ILenum);
 	static ILboolean		IsEnabled(ILenum);
 	static ILboolean		Origin(ILenum);
-	static ILvoid			Pop(ILvoid);
+	static ILvoid			Pop(void);
 	static ILvoid			Push(ILuint);
 
 
@@ -191,8 +191,8 @@
 public:
 	static ILvoid		Check(ILvoid (*Callback)(const char*));
 	static ILvoid		Check(ILvoid (*Callback)(ILenum));
-	static ILenum		Get(ILvoid);
-	static const char	*String(ILvoid);
+	static ILenum		Get(void);
+	static const char	*String(void);
 	static const char	*String(ILenum);
 
 protected:
--- DevIL-1.6.8-rc2/include/IL/ilu.h.orig.orig	2008-07-16 07:54:30.000000000 +0100
+++ DevIL-1.6.8-rc2/include/IL/ilu.h.orig	2008-07-16 07:54:30.000000000 +0100
@@ -122,37 +122,37 @@
 
 
 // ImageLib Utility Functions
-ILAPI ILboolean      ILAPIENTRY iluAlienify(ILvoid);
+ILAPI ILboolean      ILAPIENTRY iluAlienify(void);
 ILAPI ILboolean      ILAPIENTRY iluBlurAvg(ILuint Iter);
 ILAPI ILboolean      ILAPIENTRY iluBlurGaussian(ILuint Iter);
-ILAPI ILboolean      ILAPIENTRY iluBuildMipmaps(ILvoid);
-ILAPI ILuint         ILAPIENTRY iluColoursUsed(ILvoid);
+ILAPI ILboolean      ILAPIENTRY iluBuildMipmaps(void);
+ILAPI ILuint         ILAPIENTRY iluColoursUsed(void);
 ILAPI ILboolean      ILAPIENTRY iluCompareImage(ILuint Comp);
 ILAPI ILboolean      ILAPIENTRY iluContrast(ILfloat Contrast);
 ILAPI ILboolean      ILAPIENTRY iluCrop(ILuint XOff, ILuint YOff, ILuint ZOff, ILuint Width, ILuint Height, ILuint Depth);
 ILAPI ILvoid         ILAPIENTRY iluDeleteImage(ILuint Id);
-ILAPI ILboolean      ILAPIENTRY iluEdgeDetectE(ILvoid);
-ILAPI ILboolean      ILAPIENTRY iluEdgeDetectP(ILvoid);
-ILAPI ILboolean      ILAPIENTRY iluEdgeDetectS(ILvoid);
-ILAPI ILboolean      ILAPIENTRY iluEmboss(ILvoid);
+ILAPI ILboolean      ILAPIENTRY iluEdgeDetectE(void);
+ILAPI ILboolean      ILAPIENTRY iluEdgeDetectP(void);
+ILAPI ILboolean      ILAPIENTRY iluEdgeDetectS(void);
+ILAPI ILboolean      ILAPIENTRY iluEmboss(void);
 ILAPI ILboolean      ILAPIENTRY iluEnlargeCanvas(ILuint Width, ILuint Height, ILuint Depth);
 ILAPI ILboolean      ILAPIENTRY iluEnlargeImage(ILfloat XDim, ILfloat YDim, ILfloat ZDim);
-ILAPI ILboolean      ILAPIENTRY iluEqualize(ILvoid);
+ILAPI ILboolean      ILAPIENTRY iluEqualize(void);
 ILAPI ILstring 		 ILAPIENTRY iluErrorString(ILenum Error);
 ILAPI ILboolean      ILAPIENTRY iluConvolution(ILint *matrix, ILint scale, ILint bias);
-ILAPI ILboolean      ILAPIENTRY iluFlipImage(ILvoid);
+ILAPI ILboolean      ILAPIENTRY iluFlipImage(void);
 ILAPI ILboolean      ILAPIENTRY iluGammaCorrect(ILfloat Gamma);
-ILAPI ILuint         ILAPIENTRY iluGenImage(ILvoid);
+ILAPI ILuint         ILAPIENTRY iluGenImage(void);
 ILAPI ILvoid         ILAPIENTRY iluGetImageInfo(ILinfo *Info);
 ILAPI ILint          ILAPIENTRY iluGetInteger(ILenum Mode);
 ILAPI ILvoid         ILAPIENTRY iluGetIntegerv(ILenum Mode, ILint *Param);
 ILAPI ILstring 		 ILAPIENTRY iluGetString(ILenum StringName);
 ILAPI ILvoid         ILAPIENTRY iluImageParameter(ILenum PName, ILenum Param);
-ILAPI ILvoid         ILAPIENTRY iluInit(ILvoid);
-ILAPI ILboolean      ILAPIENTRY iluInvertAlpha(ILvoid);
+ILAPI ILvoid         ILAPIENTRY iluInit(void);
+ILAPI ILboolean      ILAPIENTRY iluInvertAlpha(void);
 ILAPI ILuint         ILAPIENTRY iluLoadImage(const ILstring FileName);
-ILAPI ILboolean      ILAPIENTRY iluMirror(ILvoid);
-ILAPI ILboolean      ILAPIENTRY iluNegative(ILvoid);
+ILAPI ILboolean      ILAPIENTRY iluMirror(void);
+ILAPI ILboolean      ILAPIENTRY iluNegative(void);
 ILAPI ILboolean      ILAPIENTRY iluNoisify(ILclampf Tolerance);
 ILAPI ILboolean      ILAPIENTRY iluPixelize(ILuint PixSize);
 ILAPI ILvoid         ILAPIENTRY iluRegionfv(ILpointf *Points, ILuint n);
@@ -166,7 +166,7 @@
 ILAPI ILboolean      ILAPIENTRY iluScaleAlpha(ILfloat scale);
 ILAPI ILboolean      ILAPIENTRY iluScaleColours(ILfloat r, ILfloat g, ILfloat b);
 ILAPI ILboolean      ILAPIENTRY iluSharpen(ILfloat Factor, ILuint Iter);
-ILAPI ILboolean      ILAPIENTRY iluSwapColours(ILvoid);
+ILAPI ILboolean      ILAPIENTRY iluSwapColours(void);
 ILAPI ILboolean      ILAPIENTRY iluWave(ILfloat Angle);
 
 #define iluColorsUsed   iluColoursUsed
--- DevIL-1.6.8-rc2/include/IL/ilut.h.orig.orig.orig	2008-07-16 07:54:30.000000000 +0100
+++ DevIL-1.6.8-rc2/include/IL/ilut.h.orig.orig	2008-07-16 07:54:30.000000000 +0100
@@ -198,10 +198,10 @@
 ILAPI ILint			ILAPIENTRY ilutGetInteger(ILenum Mode);
 ILAPI ILvoid		ILAPIENTRY ilutGetIntegerv(ILenum Mode, ILint *Param);
 ILAPI ILstring		ILAPIENTRY ilutGetString(ILenum StringName);
-ILAPI ILvoid		ILAPIENTRY ilutInit(ILvoid);
+ILAPI ILvoid		ILAPIENTRY ilutInit(void);
 ILAPI ILboolean		ILAPIENTRY ilutIsDisabled(ILenum Mode);
 ILAPI ILboolean		ILAPIENTRY ilutIsEnabled(ILenum Mode);
-ILAPI ILvoid		ILAPIENTRY ilutPopAttrib(ILvoid);
+ILAPI ILvoid		ILAPIENTRY ilutPopAttrib(void);
 ILAPI ILvoid		ILAPIENTRY ilutPushAttrib(ILuint Bits);
 ILAPI ILvoid		ILAPIENTRY ilutSetInteger(ILenum Mode, ILint Param);
 
@@ -211,11 +211,11 @@
 // ImageLib Utility Toolkit's OpenGL Functions
 #ifdef ILUT_USE_OPENGL
 	ILAPI GLuint	ILAPIENTRY ilutGLBindTexImage();
-	ILAPI GLuint	ILAPIENTRY ilutGLBindMipmaps(ILvoid);
-	ILAPI ILboolean	ILAPIENTRY ilutGLBuildMipmaps(ILvoid);
+	ILAPI GLuint	ILAPIENTRY ilutGLBindMipmaps(void);
+	ILAPI ILboolean	ILAPIENTRY ilutGLBuildMipmaps(void);
 	ILAPI GLuint	ILAPIENTRY ilutGLLoadImage(ILstring FileName);
-	ILAPI ILboolean	ILAPIENTRY ilutGLScreen(ILvoid);
-	ILAPI ILboolean	ILAPIENTRY ilutGLScreenie(ILvoid);
+	ILAPI ILboolean	ILAPIENTRY ilutGLScreen(void);
+	ILAPI ILboolean	ILAPIENTRY ilutGLScreenie(void);
 	ILAPI ILboolean	ILAPIENTRY ilutGLSaveImage(ILstring FileName, GLuint TexID);
 	ILAPI ILboolean	ILAPIENTRY ilutGLSetTex(GLuint TexID);
 	ILAPI ILboolean	ILAPIENTRY ilutGLTexImage(GLuint Level);
@@ -249,7 +249,7 @@
 
 // ImageLib Utility Toolkit's BeOS Functions
 #ifdef  ILUT_USE_BEOS
-	ILAPI BBitmap ILAPIENTRY ilutConvertToBBitmap(ILvoid);
+	ILAPI BBitmap ILAPIENTRY ilutConvertToBBitmap(void);
 #endif//ILUT_USE_BEOS
 
 
@@ -259,13 +259,13 @@
 	ILAPI HBITMAP	ILAPIENTRY ilutConvertSliceToHBitmap(HDC hDC, ILuint slice);
 	ILAPI ILvoid	ILAPIENTRY ilutFreePaddedData(ILubyte *Data);
 	ILAPI ILvoid	ILAPIENTRY ilutGetBmpInfo(BITMAPINFO *Info);
-	ILAPI HPALETTE	ILAPIENTRY ilutGetHPal(ILvoid);
-	ILAPI ILubyte*	ILAPIENTRY ilutGetPaddedData(ILvoid);
-	ILAPI ILboolean	ILAPIENTRY ilutGetWinClipboard(ILvoid);
+	ILAPI HPALETTE	ILAPIENTRY ilutGetHPal(void);
+	ILAPI ILubyte*	ILAPIENTRY ilutGetPaddedData(void);
+	ILAPI ILboolean	ILAPIENTRY ilutGetWinClipboard(void);
 	ILAPI ILboolean	ILAPIENTRY ilutLoadResource(HINSTANCE hInst, ILint ID, ILstring ResourceType, ILenum Type);
 	ILAPI ILboolean	ILAPIENTRY ilutSetHBitmap(HBITMAP Bitmap);
 	ILAPI ILboolean	ILAPIENTRY ilutSetHPal(HPALETTE Pal);
-	ILAPI ILboolean	ILAPIENTRY ilutSetWinClipboard(ILvoid);
+	ILAPI ILboolean	ILAPIENTRY ilutSetWinClipboard(void);
 	ILAPI HBITMAP	ILAPIENTRY ilutWinLoadImage(ILstring FileName, HDC hDC);
 	ILAPI ILboolean	ILAPIENTRY ilutWinLoadUrl(ILstring Url);
 	ILAPI ILboolean ILAPIENTRY ilutWinPrint(ILuint XPos, ILuint YPos, ILuint Width, ILuint Height, HDC hDC);
--- DevIL-1.6.8-rc2/projects/msvc/gdi+/DevIL-GDI+.cpp.orig.orig	2008-07-16 07:54:30.000000000 +0100
+++ DevIL-1.6.8-rc2/projects/msvc/gdi+/DevIL-GDI+.cpp.orig	2008-07-16 07:54:30.000000000 +0100
@@ -56,9 +56,9 @@
 
 ILAPI ILimage*	ILAPIENTRY iConvertImage(ILenum DestFormat, ILenum DestType);
 ILAPI ILubyte*	ILAPIENTRY iGetPaddedData(ILimage *Image);
-ILAPI ILimage*	ILAPIENTRY ilGetCurImage(ILvoid);
+ILAPI ILimage*	ILAPIENTRY ilGetCurImage(void);
 ILAPI ILvoid	ILAPIENTRY ilCloseImage(ILimage *Image);
-ILAPI ILvoid	ILAPIENTRY iBindImageTemp(ILvoid);
+ILAPI ILvoid	ILAPIENTRY iBindImageTemp(void);
 
 
 // @TODO: Use 48-bit and 64-bit types.
--- DevIL-1.6.8-rc2/projects/msvc/mfc/DevIL-MFC.cpp.orig.orig	2008-07-16 07:54:30.000000000 +0100
+++ DevIL-1.6.8-rc2/projects/msvc/mfc/DevIL-MFC.cpp.orig	2008-07-16 07:54:30.000000000 +0100
@@ -56,9 +56,9 @@
 
 ILAPI ILimage*	ILAPIENTRY iConvertImage(ILenum DestFormat, ILenum DestType);
 ILAPI ILubyte*	ILAPIENTRY iGetPaddedData(ILimage *Image);
-ILAPI ILimage*	ILAPIENTRY ilGetCurImage(ILvoid);
+ILAPI ILimage*	ILAPIENTRY ilGetCurImage(void);
 ILAPI ILvoid	ILAPIENTRY ilCloseImage(ILimage *Image);
-ILAPI ILvoid	ILAPIENTRY iBindImageTemp(ILvoid);
+ILAPI ILvoid	ILAPIENTRY iBindImageTemp(void);
 
 
 CBitmap *ilutConvertToCBitmap()
--- DevIL-1.6.8-rc2/projects/msvc/mfc/DevIL-MFC.h.orig.orig	2008-07-16 07:54:30.000000000 +0100
+++ DevIL-1.6.8-rc2/projects/msvc/mfc/DevIL-MFC.h.orig	2008-07-16 07:54:30.000000000 +0100
@@ -23,9 +23,9 @@
 struct ILimage;
 ILAPI ILimage*	ILAPIENTRY iConvertImage(ILenum DestFormat, ILenum DestType);
 ILAPI ILubyte*	ILAPIENTRY iGetPaddedData(ILimage *Image);
-ILAPI ILimage*	ILAPIENTRY ilGetCurImage(ILvoid);
+ILAPI ILimage*	ILAPIENTRY ilGetCurImage(void);
 ILAPI ILvoid	ILAPIENTRY ilCloseImage(ILimage *Image);
-ILAPI ILvoid	ILAPIENTRY iBindImageTemp(ILvoid);
+ILAPI ILvoid	ILAPIENTRY iBindImageTemp(void);
 
 // Functions for the static library.
 CBitmap *ilutConvertToCBitmap();
--- DevIL-1.6.8-rc2/src-IL/include/il_bmp.h.orig.orig	2008-07-16 07:54:30.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/include/il_bmp.h.orig	2008-07-16 07:54:30.000000000 +0100
@@ -61,11 +61,11 @@
 // Internal functions
 ILboolean	iGetBmpHead(BMPHEAD *Header);
 ILboolean	iGetOS2Head(OS2_HEAD *Header);
-ILboolean	iIsValidBmp(ILvoid);
+ILboolean	iIsValidBmp(void);
 ILboolean	iCheckBmp(BMPHEAD *Header);
 ILboolean	iCheckOS2(OS2_HEAD *Header);
-ILboolean	iLoadBitmapInternal(ILvoid);
-ILboolean	iSaveBitmapInternal(ILvoid);
+ILboolean	iLoadBitmapInternal(void);
+ILboolean	iSaveBitmapInternal(void);
 ILboolean	ilReadUncompBmp(BMPHEAD *Info);
 ILboolean	ilReadRLE8Bmp(BMPHEAD *Info);
 ILboolean	ilReadRLE4Bmp(BMPHEAD *Info);
--- DevIL-1.6.8-rc2/src-IL/include/il_dcx.h.orig.orig	2008-07-16 07:54:30.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/include/il_dcx.h.orig	2008-07-16 07:54:30.000000000 +0100
@@ -43,9 +43,9 @@
 #endif
 
 // For checking and reading
-ILboolean iIsValidDcx(ILvoid);
+ILboolean iIsValidDcx(void);
 ILboolean iCheckDcx(DCXHEAD *Header);
-ILboolean iLoadDcxInternal(ILvoid);
+ILboolean iLoadDcxInternal(void);
 ILimage*  iUncompressDcx(DCXHEAD *Header);
 ILimage*  iUncompressDcxSmall(DCXHEAD *Header);
 
--- DevIL-1.6.8-rc2/src-IL/include/il_dds.h.orig.orig	2008-07-16 07:54:30.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/include/il_dds.h.orig	2008-07-16 07:54:30.000000000 +0100
@@ -166,28 +166,28 @@
 #define CUBEMAP_SIDES 6
 
 // Internal functions
-ILboolean	iLoadDdsInternal(ILvoid);
-ILboolean	iIsValidDds(ILvoid);
+ILboolean	iLoadDdsInternal(void);
+ILboolean	iIsValidDds(void);
 ILboolean	iCheckDds(DDSHEAD *Head);
 ILvoid		AdjustVolumeTexture(DDSHEAD *Head);
-ILboolean	ReadData(ILvoid);
-ILboolean	AllocImage(ILvoid);
-ILboolean	Decompress(ILvoid);
-ILboolean	ReadMipmaps(ILvoid);
-ILuint		DecodePixelFormat(ILvoid);
-ILboolean	DecompressARGB(ILvoid);
-ILboolean	DecompressDXT1(ILvoid);
-ILboolean	DecompressDXT2(ILvoid);
-ILboolean	DecompressDXT3(ILvoid);
-ILboolean	DecompressDXT4(ILvoid);
-ILboolean	DecompressDXT5(ILvoid);
-ILboolean	Decompress3Dc(ILvoid);
-ILboolean	DecompressAti1n(ILvoid);
-ILboolean	DecompressRXGB(ILvoid);
-ILboolean	DecompressFloat(ILvoid);
-ILvoid		CorrectPreMult(ILvoid);
+ILboolean	ReadData(void);
+ILboolean	AllocImage(void);
+ILboolean	Decompress(void);
+ILboolean	ReadMipmaps(void);
+ILuint		DecodePixelFormat(void);
+ILboolean	DecompressARGB(void);
+ILboolean	DecompressDXT1(void);
+ILboolean	DecompressDXT2(void);
+ILboolean	DecompressDXT3(void);
+ILboolean	DecompressDXT4(void);
+ILboolean	DecompressDXT5(void);
+ILboolean	Decompress3Dc(void);
+ILboolean	DecompressAti1n(void);
+ILboolean	DecompressRXGB(void);
+ILboolean	DecompressFloat(void);
+ILvoid		CorrectPreMult(void);
 ILvoid		GetBitsFromMask(ILuint Mask, ILuint *ShiftLeft, ILuint *ShiftRight);
-ILboolean	iSaveDdsInternal(ILvoid);
+ILboolean	iSaveDdsInternal(void);
 ILboolean	WriteHeader(ILimage *Image, ILenum DXTCFormat, ILuint CubeFlags);
 ILushort	*CompressTo565(ILimage *Image);
 ILubyte		*CompressTo88(ILimage *Image);
--- DevIL-1.6.8-rc2/src-IL/include/il_files.h.orig.orig	2008-07-16 07:54:30.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/include/il_files.h.orig	2008-07-16 07:54:30.000000000 +0100
@@ -21,8 +21,8 @@
 #include <IL/il.h>
 
 
-__FILES_EXTERN ILvoid ILAPIENTRY iPreserveReadFuncs(ILvoid);
-__FILES_EXTERN ILvoid ILAPIENTRY iRestoreReadFuncs(ILvoid);
+__FILES_EXTERN ILvoid ILAPIENTRY iPreserveReadFuncs(void);
+__FILES_EXTERN ILvoid ILAPIENTRY iRestoreReadFuncs(void);
 
 __FILES_EXTERN fEofProc		EofProc;
 __FILES_EXTERN fGetcProc	GetcProc;
@@ -47,13 +47,13 @@
 
 __FILES_EXTERN ILvoid		iSetInputFile(ILHANDLE File);
 __FILES_EXTERN ILvoid		iSetInputLump(const ILvoid *Lump, ILuint Size);
-__FILES_EXTERN ILboolean	(ILAPIENTRY *ieof)(ILvoid);
+__FILES_EXTERN ILboolean	(ILAPIENTRY *ieof)(void);
 __FILES_EXTERN ILHANDLE		(ILAPIENTRY *iopenr)(const ILstring);
 __FILES_EXTERN ILvoid		(ILAPIENTRY *icloser)(ILHANDLE);
-__FILES_EXTERN ILint		(ILAPIENTRY *igetc)(ILvoid);
+__FILES_EXTERN ILint		(ILAPIENTRY *igetc)(void);
 __FILES_EXTERN ILuint		(ILAPIENTRY *iread)(ILvoid *Buffer, ILuint Size, ILuint Number);
 __FILES_EXTERN ILuint		(ILAPIENTRY *iseek)(ILint Offset, ILuint Mode);
-__FILES_EXTERN ILuint		(ILAPIENTRY *itell)(ILvoid);
+__FILES_EXTERN ILuint		(ILAPIENTRY *itell)(void);
 
 __FILES_EXTERN ILvoid		iSetOutputFile(ILHANDLE File);
 __FILES_EXTERN ILvoid		iSetOutputLump(ILvoid *Lump, ILuint Size);
@@ -61,16 +61,16 @@
 __FILES_EXTERN ILHANDLE		(ILAPIENTRY *iopenw)(const ILstring);
 __FILES_EXTERN ILint		(ILAPIENTRY *iputc)(ILubyte Char);
 __FILES_EXTERN ILuint		(ILAPIENTRY *iseekw)(ILint Offset, ILuint Mode);
-__FILES_EXTERN ILuint		(ILAPIENTRY *itellw)(ILvoid);
+__FILES_EXTERN ILuint		(ILAPIENTRY *itellw)(void);
 __FILES_EXTERN ILint		(ILAPIENTRY *iwrite)(const ILvoid *Buffer, ILuint Size, ILuint Number);
  
-__FILES_EXTERN ILHANDLE		ILAPIENTRY iGetFile(ILvoid);
-__FILES_EXTERN const ILubyte*		ILAPIENTRY iGetLump(ILvoid);
+__FILES_EXTERN ILHANDLE		ILAPIENTRY iGetFile(void);
+__FILES_EXTERN const ILubyte*		ILAPIENTRY iGetLump(void);
 
 __FILES_EXTERN ILuint		ILAPIENTRY ilprintf(const char *, ...);
 __FILES_EXTERN ILvoid		ipad(ILuint NumZeros);
 
 __FILES_EXTERN ILboolean	iPreCache(ILuint Size);
-__FILES_EXTERN ILvoid		iUnCache(ILvoid);
+__FILES_EXTERN ILvoid		iUnCache(void);
 
 #endif//FILES_H
--- DevIL-1.6.8-rc2/src-IL/include/il_gif.h.orig.orig	2008-07-16 07:54:30.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/include/il_gif.h.orig	2008-07-16 07:54:30.000000000 +0100
@@ -57,9 +57,9 @@
 #endif
 
 // Internal functions
-ILboolean iLoadGifInternal(ILvoid);
+ILboolean iLoadGifInternal(void);
 ILboolean ilLoadGifF(ILHANDLE File);
-ILboolean iIsValidGif(ILvoid);
+ILboolean iIsValidGif(void);
 ILboolean iGetPalette(ILubyte Info, ILpal *Pal);
 ILboolean GetImages(ILpal *GlobalPal, GIFHEAD *GifHead);
 ILboolean SkipExtensions(GFXCONTROL *Gfx);
--- DevIL-1.6.8-rc2/src-IL/include/il_internal.h.orig.orig	2008-07-16 07:54:30.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/include/il_internal.h.orig	2008-07-16 07:54:30.000000000 +0100
@@ -137,10 +137,10 @@
 char*		ilStrDup(const char *Str);
 ILuint		ilStrLen(const char *Str);
 // Miscellaneous functions
-ILvoid					ilDefaultStates(ILvoid);
+ILvoid					ilDefaultStates(void);
 ILenum					iGetHint(ILenum Target);
 ILint					iGetInt(ILenum Mode);
-ILvoid					ilRemoveRegistered(ILvoid);
+ILvoid					ilRemoveRegistered(void);
 ILAPI ILvoid ILAPIENTRY	ilSetCurImage(ILimage *Image);
 //
 // Rle compression
@@ -151,14 +151,14 @@
 #define     IL_BMPCOMP 0x04
 ILboolean	ilRleCompressLine(ILubyte *ScanLine, ILuint Width, ILubyte Bpp, ILubyte *Dest, ILuint *DestWidth, ILenum CompressMode);
 ILuint		ilRleCompress(ILubyte *Data, ILuint Width, ILuint Height, ILuint Depth, ILubyte Bpp, ILubyte *Dest, ILenum CompressMode, ILuint *ScanTable);
-ILvoid		iSetImage0(ILvoid);
+ILvoid		iSetImage0(void);
 // Conversion functions
-ILboolean	ilAddAlpha(ILvoid);
+ILboolean	ilAddAlpha(void);
 ILboolean	ilAddAlphaKey(ILimage *Image);
 ILboolean	iFastConvert(ILenum DestFormat);
-ILboolean	ilFixImage(ILvoid);
-ILboolean	ilRemoveAlpha(ILvoid);
-ILboolean	ilSwapColours(ILvoid);
+ILboolean	ilFixImage(void);
+ILboolean	ilRemoveAlpha(void);
+ILboolean	ilSwapColours(void);
 // Miscellaneous functions
 char *iGetString(ILenum StringName);  // Internal version of ilGetString
 // Library usage
--- DevIL-1.6.8-rc2/src-IL/include/il_jpeg.h.orig.orig	2008-07-16 07:54:30.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/include/il_jpeg.h.orig	2008-07-16 07:54:30.000000000 +0100
@@ -16,11 +16,11 @@
 #include "il_internal.h"
 
 ILboolean iCheckJpg(ILubyte Header[2]);
-ILboolean iIsValidJpg(ILvoid);
+ILboolean iIsValidJpg(void);
 
 #ifndef IL_USE_IJL
-	ILboolean iLoadJpegInternal(ILvoid);
-	ILboolean iSaveJpegInternal(ILvoid);
+	ILboolean iLoadJpegInternal(void);
+	ILboolean iSaveJpegInternal(void);
 #else
 	ILboolean iLoadJpegInternal(const ILstring FileName, ILvoid *Lump, ILuint Size);
 	ILboolean iSaveJpegInternal(const ILstring FileName, ILvoid *Lump, ILuint Size);
--- DevIL-1.6.8-rc2/src-IL/include/il_lif.h.orig.orig	2008-07-16 07:54:30.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/include/il_lif.h.orig	2008-07-16 07:54:30.000000000 +0100
@@ -30,8 +30,8 @@
 	ILuint	TeamEffect1;	// Team effect offset 1
 } LIF_HEAD;
 
-ILboolean iIsValidLif(ILvoid);
+ILboolean iIsValidLif(void);
 ILboolean iCheckLif(LIF_HEAD *Header);
-ILboolean iLoadLifInternal(ILvoid);
+ILboolean iLoadLifInternal(void);
 
 #endif//LIF_H
--- DevIL-1.6.8-rc2/src-IL/include/il_manip.h.orig.orig	2008-07-16 07:54:30.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/include/il_manip.h.orig	2008-07-16 07:54:30.000000000 +0100
@@ -13,7 +13,7 @@
 #ifndef MANIP_H
 #define MANIP_H
 
-ILboolean ilFlipImage(ILvoid);
-ILboolean ilMirrorImage(ILvoid);	//@JASON New routine created 03/28/2001
+ILboolean ilFlipImage(void);
+ILboolean ilMirrorImage(void);	//@JASON New routine created 03/28/2001
 
 #endif//MANIP_H
--- DevIL-1.6.8-rc2/src-IL/include/il_pcx.h.orig.orig	2008-07-16 07:54:30.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/include/il_pcx.h.orig	2008-07-16 07:54:30.000000000 +0100
@@ -43,10 +43,10 @@
 #endif
 
 // For checking and reading
-ILboolean iIsValidPcx(ILvoid);
+ILboolean iIsValidPcx(void);
 ILboolean iCheckPcx(PCXHEAD *Header);
-ILboolean iLoadPcxInternal(ILvoid);
-ILboolean iSavePcxInternal(ILvoid);
+ILboolean iLoadPcxInternal(void);
+ILboolean iSavePcxInternal(void);
 ILboolean iUncompressPcx(PCXHEAD *Header);
 ILboolean iUncompressSmall(PCXHEAD *Header);
 
--- DevIL-1.6.8-rc2/src-IL/include/il_pic.h.orig.orig	2008-07-16 07:54:30.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/include/il_pic.h.orig	2008-07-16 07:54:30.000000000 +0100
@@ -65,9 +65,9 @@
 #define PIC_AUXILIARY_1_CHANNEL	0x02	// XXX: Not implemented
 #define PIC_AUXILIARY_2_CHANNEL	0x01	// XXX: Not implemented
 
-ILboolean iIsValidPic(ILvoid);
+ILboolean iIsValidPic(void);
 ILboolean iCheckPic(PIC_HEAD *Header);
-ILboolean iLoadPicInternal(ILvoid);
+ILboolean iLoadPicInternal(void);
 ILboolean readScanlines(ILuint *image, ILint width, ILint height, CHANNEL *channel, ILuint alpha);
 ILuint    readScanline(ILubyte *scan, ILint width, CHANNEL *channel,  ILint bytes);
 ILboolean channelReadRaw(ILubyte *scan, ILint width, ILint noCol, ILint *off, ILint bytes);
--- DevIL-1.6.8-rc2/src-IL/include/il_pnm.h.orig.orig	2008-07-16 07:54:30.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/include/il_pnm.h.orig	2008-07-16 07:54:30.000000000 +0100
@@ -38,14 +38,14 @@
 	ILubyte	Bpp;
 } PPMINFO;
 
-ILboolean	iIsValidPnm(ILvoid);
+ILboolean	iIsValidPnm(void);
 ILboolean	iCheckPnm(char Header[2]);
-ILboolean	iLoadPnmInternal(ILvoid);
-ILboolean	iSavePnmInternal(ILvoid);
+ILboolean	iLoadPnmInternal(void);
+ILboolean	iSavePnmInternal(void);
 ILimage		*ilReadAsciiPpm(PPMINFO *Info);
 ILimage		*ilReadBinaryPpm(PPMINFO *Info);
 ILimage		*ilReadBitPbm(PPMINFO *Info);
-ILboolean	iGetWord(ILvoid);
+ILboolean	iGetWord(void);
 ILvoid		PbmMaximize(ILimage *Image);
 
 
--- DevIL-1.6.8-rc2/src-IL/include/il_psd.h.orig.orig	2008-07-16 07:54:30.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/include/il_psd.h.orig	2008-07-16 07:54:30.000000000 +0100
@@ -37,9 +37,9 @@
 
 ILushort	ChannelNum;
 
-ILboolean	iIsValidPsd(ILvoid);
+ILboolean	iIsValidPsd(void);
 ILboolean	iCheckPsd(PSDHEAD *Header);
-ILboolean	iLoadPsdInternal(ILvoid);
+ILboolean	iLoadPsdInternal(void);
 ILboolean	ReadPsd(PSDHEAD *Head);
 ILboolean	ReadGrey(PSDHEAD *Head);
 ILboolean	ReadIndexed(PSDHEAD *Head);
@@ -49,7 +49,7 @@
 ILboolean	PsdGetData(PSDHEAD *Head, ILvoid *Buffer, ILboolean Compressed);
 ILboolean	ParseResources(ILuint ResourceSize, ILubyte *Resources);
 ILboolean	GetSingleChannel(PSDHEAD *Head, ILubyte *Buffer, ILboolean Compressed);
-ILboolean	iSavePsdInternal(ILvoid);
+ILboolean	iSavePsdInternal(void);
 
 
 
--- DevIL-1.6.8-rc2/src-IL/include/il_psp.h.orig.orig	2008-07-16 07:54:30.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/include/il_psp.h.orig	2008-07-16 07:54:30.000000000 +0100
@@ -232,18 +232,18 @@
 
 
 // Function definitions
-ILboolean	iLoadPspInternal(ILvoid);
-ILboolean	iCheckPsp(ILvoid);
-ILboolean	iIsValidPsp(ILvoid);
-ILboolean	ReadGenAttributes(ILvoid);
-ILboolean	ParseChunks(ILvoid);
+ILboolean	iLoadPspInternal(void);
+ILboolean	iCheckPsp(void);
+ILboolean	iIsValidPsp(void);
+ILboolean	ReadGenAttributes(void);
+ILboolean	ParseChunks(void);
 ILboolean	ReadLayerBlock(ILuint BlockLen);
 ILboolean	ReadAlphaBlock(ILuint BlockLen);
-ILubyte		*GetChannel(ILvoid);
+ILubyte		*GetChannel(void);
 ILboolean	UncompRLE(ILubyte *CompData, ILubyte *Data, ILuint CompLen);
 ILboolean	ReadPalette(ILuint BlockLen);
-ILboolean	AssembleImage(ILvoid);
-ILboolean	Cleanup(ILvoid);
+ILboolean	AssembleImage(void);
+ILboolean	Cleanup(void);
 
 
 
--- DevIL-1.6.8-rc2/src-IL/include/il_sgi.h.orig.orig	2008-07-16 07:54:30.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/include/il_sgi.h.orig	2008-07-16 07:54:30.000000000 +0100
@@ -50,10 +50,10 @@
 
 
 // Internal functions
-ILboolean	iIsValidSgi(ILvoid);
+ILboolean	iIsValidSgi(void);
 ILboolean	iCheckSgi(iSgiHeader *Header);
-ILboolean	iLoadSgiInternal(ILvoid);
-ILboolean	iSaveSgiInternal(ILvoid);
+ILboolean	iLoadSgiInternal(void);
+ILboolean	iSaveSgiInternal(void);
 ILvoid		iExpandScanLine(ILubyte *Dest, ILubyte *Src, ILuint Bpc);
 ILint		iGetScanLine(ILubyte *ScanLine, iSgiHeader *Head, ILuint Length);
 ILint		iGetScanLineFast(ILubyte *ScanLine, iSgiHeader *Head, ILuint Length, ILubyte*);
--- DevIL-1.6.8-rc2/src-IL/include/il_stack.h.orig.orig	2008-07-16 07:54:30.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/include/il_stack.h.orig	2008-07-16 07:54:30.000000000 +0100
@@ -27,8 +27,8 @@
 
 
 // Internal functions
-ILboolean	iEnlargeStack(ILvoid);
-ILvoid		iFreeMem(ILvoid);
+ILboolean	iEnlargeStack(void);
+ILvoid		iFreeMem(void);
 
 // Globals for il_stack.c
 ILuint		StackSize = 0;
--- DevIL-1.6.8-rc2/src-IL/include/il_targa.h.orig.orig	2008-07-16 07:54:30.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/include/il_targa.h.orig	2008-07-16 07:54:30.000000000 +0100
@@ -95,8 +95,8 @@
 ILboolean	iIsValidTarga();
 ILboolean	iGetTgaHead(TARGAHEAD *Header);
 ILboolean	iCheckTarga(TARGAHEAD *Header);
-ILboolean	iLoadTargaInternal(ILvoid);
-ILboolean	iSaveTargaInternal(ILvoid);
+ILboolean	iLoadTargaInternal(void);
+ILboolean	iSaveTargaInternal(void);
 //ILvoid		iMakeString(char *Str);
 ILboolean	iReadBwTga(TARGAHEAD *Header);
 ILboolean	iReadColMapTga(TARGAHEAD *Header);
--- DevIL-1.6.8-rc2/src-IL/src/il_doom.c.orig.orig	2008-07-16 07:54:31.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/src/il_doom.c.orig	2008-07-16 07:54:31.000000000 +0100
@@ -18,8 +18,8 @@
 #include "il_doompal.h"
 
 
-ILboolean iLoadDoomInternal(ILvoid);
-ILboolean iLoadDoomFlatInternal(ILvoid);
+ILboolean iLoadDoomInternal(void);
+ILboolean iLoadDoomFlatInternal(void);
 
 
 //
--- DevIL-1.6.8-rc2/src-IL/src/il_error.c.orig.orig	2008-07-16 07:54:31.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/src/il_error.c.orig	2008-07-16 07:54:31.000000000 +0100
@@ -41,7 +41,7 @@
 
 
 //! Gets the last error on the error stack
-ILenum ILAPIENTRY ilGetError(ILvoid)
+ILenum ILAPIENTRY ilGetError(void)
 {
 	ILenum ilReturn;
 
--- DevIL-1.6.8-rc2/src-IL/src/il_files.c.orig.orig	2008-07-16 07:54:31.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/src/il_files.c.orig	2008-07-16 07:54:31.000000000 +0100
@@ -17,20 +17,20 @@
 
 
 // All specific to the next set of functions
-ILboolean	ILAPIENTRY iEofFile(ILvoid);
-ILboolean	ILAPIENTRY iEofLump(ILvoid);
-ILint		ILAPIENTRY iGetcFile(ILvoid);
-ILint		ILAPIENTRY iGetcLump(ILvoid);
+ILboolean	ILAPIENTRY iEofFile(void);
+ILboolean	ILAPIENTRY iEofLump(void);
+ILint		ILAPIENTRY iGetcFile(void);
+ILint		ILAPIENTRY iGetcLump(void);
 ILuint		ILAPIENTRY iReadFile(ILvoid *Buffer, ILuint Size, ILuint Number);
 ILuint		ILAPIENTRY iReadLump(ILvoid *Buffer, ILuint Size, ILuint Number);
 ILuint		ILAPIENTRY iSeekRFile(ILint Offset, ILuint Mode);
 ILuint		ILAPIENTRY iSeekRLump(ILint Offset, ILuint Mode);
 ILuint		ILAPIENTRY iSeekWFile(ILint Offset, ILuint Mode);
 ILuint		ILAPIENTRY iSeekWLump(ILint Offset, ILuint Mode);
-ILuint		ILAPIENTRY iTellRFile(ILvoid);
-ILuint		ILAPIENTRY iTellRLump(ILvoid);
-ILuint		ILAPIENTRY iTellWFile(ILvoid);
-ILuint		ILAPIENTRY iTellWLump(ILvoid);
+ILuint		ILAPIENTRY iTellRFile(void);
+ILuint		ILAPIENTRY iTellRLump(void);
+ILuint		ILAPIENTRY iTellWFile(void);
+ILuint		ILAPIENTRY iTellWLump(void);
 ILint		ILAPIENTRY iPutcFile(ILubyte Char);
 ILint		ILAPIENTRY iPutcLump(ILubyte Char);
 ILint		ILAPIENTRY iWriteFile(const ILvoid *Buffer, ILuint Size, ILuint Number);
@@ -341,13 +341,13 @@
 
 // Next 12 functions are the default write functions
 
-ILboolean ILAPIENTRY iEofFile(ILvoid)
+ILboolean ILAPIENTRY iEofFile(void)
 {
 	return EofProc((FILE*)FileRead);
 }
 
 
-ILboolean ILAPIENTRY iEofLump(ILvoid)
+ILboolean ILAPIENTRY iEofLump(void)
 {
 	if (ReadLumpSize)
 		return (ReadLumpPos >= ReadLumpSize);
@@ -355,7 +355,7 @@
 }
 
 
-ILint ILAPIENTRY iGetcFile(ILvoid)
+ILint ILAPIENTRY iGetcFile(void)
 {
 	if (!UseCache) {
 		return GetcProc(FileRead);
@@ -369,7 +369,7 @@
 }
 
 
-ILint ILAPIENTRY iGetcLump(ILvoid)
+ILint ILAPIENTRY iGetcLump(void)
 {
 	// If ReadLumpSize is 0, don't even check to see if we've gone past the bounds.
 	if (ReadLumpSize > 0) {
@@ -565,25 +565,25 @@
 }
 
 
-ILuint ILAPIENTRY iTellRFile(ILvoid)
+ILuint ILAPIENTRY iTellRFile(void)
 {
 	return TellRProc(FileRead);
 }
 
 
-ILuint ILAPIENTRY iTellRLump(ILvoid)
+ILuint ILAPIENTRY iTellRLump(void)
 {
 	return ReadLumpPos;
 }
 
 
-ILHANDLE ILAPIENTRY iGetFile(ILvoid)
+ILHANDLE ILAPIENTRY iGetFile(void)
 {
 	return FileRead;
 }
 
 
-const ILubyte* ILAPIENTRY iGetLump(ILvoid) {
+const ILubyte* ILAPIENTRY iGetLump(void) {
 	return (ILubyte *)ReadLump;
 }
 
@@ -683,13 +683,13 @@
 }
 
 
-ILuint ILAPIENTRY iTellWFile(ILvoid)
+ILuint ILAPIENTRY iTellWFile(void)
 {
 	return TellWProc(FileWrite);
 }
 
 
-ILuint ILAPIENTRY iTellWLump(ILvoid)
+ILuint ILAPIENTRY iTellWLump(void)
 {
 	return WriteLumpPos;
 }
--- DevIL-1.6.8-rc2/src-IL/src/il_jpeg.c.orig.orig	2008-07-16 07:54:31.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/src/il_jpeg.c.orig	2008-07-16 07:54:31.000000000 +0100
@@ -527,7 +527,7 @@
 		// Here the array is only one element long, but you could pass
 		// more than one scanline at a time if that's more convenient.
 		row_pointer[0] = &TempData[JpegInfo.next_scanline * TempImage->Bps];
-		(ILvoid) jpeg_write_scanlines(&JpegInfo, row_pointer, 1);
+		(void) jpeg_write_scanlines(&JpegInfo, row_pointer, 1);
 	}
 
 	// Step 6: Finish compression
@@ -941,7 +941,7 @@
 		// Here the array is only one element long, but you could pass
 		// more than one scanline at a time if that's more convenient.
 		row_pointer[0] = &TempData[JpegInfo->next_scanline * TempImage->Bps];
-		(ILvoid) jpeg_write_scanlines(JpegInfo, row_pointer, 1);
+		(void) jpeg_write_scanlines(JpegInfo, row_pointer, 1);
 	}
 
 	if (TempImage->Origin == IL_ORIGIN_LOWER_LEFT)
--- DevIL-1.6.8-rc2/src-IL/src/il_mdl.c.orig.orig	2008-07-16 07:54:31.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/src/il_mdl.c.orig	2008-07-16 07:54:31.000000000 +0100
@@ -16,7 +16,7 @@
 #include "il_mdl.h"
 
 
-ILboolean iLoadMdlInternal(ILvoid);
+ILboolean iLoadMdlInternal(void);
 
 
 //! Reads a .Mdl file
--- DevIL-1.6.8-rc2/src-IL/src/il_mng.c.orig.orig	2008-07-16 07:54:31.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/src/il_mng.c.orig	2008-07-16 07:54:31.000000000 +0100
@@ -185,7 +185,7 @@
 }
 
 
-ILboolean iLoadMngInternal(ILvoid);
+ILboolean iLoadMngInternal(void);
 
 // Reads a file
 ILboolean ilLoadMng(const ILstring FileName)
@@ -267,7 +267,7 @@
 }
 
 
-ILboolean iSaveMngInternal(ILvoid);
+ILboolean iSaveMngInternal(void);
 
 //! Writes a Mng file
 ILboolean ilSaveMng(const ILstring FileName)
--- DevIL-1.6.8-rc2/src-IL/src/il_pcd.c.orig.orig	2008-07-16 07:54:31.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/src/il_pcd.c.orig	2008-07-16 07:54:31.000000000 +0100
@@ -18,7 +18,7 @@
 #include "il_manip.h"
 
 
-ILboolean iLoadPcdInternal(ILvoid);
+ILboolean iLoadPcdInternal(void);
 
 //! Reads a .pcd file
 ILboolean ilLoadPcd(const ILstring FileName)
--- DevIL-1.6.8-rc2/src-IL/src/il_pic.c.orig.orig	2008-07-16 07:54:31.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/src/il_pic.c.orig	2008-07-16 07:54:31.000000000 +0100
@@ -242,7 +242,7 @@
 	ILint	i;
 	ILuint	*scan;
 
-	(ILvoid)alpha;
+	(void)alpha;
 	
 	for (i = height - 1; i >= 0; i--) {
 		scan = image + i * width;
--- DevIL-1.6.8-rc2/src-IL/src/il_pix.c.orig.orig	2008-07-16 07:54:31.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/src/il_pix.c.orig	2008-07-16 07:54:31.000000000 +0100
@@ -33,7 +33,7 @@
 #endif
 
 ILboolean iCheckPix(PIXHEAD *Header);
-ILboolean iLoadPixInternal(ILvoid);
+ILboolean iLoadPixInternal(void);
 
 
 // Internal function used to get the Pix header from the current file.
--- DevIL-1.6.8-rc2/src-IL/src/il_png.c.orig.orig	2008-07-16 07:54:31.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/src/il_png.c.orig	2008-07-16 07:54:31.000000000 +0100
@@ -36,13 +36,13 @@
 #endif
 
 
-ILboolean	iIsValidPng(ILvoid);
-ILboolean	iLoadPngInternal(ILvoid);
-ILboolean	iSavePngInternal(ILvoid);
+ILboolean	iIsValidPng(void);
+ILboolean	iLoadPngInternal(void);
+ILboolean	iSavePngInternal(void);
 
-ILint		readpng_init(ILvoid);
+ILint		readpng_init(void);
 ILboolean	readpng_get_image(ILdouble display_exponent);
-ILvoid		readpng_cleanup(ILvoid);
+ILvoid		readpng_cleanup(void);
 
 png_structp png_ptr = NULL;
 png_infop info_ptr = NULL;
@@ -178,7 +178,7 @@
 
 static ILvoid png_read(png_structp png_ptr, png_bytep data, png_size_t length)
 {
-	(ILvoid)png_ptr;
+	(void)png_ptr;
 	iread(data, 1, length);
 	return;
 }
@@ -464,7 +464,7 @@
 
 ILvoid png_write(png_structp png_ptr, png_bytep data, png_size_t length)
 {
-	(ILvoid)png_ptr;
+	(void)png_ptr;
 	iwrite(data, 1, length);
 	return;
 }
--- DevIL-1.6.8-rc2/src-IL/src/il_pnm.c.orig.orig	2008-07-16 07:54:31.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/src/il_pnm.c.orig	2008-07-16 07:54:31.000000000 +0100
@@ -404,7 +404,7 @@
 }
 
 
-ILboolean iGetWord(ILvoid)
+ILboolean iGetWord(void)
 {
 	ILint WordPos = 0;
 	ILint Current = 0;
--- DevIL-1.6.8-rc2/src-IL/src/il_pxr.c.orig.orig	2008-07-16 07:54:31.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/src/il_pxr.c.orig	2008-07-16 07:54:31.000000000 +0100
@@ -34,7 +34,7 @@
 #pragma pack(pop, pxr_struct)
 #endif
 
-ILboolean iLoadPxrInternal(ILvoid);
+ILboolean iLoadPxrInternal(void);
 
 
 //! Reads a Pxr file
--- DevIL-1.6.8-rc2/src-IL/src/il_raw.c.orig.orig	2008-07-16 07:54:31.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/src/il_raw.c.orig	2008-07-16 07:54:31.000000000 +0100
@@ -15,8 +15,8 @@
 #ifndef IL_NO_RAW
 
 
-ILboolean iLoadRawInternal(ILvoid);
-ILboolean iSaveRawInternal(ILvoid);
+ILboolean iLoadRawInternal(void);
+ILboolean iSaveRawInternal(void);
 
 
 //! Reads a raw file
--- DevIL-1.6.8-rc2/src-IL/src/il_states.c.orig.orig	2008-07-16 07:54:31.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/src/il_states.c.orig	2008-07-16 07:54:31.000000000 +0100
@@ -308,7 +308,7 @@
 }
 
 
-ILimage *iGetBaseImage(ILvoid);
+ILimage *iGetBaseImage(void);
 
 ILuint iGetActiveNum(ILenum Type)
 {
--- DevIL-1.6.8-rc2/src-IL/src/il_tiff.c.orig.orig	2008-07-16 07:54:31.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/src/il_tiff.c.orig	2008-07-16 07:54:31.000000000 +0100
@@ -36,8 +36,8 @@
 /*----------------------------------------------------------------------------*/
 
 // No need for a separate header
-static ILboolean iLoadTiffInternal(ILvoid);
-static char*     iMakeString(ILvoid);
+static ILboolean iLoadTiffInternal(void);
+static char*     iMakeString(void);
 static TIFF*     iTIFFOpen(char *Mode);
 //static ILboolean iSaveTiffInternal();
 static ILboolean iSaveTiffInternal(const char* Filename);
--- DevIL-1.6.8-rc2/src-IL/src/il_wal.c.orig.orig	2008-07-16 07:54:31.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/src/il_wal.c.orig	2008-07-16 07:54:31.000000000 +0100
@@ -29,7 +29,7 @@
 	ILuint	Value;			// ??
 } WALHEAD;
 
-ILboolean iLoadWalInternal(ILvoid);
+ILboolean iLoadWalInternal(void);
 
 
 //! Reads a .wal file
--- DevIL-1.6.8-rc2/src-IL/src/il_xpm.c.orig.orig	2008-07-16 07:54:31.000000000 +0100
+++ DevIL-1.6.8-rc2/src-IL/src/il_xpm.c.orig	2008-07-16 07:54:31.000000000 +0100
@@ -20,7 +20,7 @@
 //(not much).
 //#define XPM_DONT_USE_HASHTABLE
 
-ILboolean iLoadXpmInternal(ILvoid);
+ILboolean iLoadXpmInternal(void);
 
 
 // Reads an .xpm file
--- DevIL-1.6.8-rc2/src-ILU/include/ilu_internal.h.orig.orig	2008-07-16 07:54:31.000000000 +0100
+++ DevIL-1.6.8-rc2/src-ILU/include/ilu_internal.h.orig	2008-07-16 07:54:31.000000000 +0100
@@ -84,7 +84,7 @@
 
 
 ILuint	iluScaleAdvanced(ILuint Width, ILuint Height, ILenum Filter);
-ILubyte	*iScanFill(ILvoid);
+ILubyte	*iScanFill(void);
 
 
 #endif//INTERNAL_H
--- DevIL-1.6.8-rc2/src-ILU/src/ilu_filter.c.orig.orig	2008-07-16 07:54:31.000000000 +0100
+++ DevIL-1.6.8-rc2/src-ILU/src/ilu_filter.c.orig	2008-07-16 07:54:31.000000000 +0100
@@ -1106,7 +1106,7 @@
 
 
 //! Funny as hell filter that I stumbled upon accidentally
-ILboolean ILAPIENTRY iluAlienify(ILvoid)
+ILboolean ILAPIENTRY iluAlienify(void)
 {
 	ILfloat	Mat[3][3];
 	ILubyte	*Data;
--- DevIL-1.6.8-rc2/src-ILUT/include/ilut_internal.h.orig.orig	2008-07-16 07:54:31.000000000 +0100
+++ DevIL-1.6.8-rc2/src-ILUT/include/ilut_internal.h.orig	2008-07-16 07:54:31.000000000 +0100
@@ -43,7 +43,7 @@
 
 extern ILimage *ilutCurImage;
 
-ILvoid	ilutDefaultStates(ILvoid);
+ILvoid	ilutDefaultStates(void);
 
 
 // ImageLib Utility Toolkit's OpenGL Functions
