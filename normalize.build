#!/bin/bash
#
. build_funcs

TARNAME=normalize
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/new/n
#TAR_EXT=.tar.gz
VERSION=0.7.7
VERSIONEXTRA=
BUILD=3

WEBPAGE="http://normalize.nongnu.org/"

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 patch -p1 < ${CWD}/normalize-compressed-wav-files.patch
 patch -p1 < ${CWD}/normalize-rename-binary.patch
 patch -p1 < ${CWD}/normalize-fix-exdev-error.patch
 patch -p1 < ${CWD}/normalize-fix-flac.patch
 patch -p1 < ${CWD}/normalize-fix-manpage.patch
 patch -p1 < ${CWD}/normalize-fix-encoder-decoder-detection.patch
 patch -p1 < ${CWD}/normalize-fix-configure-ac.patch
 patch -p1 < ${CWD}/normalize-fix-zero-power-handling.patch
 patch -p1 < ${CWD}/normalize-fix-doc-audio-file-types.patch
 patch -p1 < ${CWD}/normalize-fix-parallel-test-suite.patch

 autogen.sh
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

PKGCFLAGS="-O2 -march=i686 ${CPUOPT}=i686"

if [ ${DO_CONFIGURE} == "yes" ]
then
if [ -f ./configure ]
then
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --localstatedir=/var/lib \
	    --mandir=/usr/man \
	    --with-mad \
	    --with-audiofile \
	    --disable-xmms \
	    --enable-longer-name
elif [ -f ./CMakeLists.txt ]
then
cmake -DCMAKE_C_FLAGS:STRING="${SLKCFLAGS}" \
      -DCMAKE_CXX_FLAGS:STRING="${SLKCFLAGS}" \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DMAN_INSTALL_DIR=/usr/man \
      -DLIB_SUFFIX=${LIBDIRSUFFIX} \
      -DSYSCONF_INSTALL_DIR=/etc \
      .
elif [ -f ./meson.build ]
then
  meson --prefix=/usr _BuilD_
fi

fi

if [ ${DO_MAKE} == "yes" ]
then
if [ -f ./meson.build ]
then
  ninja -C _BuilD_ || exit
else
  make ${NUM_JOBS} || exit
fi
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

if [ -f ./meson.build ]
then
  DESTDIR=${PKG} ninja -C _BuilD_ install
else
  make install DESTDIR=${PKG}
fi

strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "normalize, an audio file volume normalizer"
normalize is a tool for adjusting the volume of audio files to a 
standard level. This is useful for things like creating mixed CD's 
and mp3 collections, where different recording levels on different 
albums can cause the volume to vary greatly from song to song.

EOF

post_install

cd ${PKG}
su -c "chown -R root:root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}:${GROUP} ${PKG}"
