--- openexr_viewers-2.3.0/exrdisplay/ImageView.cpp.orig	2018-08-10 02:35:00.000000000 +0100
+++ openexr_viewers-2.3.0/exrdisplay/ImageView.cpp	2022-05-05 11:01:58.681081936 +0100
@@ -44,7 +44,7 @@
 
 #include <ImathMath.h>
 #include <ImathFun.h>
-#include <ImathLimits.h>
+//#include <ImathLimits.h>
 #include <halfFunction.h>
 
 
@@ -170,8 +170,8 @@
     //
     // find zmax and zmin values of deep data to set bound
     //
-    float zmax  = limits<float>::min();
-    float zmin = limits<float>::max();
+    float zmax  = std::numeric_limits<float>::min();
+    float zmin = std::numeric_limits<float>::max();
     _maxCount = 0;
 
     for (int k = 0; k < _zsize; k++)
--- openexr_viewers-2.3.0/exrdisplay/scaleImage.cpp.orig	2018-08-10 02:35:00.000000000 +0100
+++ openexr_viewers-2.3.0/exrdisplay/scaleImage.cpp	2022-05-05 11:02:51.361079423 +0100
@@ -41,7 +41,7 @@
 
 #include "scaleImage.h"
 
-#include <ImathLimits.h>
+//#include <ImathLimits.h>
 #include <ImathFun.h>
 #include <algorithm>
 #include <math.h>
@@ -195,8 +195,8 @@
 void
 normalizePixels (int dw, int dh, Array<Rgba> &pixels)
 {
-    float pMax = -IMATH::limits<float>::max ();
-    float pMin =  IMATH::limits<float>::max ();
+    float pMax = -std::numeric_limits<float>::max ();
+    float pMin =  std::numeric_limits<float>::max ();
 
     for (int i = 0; i < dw * dh; ++i)
     {
--- openexr_viewers-2.3.0/exrdisplay/main.cpp.orig	2018-08-10 02:35:00.000000000 +0100
+++ openexr_viewers-2.3.0/exrdisplay/main.cpp	2022-05-05 11:00:44.407085480 +0100
@@ -63,7 +63,7 @@
 #include <ImfArray.h>
 #include <ImfThreading.h>
 #include <ImfMultiPartInputFile.h>
-#include <ImathLimits.h>
+//#include <ImathLimits.h>
 
 #include <iostream>
 #include <algorithm>
@@ -781,7 +781,7 @@
     
     int lx = -1;
     int ly = -1;
-    float farPlane = limits<float>::max(); //default value of zfar plane
+    float farPlane = std::numeric_limits<float>::max(); //default value of zfar plane
     bool deepComp = true;  // attempt to composite deep images together
 
     //
