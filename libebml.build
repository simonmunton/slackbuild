#!/bin/bash
#
. build_funcs

TARNAME=libebml
TARNAMEEXTRA=
TARDIR=~/tmp/new/l
#TAR_EXT=.tar.gz
VERSION=0.7.7
VERSIONEXTRA=
BUILD=1

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}-${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}
(cd ${TARNAME}-${VERSION}
#patch -p1 < ${CWD}/.diff
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

(cd make/linux
CFLAGS="-O2 -march=i486 ${CPUOPT}=i686" \
CXXFLAGS="-O2 -march=i486 ${CPUOPT}=i686" \
make prefix=/usr || exit

make install DESTDIR=${PKG} prefix=${PKG}/usr
)

#strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

mkdir -p ${PKG}/install
cat <<EOF > ${PKG}/install/slack-desc
# HOW TO EDIT THIS FILE:
# The "handy ruler" below makes it easier to edit a package description.  Line
# up the first '|' above the ':' following the base package name, and the '|'
# on the right side marks the last column you can put a character in.  You must
# make exactly 11 lines for the formatting to be correct.  It's also
# customary to leave one space after the ':'.

          |-----handy-ruler------------------------------------------------------|
${PKGNAME}: Extensible Binary Meta Language headers/development files
${PKGNAME}: 
${PKGNAME}: EBML was designed to be a simplified binary extension of XML for
${PKGNAME}: the purpose of storing and manipulating data in a hierarchical
${PKGNAME}: form with variable field lengths.
${PKGNAME}: It uses the same paradigms as XML files, ie syntax and semantic
${PKGNAME}: are separated. So a generic EBML library could read any format
${PKGNAME}: based on it. The interpretation of data is up to a specific
${PKGNAME}: application that knows how each elements (equivalent of XML tag)
${PKGNAME}: has to be handled.
${PKGNAME}:
EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
