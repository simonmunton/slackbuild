#!/bin/bash
#
. build_funcs

TARNAME=procps
TARNAMEEXTRA=
TARSEP="-"
TARDIR=${SOURCE}/p
#TAR_EXT=.tar.gz
VERSION=3.2.8
VERSIONEXTRA=
BUILD=1

WEBPAGE="http://procps.sourceforge.net"

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 patch -p1 < ${CWD}/procps-3.2.7-selinux.patch
 patch -p1 < ${CWD}/procps-3.2.7-misc.patch
 patch -p1 < ${CWD}/procps-3.2.7-FAQ.patch
 patch -p1 < ${CWD}/procps-3.2.7-selinux-workaround.patch
 patch -p1 < ${CWD}/procps-3.2.7-noproc.patch
 patch -p1 < ${CWD}/procps-3.2.7-pseudo.patch
 patch -p1 < ${CWD}/procps-3.2.7-0x9b.patch
 patch -p1 < ${CWD}/procps-3.2.7-sysctl-writeonly.patch
 patch -p1 < ${CWD}/procps-3.2.7-top-rc.patch
 patch -p1 < ${CWD}/procps-3.2.7-top-remcpu.patch
 patch -p1 < ${CWD}/procps-3.2.7-libselinux.patch
 patch -p1 < ${CWD}/procps-3.2.7-top-env-vmsize.patch
 patch -p1 < ${CWD}/procps-3.2.7-top-env-cpuloop.patch
 patch -p1 < ${CWD}/procps-3.2.7-vmstat-cpusteal.patch
 patch -p1 < ${CWD}/procps-3.2.7-longcmd.patch
 patch -p1 < ${CWD}/procps-3.2.7-vmstat-pgpg.patch
 patch -p1 < ${CWD}/procps-3.2.7-sysctl-ignore.patch
 patch -p1 < ${CWD}/procps-3.2.7-top-sorthigh.patch
 patch -p1 < ${CWD}/procps-3.2.7-w-best.patch
 patch -p1 < ${CWD}/procps-3.2.7-watch-unicode.patch
 patch -p1 < ${CWD}/procps-3.2.7-ps-stime.patch
 patch -p1 < ${CWD}/procps-3.2.7-ps-eip64.patch
 patch -p1 < ${CWD}/procps-3.2.7-psman.patch
 patch -p1 < ${CWD}/procps-3.2.7-ps-libselinux.patch
 patch -p1 < ${CWD}/procps-3.2.7-top-cpu0.patch
 patch -p1 < ${CWD}/procps-3.2.7-top-cpuint.patch
 patch -p1 < ${CWD}/procps-3.2.7-top-manpage.patch
 patch -p1 < ${CWD}/procps-3.2.7-top-clrscr.patch
 patch -p1 < ${CWD}/procps-3.2.7-ps-man-fmt.patch
 patch -p1 < ${CWD}/procps-3.2.7-vmstat-partstats-long.patch
 patch -p1 < ${CWD}/procps-3.2.7-vmstat-header.patch
 patch -p1 < ${CWD}/procps-3.2.7-slabtop-once.patch
 patch -p1 < ${CWD}/procps-3.2.7-vmstat-timestamp.patch
 patch -p1 < ${CWD}/procps-3.2.7-vmstat-timestamp-manpage.patch
 patch -p1 < ${CWD}/procps-3.2.7-ps-cgroup.patch
 patch -p1 < ${CWD}/procps-3.2.7-vmstat-partstats-reqwrites.patch
 patch -p1 < ${CWD}/procps-3.2.7-free-hlmem.patch
 patch -p1 < ${CWD}/procps-3.2.8-threads.patch
 patch -p1 < ${CWD}/procps-enable-core.patch
 patch -p1 < ${CWD}/procps-3.2.8-setlocale.patch
 patch -p1 < ${CWD}/procps-pmap-smaps.patch
 patch -p1 < ${CWD}/procps-3.2.8-vmstat-getopt.patch
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

PKGCFLAGS="-O2 -march=i686 ${CPUOPT}=i686"

if [ ${DO_CONFIGURE} == "yes" ]
then
:
#CFLAGS="${SLKCFLAGS}" \
#CXXFLAGS="${SLKCFLAGS}" \
#./configure --prefix=/usr \
#            --sysconfdir=/etc \
#            --libdir=/usr/lib${LIBDIRSUFFIX} \
#            --localstatedir=/var/lib \
#	    --mandir=/usr/man

#cmake -DCMAKE_C_FLAGS:STRING="${SLKCFLAGS}" \
#      -DCMAKE_CXX_FLAGS:STRING="${SLKCFLAGS}" \
#      -DCMAKE_BUILD_TYPE=Release \
#      -DCMAKE_INSTALL_PREFIX=/usr \
#      -DMAN_INSTALL_DIR=/usr/man \
#      -DSYSCONF_INSTALL_DIR=/etc \
#      .

fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} CFLAGS="${SLKCFLAGS} -DW_SHOWFROM=1" || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

make install DESTDIR=${PKG}  install="install -D" ldconfig=true ln_f="ln -sf"

mv ${PKG}/usr/bin/free ${PKG}/bin
mv ${PKG}/bin/kill ${PKG}/bin/kill.procps
mv ${PKG}/usr/share/man/man1/kill.1 ${PKG}/usr/share/man/man1/kill.procps.1

(cd ${PKG}/usr/bin
 ln -sf /bin/free .
 ln -sf /bin/ps .
)

strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "procps (utilities for displaying process information)"
The procps package provides the classic set of utilities used to
display information about the processes currently running on the
machine.

EOF

post_install

cd ${PKG}
su -c "chown -R root:root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}:${GROUP} ${PKG}"
