--- xplanet-1.3.1/src/libimage/gif.c.orig	2013-02-16 19:37:47.000000000 +0000
+++ xplanet-1.3.1/src/libimage/gif.c	2016-07-16 17:06:14.725584022 +0100
@@ -179,7 +179,7 @@
 	}
     }
     
-    if (DGifCloseFile(GifFile) == GIF_ERROR) {
+    if (DGifCloseFile(GifFile, NULL) == GIF_ERROR) {
 	return(0);
     }
 
@@ -493,7 +493,7 @@
 static void QuitGifError(GifFileType *GifFile)
 {
     fprintf(stderr, "Error writing GIF file\n");
-    if (GifFile != NULL) EGifCloseFile(GifFile);
+    if (GifFile != NULL) EGifCloseFile(GifFile, NULL);
 }
 
 int 
@@ -589,7 +589,7 @@
 	Ptr += width;
     }
 
-    if (EGifCloseFile(GifFile) == GIF_ERROR)
+    if (EGifCloseFile(GifFile, NULL) == GIF_ERROR)
 
     {
 	QuitGifError(GifFile);
--- xplanet-1.3.1/src/libannotate/addSatellites.cpp.orig	2013-02-16 19:37:45.000000000 +0000
+++ xplanet-1.3.1/src/libannotate/addSatellites.cpp	2019-07-21 19:18:21.945436363 +0100
@@ -488,10 +488,10 @@
         {
             ifstream inFile(tleFile.c_str());
             char lines[3][80];
-            while (inFile.getline(lines[0], 80) != NULL)
+            while (inFile.getline(lines[0], 80))
             {
-                if ((inFile.getline(lines[1], 80) == NULL) 
-                    || (inFile.getline(lines[2], 80) == NULL))
+                if ((inFile.getline(lines[1], 80)) 
+                    || (inFile.getline(lines[2], 80)))
                 {
                     ostringstream errStr;
                     errStr << "Malformed TLE file (" << tleFile << ")?\n";
@@ -542,7 +542,7 @@
         {
             ifstream inFile(satFile.c_str());
             char *line = new char[MAX_LINE_LENGTH];
-            while (inFile.getline (line, MAX_LINE_LENGTH, '\n') != NULL)
+            while (inFile.getline (line, MAX_LINE_LENGTH, '\n'))
                 readSatelliteFile(line, planet, view, projection,
                                   planetProperties, annotationMap);
             
--- xplanet-1.3.1/src/libannotate/addArcs.cpp.orig	2013-02-16 19:37:45.000000000 +0000
+++ xplanet-1.3.1/src/libannotate/addArcs.cpp	2019-07-21 19:16:49.344440781 +0100
@@ -258,7 +258,7 @@
         {
             ifstream inFile(arcFile.c_str());
             char *line = new char[MAX_LINE_LENGTH];
-            while (inFile.getline (line, MAX_LINE_LENGTH, '\n') != NULL)
+            while (inFile.getline (line, MAX_LINE_LENGTH, '\n'))
                 readArcFile(line, planet, view, projection,
                             planetProperties, annotationMap);
             
@@ -292,7 +292,7 @@
         {
             ifstream inFile(arcFile.c_str());
             char *line = new char[256];
-            while (inFile.getline (line, 256, '\n') != NULL)
+            while (inFile.getline (line, 256, '\n'))
                 readArcFile(line, NULL, view, NULL, NULL, annotationMap);
 
             inFile.close();
--- xplanet-1.3.1/src/libannotate/addSpiceObjects.cpp.orig	2013-02-16 19:37:45.000000000 +0000
+++ xplanet-1.3.1/src/libannotate/addSpiceObjects.cpp	2019-07-21 19:18:43.852435317 +0100
@@ -524,7 +524,7 @@
         {
             ifstream inFile(kernelFile.c_str());
             char *line = new char[MAX_LINE_LENGTH];
-            while (inFile.getline(line, MAX_LINE_LENGTH, '\n') != NULL)
+            while (inFile.getline(line, MAX_LINE_LENGTH, '\n'))
             {
                 int ii = 0;
                 while (isDelimiter(line[ii]))
@@ -576,7 +576,7 @@
         {
             ifstream inFile(spiceFile.c_str());
             char *line = new char[MAX_LINE_LENGTH];
-            while (inFile.getline(line, MAX_LINE_LENGTH, '\n') != NULL)
+            while (inFile.getline(line, MAX_LINE_LENGTH, '\n'))
                 readSpiceFile(line, planetsFromSunMap, view, projection,
                               annotationMap);
             inFile.close();
--- xplanet-1.3.1/src/libannotate/addMarkers.cpp.orig	2013-02-16 19:37:45.000000000 +0000
+++ xplanet-1.3.1/src/libannotate/addMarkers.cpp	2019-07-21 19:17:19.334439350 +0100
@@ -429,7 +429,7 @@
         {
             ifstream inFile(markerFile.c_str());
             char *line = new char[MAX_LINE_LENGTH];
-            while (inFile.getline (line, MAX_LINE_LENGTH, '\n') != NULL)
+            while (inFile.getline (line, MAX_LINE_LENGTH, '\n'))
             {
                 unsigned char color[3];
                 memcpy(color, planetProperties->MarkerColor(), 3);
@@ -475,7 +475,7 @@
         {
             ifstream inFile(markerFile.c_str());
             char *line = new char[MAX_LINE_LENGTH];
-            while (inFile.getline (line, MAX_LINE_LENGTH, '\n') != NULL)
+            while (inFile.getline (line, MAX_LINE_LENGTH, '\n'))
             {
                 unsigned char color[3];
                 memcpy(color, options->Color(), 3);
--- xplanet-1.3.1/src/libmultiple/RayleighScattering.cpp.orig	2013-02-16 19:37:45.000000000 +0000
+++ xplanet-1.3.1/src/libmultiple/RayleighScattering.cpp	2019-07-21 19:19:13.678433894 +0100
@@ -369,7 +369,7 @@
 
     diskTemplate_.clear();
     limbTemplate_.clear();
-    while (inFile.getline(line, MAX_LINE_LENGTH, '\n') != NULL)
+    while (inFile.getline(line, MAX_LINE_LENGTH, '\n'))
     {
         int i = 0;
         while (isDelimiter(line[i]))
@@ -439,7 +439,7 @@
     values.clear();
 
     char line[MAX_LINE_LENGTH];
-    while (inFile.getline(line, MAX_LINE_LENGTH, '\n') != NULL)
+    while (inFile.getline(line, MAX_LINE_LENGTH, '\n'))
     {
         int i = 0;
         while (isDelimiter(line[i]))
@@ -470,7 +470,7 @@
                               double &value)
 {
     char line[MAX_LINE_LENGTH];
-    while (inFile.getline(line, MAX_LINE_LENGTH, '\n') != NULL)
+    while (inFile.getline(line, MAX_LINE_LENGTH, '\n'))
     {
         int i = 0;
         while (isDelimiter(line[i]))
--- xplanet-1.3.1/src/libmultiple/drawStars.cpp.orig	2013-02-16 19:37:45.000000000 +0000
+++ xplanet-1.3.1/src/libmultiple/drawStars.cpp	2019-07-21 19:19:32.321433005 +0100
@@ -41,7 +41,7 @@
     ifstream inFile(starMap.c_str());
 
     char line[MAX_LINE_LENGTH];
-    while (inFile.getline(line, MAX_LINE_LENGTH, '\n') != NULL)
+    while (inFile.getline(line, MAX_LINE_LENGTH, '\n'))
     {
         if (line[0] == '#') continue;
 
--- xplanet-1.3.1/src/readConfig.cpp.orig	2013-02-16 19:37:47.000000000 +0000
+++ xplanet-1.3.1/src/readConfig.cpp	2019-07-21 19:19:49.078432205 +0100
@@ -550,7 +550,7 @@
 
         ifstream inFile(configFile.c_str());
         char *line = new char[256];
-        while (inFile.getline(line, 256, '\n') != NULL)
+        while (inFile.getline(line, 256, '\n'))
             readConfig(line, planetProperties);
         
         // This condition will only be true if [default] is the only
--- xplanet-1.3.1/src/xpUtil.cpp.orig	2016-03-12 03:06:47.000000000 +0000
+++ xplanet-1.3.1/src/xpUtil.cpp	2019-07-21 19:14:56.862446148 +0100
@@ -434,6 +434,7 @@
     if (jd >= toJulian(2009, 1, 1, 0, 0, 0)) delta_at++; // 34
     if (jd >= toJulian(2012, 7, 1, 0, 0, 0)) delta_at++; // 35
     if (jd >= toJulian(2015, 7, 1, 0, 0, 0)) delta_at++; // 36
+    if (jd >= toJulian(2017, 1, 1, 0, 0, 0)) delta_at++; // 37
 
     const double J2000 = toJulian(2000, 1, 1, 12, 0, 0);
     const double m = m0 + m1 * (jd - J2000) * 86400;
--- xplanet-1.3.1/src/libdisplay/DisplayOutput.cpp.orig	2013-02-16 19:37:47.000000000 +0000
+++ xplanet-1.3.1/src/libdisplay/DisplayOutput.cpp	2019-07-21 19:15:57.109443273 +0100
@@ -51,7 +51,7 @@
     string outputFilename = options->OutputBase();
     int startIndex = options->OutputStartIndex();
     int stopIndex = options->NumTimes() + startIndex - 1;
-    if (stopIndex > 1)
+    if (stopIndex > 0)
     {
         const int digits = (int) (log10((double) stopIndex) + 1);
         char buffer[64];
