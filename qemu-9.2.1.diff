--- qemu-9.2.1/subprojects/syn-2.0.66/Cargo.toml.orig	2006-07-24 02:21:28.000000000 +0100
+++ qemu-9.2.1/subprojects/syn-2.0.66/Cargo.toml	1970-01-01 01:00:01.000000000 +0100
@@ -1,11 +1,21 @@
+# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
+#
+# When uploading crates to the registry Cargo will automatically
+# "normalize" Cargo.toml files for maximal compatibility
+# with all versions of Cargo and also rewrite `path` dependencies
+# to registry (e.g., crates.io) dependencies.
+#
+# If you are reading this file be aware that the original Cargo.toml
+# will likely look very different (and much more reasonable).
+# See Cargo.toml.orig for the original contents.
+
 [package]
+edition = "2021"
+rust-version = "1.60"
 name = "syn"
 version = "2.0.66"
 authors = ["David Tolnay <dtolnay@gmail.com>"]
-categories = ["development-tools::procedural-macro-helpers", "parser-implementations"]
-description = "Parser for Rust source code"
-documentation = "https://docs.rs/syn"
-edition = "2021"
+build = false
 include = [
     "/benches/**",
     "/Cargo.toml",
@@ -15,74 +25,236 @@
     "/src/**",
     "/tests/**",
 ]
-keywords = ["macros", "syn"]
+autobins = false
+autoexamples = false
+autotests = false
+autobenches = false
+description = "Parser for Rust source code"
+documentation = "https://docs.rs/syn"
+readme = "README.md"
+keywords = [
+    "macros",
+    "syn",
+]
+categories = [
+    "development-tools::procedural-macro-helpers",
+    "parser-implementations",
+]
 license = "MIT OR Apache-2.0"
 repository = "https://github.com/dtolnay/syn"
-rust-version = "1.60"
 
-[features]
-default = ["derive", "parsing", "printing", "clone-impls", "proc-macro"]
-derive = []
-full = []
-parsing = []
-printing = ["dep:quote"]
-visit = []
-visit-mut = []
-fold = []
-clone-impls = []
-extra-traits = []
-proc-macro = ["proc-macro2/proc-macro", "quote?/proc-macro"]
-test = ["syn-test-suite/all-features"]
+[package.metadata.docs.rs]
+all-features = true
+rustdoc-args = ["--generate-link-to-definition"]
+targets = ["x86_64-unknown-linux-gnu"]
 
-[dependencies]
-proc-macro2 = { version = "1.0.83", default-features = false }
-quote = { version = "1.0.35", optional = true, default-features = false }
-unicode-ident = "1"
-
-[dev-dependencies]
-anyhow = "1"
-automod = "1"
-flate2 = "1"
-insta = "1"
-rayon = "1"
-ref-cast = "1"
-reqwest = { version = "0.12", features = ["blocking"] }
-rustversion = "1"
-syn-test-suite = { version = "0", path = "tests/features" }
-tar = "0.4.16"
-termcolor = "1"
-walkdir = "2.3.2"
+[package.metadata.playground]
+features = [
+    "full",
+    "visit",
+    "visit-mut",
+    "fold",
+    "extra-traits",
+]
 
 [lib]
+name = "syn"
+path = "src/lib.rs"
 doc-scrape-examples = false
 
+[[test]]
+name = "test_meta"
+path = "tests/test_meta.rs"
+
+[[test]]
+name = "test_stmt"
+path = "tests/test_stmt.rs"
+
+[[test]]
+name = "test_receiver"
+path = "tests/test_receiver.rs"
+
+[[test]]
+name = "regression"
+path = "tests/regression.rs"
+
+[[test]]
+name = "test_generics"
+path = "tests/test_generics.rs"
+
+[[test]]
+name = "test_grouping"
+path = "tests/test_grouping.rs"
+
+[[test]]
+name = "test_parse_stream"
+path = "tests/test_parse_stream.rs"
+
+[[test]]
+name = "test_round_trip"
+path = "tests/test_round_trip.rs"
+
+[[test]]
+name = "test_derive_input"
+path = "tests/test_derive_input.rs"
+
+[[test]]
+name = "test_visibility"
+path = "tests/test_visibility.rs"
+
+[[test]]
+name = "test_pat"
+path = "tests/test_pat.rs"
+
+[[test]]
+name = "zzz_stable"
+path = "tests/zzz_stable.rs"
+
+[[test]]
+name = "test_item"
+path = "tests/test_item.rs"
+
+[[test]]
+name = "test_iterators"
+path = "tests/test_iterators.rs"
+
+[[test]]
+name = "test_path"
+path = "tests/test_path.rs"
+
+[[test]]
+name = "test_lit"
+path = "tests/test_lit.rs"
+
+[[test]]
+name = "test_ident"
+path = "tests/test_ident.rs"
+
+[[test]]
+name = "test_parse_quote"
+path = "tests/test_parse_quote.rs"
+
+[[test]]
+name = "test_size"
+path = "tests/test_size.rs"
+
+[[test]]
+name = "test_ty"
+path = "tests/test_ty.rs"
+
+[[test]]
+name = "test_shebang"
+path = "tests/test_shebang.rs"
+
+[[test]]
+name = "test_attribute"
+path = "tests/test_attribute.rs"
+
+[[test]]
+name = "test_asyncness"
+path = "tests/test_asyncness.rs"
+
+[[test]]
+name = "test_expr"
+path = "tests/test_expr.rs"
+
+[[test]]
+name = "test_token_trees"
+path = "tests/test_token_trees.rs"
+
+[[test]]
+name = "test_parse_buffer"
+path = "tests/test_parse_buffer.rs"
+
+[[test]]
+name = "test_precedence"
+path = "tests/test_precedence.rs"
+
 [[bench]]
 name = "rust"
+path = "benches/rust.rs"
 harness = false
-required-features = ["full", "parsing"]
+required-features = [
+    "full",
+    "parsing",
+]
 
 [[bench]]
 name = "file"
-required-features = ["full", "parsing"]
+path = "benches/file.rs"
+required-features = [
+    "full",
+    "parsing",
+]
 
-[package.metadata.docs.rs]
-all-features = true
-targets = ["x86_64-unknown-linux-gnu"]
-rustdoc-args = ["--generate-link-to-definition"]
+[dependencies.proc-macro2]
+version = "1.0.83"
+default-features = false
 
-[package.metadata.playground]
-features = ["full", "visit", "visit-mut", "fold", "extra-traits"]
+[dependencies.quote]
+version = "1.0.35"
+optional = true
+default-features = false
+
+[dependencies.unicode-ident]
+version = "1"
+
+[dev-dependencies.anyhow]
+version = "1"
+
+[dev-dependencies.automod]
+version = "1"
 
-[workspace]
-members = [
-    "dev",
-    "examples/dump-syntax",
-    "examples/heapsize/example",
-    "examples/heapsize/heapsize",
-    "examples/heapsize/heapsize_derive",
-    "examples/lazy-static/example",
-    "examples/lazy-static/lazy-static",
-    "examples/trace-var/example",
-    "examples/trace-var/trace-var",
-    "tests/features",
+[dev-dependencies.flate2]
+version = "1"
+
+[dev-dependencies.insta]
+version = "1"
+
+[dev-dependencies.rayon]
+version = "1"
+
+[dev-dependencies.ref-cast]
+version = "1"
+
+[dev-dependencies.reqwest]
+version = "0.12"
+features = ["blocking"]
+
+[dev-dependencies.rustversion]
+version = "1"
+
+[dev-dependencies.syn-test-suite]
+version = "0"
+
+[dev-dependencies.tar]
+version = "0.4.16"
+
+[dev-dependencies.termcolor]
+version = "1"
+
+[dev-dependencies.walkdir]
+version = "2.3.2"
+
+[features]
+clone-impls = []
+default = [
+    "derive",
+    "parsing",
+    "printing",
+    "clone-impls",
+    "proc-macro",
 ]
+derive = []
+extra-traits = []
+fold = []
+full = []
+parsing = []
+printing = ["dep:quote"]
+proc-macro = [
+    "proc-macro2/proc-macro",
+    "quote?/proc-macro",
+]
+test = ["syn-test-suite/all-features"]
+visit = []
+visit-mut = []
--- qemu-9.2.1/subprojects/bilge-impl-0.2.0/Cargo.toml.orig	1973-11-29 21:33:09.000000000 +0000
+++ qemu-9.2.1/subprojects/bilge-impl-0.2.0/Cargo.toml	1970-01-01 01:00:01.000000000 +0100
@@ -1,29 +1,54 @@
-[package]
-name = "bilge-impl"
-authors = ["Hecatia Elegua"]
-version.workspace = true
-description.workspace = true
-documentation.workspace = true
-edition.workspace = true
-keywords.workspace = true
-license.workspace = true
-readme.workspace = true
-repository.workspace = true
-
-[lib]
-proc-macro = true
-
-[features]
-default = []
-# Enables constness, see README.md for the specific nightly version
-nightly = []
-
-[dependencies]
-syn = { version = "2.0", features = ["full"] }
-quote = "1.0"
-proc-macro2 = "1.0"
-proc-macro-error = { version = "1.0", default-features = false }
-itertools = "0.11.0"
-
-[dev-dependencies]
-syn-path = "2.0"
+# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
+#
+# When uploading crates to the registry Cargo will automatically
+# "normalize" Cargo.toml files for maximal compatibility
+# with all versions of Cargo and also rewrite `path` dependencies
+# to registry (e.g., crates.io) dependencies.
+#
+# If you are reading this file be aware that the original Cargo.toml
+# will likely look very different (and much more reasonable).
+# See Cargo.toml.orig for the original contents.
+
+[package]
+edition = "2021"
+name = "bilge-impl"
+version = "0.2.0"
+authors = ["Hecatia Elegua"]
+description = "Use bitsized types as if they were a feature of rust."
+documentation = "https://docs.rs/bilge"
+readme = "README.md"
+keywords = [
+    "bilge",
+    "bitfield",
+    "bits",
+    "register",
+]
+license = "MIT OR Apache-2.0"
+repository = "https://github.com/hecatia-elegua/bilge"
+
+[lib]
+proc-macro = true
+
+[dependencies.itertools]
+version = "0.11.0"
+
+[dependencies.proc-macro-error]
+version = "1.0"
+default-features = false
+
+[dependencies.proc-macro2]
+version = "1.0"
+
+[dependencies.quote]
+version = "1.0"
+
+[dependencies.syn]
+version = "2.0"
+features = ["full"]
+
+[dev-dependencies.syn-path]
+version = "2.0"
+
+[features]
+default = []
+nightly = []
--- qemu-9.2.1/subprojects/bilge-0.2.0/Cargo.toml.orig	1973-11-29 21:33:09.000000000 +0000
+++ qemu-9.2.1/subprojects/bilge-0.2.0/Cargo.toml	1970-01-01 01:00:01.000000000 +0100
@@ -1,74 +1,69 @@
-[package]
-name = "bilge"
-authors = ["Hecatia Elegua"]
-version.workspace = true
-description.workspace = true
-documentation.workspace = true
-edition.workspace = true
-keywords.workspace = true
-license.workspace = true
-readme.workspace = true
-repository.workspace = true
-include = ["src/lib.rs", "LICENSE-*", "README.md"]
-
-[workspace]
-members = ["bilge-impl"]
-
-[workspace.package]
-version = "0.2.0"
-categories = ["data-structures", "no-std::no-alloc", "embedded", "rust-patterns"]
-description = "Use bitsized types as if they were a feature of rust."
-documentation = "https://docs.rs/bilge"
-edition = "2021"
-keywords   = ["bilge", "bitfield", "bits", "register"]
-license = "MIT OR Apache-2.0"
-readme = "README.md"
-repository = "https://github.com/hecatia-elegua/bilge"
-# tested with `cargo msrv`:
-# 1.64 without let...else
-# 1.34 without cargo workspace-inheritance
-rust-version = "1.65"
-
-[features]
-# at bilge devs: easiest way to test nightly is by switching the
-# channel in `rust-toolchain.toml` and switching to nightly here:
-# default = ["nightly"]
-default = []
-# Enables constness, see README.md: only usable with nightly-2022-11-03
-nightly = ["arbitrary-int/const_convert_and_const_trait_impl", "bilge-impl/nightly"]
-
-[dependencies]
-# cargo clippy workaround, we can't add `path = "../arbitrary-int"` as well
-arbitrary-int = { version = "1.2.6" }
-bilge-impl = { version = "=0.2.0", path = "bilge-impl" }
-
-[dev-dependencies]
-# tests
-rustversion = "1.0"
-trybuild = "1.0"
-custom_bits = { path = "tests/custom_bits" }
-assert_matches = "1.5.0"
-
-# examples
-# volatile = { git = "https://github.com/theseus-os/volatile" }
-volatile = "0.5.1"
-zerocopy = "0.5.0"
-
-# benches - commented out due to build times, also nightly-only
-# criterion = "0.3"
-# modular-bitfield = "0.11.2"
-# bitbybit = "1.1.4"
-# is not const enough:
-# deku = "0.16"
-
-# criterion workaround to make `cargo bench -- --verbose` work
-[lib]
-bench = false
-
-[[bench]]
-name = "compared"
-# cargo publish workaround "can't find `compared` bench at ... `benches\compared\main.rs`"
-path = "benches/compared/main.rs"
-harness = false
-# REMOVE this when benchmarking
-bench = false
+# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
+#
+# When uploading crates to the registry Cargo will automatically
+# "normalize" Cargo.toml files for maximal compatibility
+# with all versions of Cargo and also rewrite `path` dependencies
+# to registry (e.g., crates.io) dependencies.
+#
+# If you are reading this file be aware that the original Cargo.toml
+# will likely look very different (and much more reasonable).
+# See Cargo.toml.orig for the original contents.
+
+[package]
+edition = "2021"
+name = "bilge"
+version = "0.2.0"
+authors = ["Hecatia Elegua"]
+include = [
+    "src/lib.rs",
+    "LICENSE-*",
+    "README.md",
+]
+description = "Use bitsized types as if they were a feature of rust."
+documentation = "https://docs.rs/bilge"
+readme = "README.md"
+keywords = [
+    "bilge",
+    "bitfield",
+    "bits",
+    "register",
+]
+license = "MIT OR Apache-2.0"
+repository = "https://github.com/hecatia-elegua/bilge"
+
+[lib]
+bench = false
+
+[[bench]]
+name = "compared"
+path = "benches/compared/main.rs"
+bench = false
+harness = false
+
+[dependencies.arbitrary-int]
+version = "1.2.6"
+
+[dependencies.bilge-impl]
+version = "=0.2.0"
+
+[dev-dependencies.assert_matches]
+version = "1.5.0"
+
+[dev-dependencies.rustversion]
+version = "1.0"
+
+[dev-dependencies.trybuild]
+version = "1.0"
+
+[dev-dependencies.volatile]
+version = "0.5.1"
+
+[dev-dependencies.zerocopy]
+version = "0.5.0"
+
+[features]
+default = []
+nightly = [
+    "arbitrary-int/const_convert_and_const_trait_impl",
+    "bilge-impl/nightly",
+]
--- qemu-9.2.1/subprojects/proc-macro-error-attr-1.0.4/Cargo.toml.orig	2020-07-31 18:58:26.000000000 +0100
+++ qemu-9.2.1/subprojects/proc-macro-error-attr-1.0.4/Cargo.toml	2020-07-31 19:06:12.000000000 +0100
@@ -1,23 +1,33 @@
+# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
+#
+# When uploading crates to the registry Cargo will automatically
+# "normalize" Cargo.toml files for maximal compatibility
+# with all versions of Cargo and also rewrite `path` dependencies
+# to registry (e.g., crates.io) dependencies
+#
+# If you believe there's an error in this file please file an
+# issue against the rust-lang/cargo repository. If you're
+# editing this file be aware that the upstream Cargo.toml
+# will likely look very different (and much more reasonable)
+
 [package]
+edition = "2018"
 name = "proc-macro-error-attr"
 version = "1.0.4"
 authors = ["CreepySkeleton <creepy-skeleton@yandex.ru>"]
-edition = "2018"
+build = "build.rs"
 description = "Attribute macro for proc-macro-error crate"
 license = "MIT OR Apache-2.0"
 repository = "https://gitlab.com/CreepySkeleton/proc-macro-error"
-
-build = "build.rs"
-
-[lib]
-proc-macro = true
-
 [package.metadata.docs.rs]
 targets = ["x86_64-unknown-linux-gnu"]
 
-[dependencies]
-quote = "1"
-proc-macro2 = "1"
+[lib]
+proc-macro = true
+[dependencies.proc-macro2]
+version = "1"
 
-[build-dependencies]
-version_check = "0.9"
+[dependencies.quote]
+version = "1"
+[build-dependencies.version_check]
+version = "0.9"
--- qemu-9.2.1/subprojects/proc-macro-error-1.0.4/Cargo.toml.orig	2020-07-31 18:58:26.000000000 +0100
+++ qemu-9.2.1/subprojects/proc-macro-error-1.0.4/Cargo.toml	2020-07-31 19:06:58.000000000 +0100
@@ -1,44 +1,56 @@
+# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
+#
+# When uploading crates to the registry Cargo will automatically
+# "normalize" Cargo.toml files for maximal compatibility
+# with all versions of Cargo and also rewrite `path` dependencies
+# to registry (e.g., crates.io) dependencies
+#
+# If you believe there's an error in this file please file an
+# issue against the rust-lang/cargo repository. If you're
+# editing this file be aware that the upstream Cargo.toml
+# will likely look very different (and much more reasonable)
+
 [package]
+edition = "2018"
 name = "proc-macro-error"
 version = "1.0.4"
 authors = ["CreepySkeleton <creepy-skeleton@yandex.ru>"]
+build = "build.rs"
 description = "Almost drop-in replacement to panics in proc-macros"
-
-repository = "https://gitlab.com/CreepySkeleton/proc-macro-error"
 readme = "README.md"
 keywords = ["proc-macro", "error", "errors"]
 categories = ["development-tools::procedural-macro-helpers"]
 license = "MIT OR Apache-2.0"
-
-edition = "2018"
-build = "build.rs"
-
-[badges]
-maintenance = { status = "passively-maintained" }
-
+repository = "https://gitlab.com/CreepySkeleton/proc-macro-error"
 [package.metadata.docs.rs]
 targets = ["x86_64-unknown-linux-gnu"]
+[dependencies.proc-macro-error-attr]
+version = "=1.0.4"
 
-[dependencies]
-quote = "1"
-proc-macro2 = "1"
-proc-macro-error-attr = { path = "./proc-macro-error-attr", version = "=1.0.4"}
+[dependencies.proc-macro2]
+version = "1"
+
+[dependencies.quote]
+version = "1"
 
 [dependencies.syn]
 version = "1"
 optional = true
 default-features = false
+[dev-dependencies.serde_derive]
+version = "=1.0.107"
 
-[dev-dependencies]
-test-crate = { path = "./test-crate" }
-proc-macro-hack-test = { path = "./test-crate/proc-macro-hack-test" }
-trybuild = { version = "1.0.19", features = ["diff"] }
-toml = "=0.5.2" # DO NOT BUMP
-serde_derive = "=1.0.107" # DO NOT BUMP
+[dev-dependencies.toml]
+version = "=0.5.2"
 
-[build-dependencies]
-version_check = "0.9"
+[dev-dependencies.trybuild]
+version = "1.0.19"
+features = ["diff"]
+[build-dependencies.version_check]
+version = "0.9"
 
 [features]
 default = ["syn-error"]
 syn-error = ["syn"]
+[badges.maintenance]
+status = "passively-maintained"
--- qemu-9.2.1/subprojects/proc-macro2-1.0.84/Cargo.toml.orig	2006-07-24 02:21:28.000000000 +0100
+++ qemu-9.2.1/subprojects/proc-macro2-1.0.84/Cargo.toml	1970-01-01 01:00:01.000000000 +0100
@@ -1,62 +1,104 @@
+# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
+#
+# When uploading crates to the registry Cargo will automatically
+# "normalize" Cargo.toml files for maximal compatibility
+# with all versions of Cargo and also rewrite `path` dependencies
+# to registry (e.g., crates.io) dependencies.
+#
+# If you are reading this file be aware that the original Cargo.toml
+# will likely look very different (and much more reasonable).
+# See Cargo.toml.orig for the original contents.
+
 [package]
+edition = "2021"
+rust-version = "1.56"
 name = "proc-macro2"
 version = "1.0.84"
-authors = ["David Tolnay <dtolnay@gmail.com>", "Alex Crichton <alex@alexcrichton.com>"]
+authors = [
+    "David Tolnay <dtolnay@gmail.com>",
+    "Alex Crichton <alex@alexcrichton.com>",
+]
+build = "build.rs"
+autobins = false
+autoexamples = false
+autotests = false
 autobenches = false
-categories = ["development-tools::procedural-macro-helpers"]
 description = "A substitute implementation of the compiler's `proc_macro` API to decouple token-based libraries from the procedural macro use case."
 documentation = "https://docs.rs/proc-macro2"
-edition = "2021"
-keywords = ["macros", "syn"]
+readme = "README.md"
+keywords = [
+    "macros",
+    "syn",
+]
+categories = ["development-tools::procedural-macro-helpers"]
 license = "MIT OR Apache-2.0"
 repository = "https://github.com/dtolnay/proc-macro2"
-rust-version = "1.56"
 
 [package.metadata.docs.rs]
-rustc-args = ["--cfg", "procmacro2_semver_exempt"]
-rustdoc-args = ["--cfg", "procmacro2_semver_exempt", "--generate-link-to-definition"]
+rustc-args = [
+    "--cfg",
+    "procmacro2_semver_exempt",
+]
+rustdoc-args = [
+    "--cfg",
+    "procmacro2_semver_exempt",
+    "--generate-link-to-definition",
+]
 targets = ["x86_64-unknown-linux-gnu"]
 
 [package.metadata.playground]
 features = ["span-locations"]
 
-[dependencies]
-unicode-ident = "1.0"
+[lib]
+name = "proc_macro2"
+path = "src/lib.rs"
+doc-scrape-examples = false
 
-[dev-dependencies]
-flate2 = "1.0"
-quote = { version = "1.0", default-features = false }
-rayon = "1.0"
-rustversion = "1"
-tar = "0.4"
+[[test]]
+name = "comments"
+path = "tests/comments.rs"
 
-[features]
-proc-macro = []
-default = ["proc-macro"]
+[[test]]
+name = "test_fmt"
+path = "tests/test_fmt.rs"
 
-# Expose methods Span::start and Span::end which give the line/column location
-# of a token.
-span-locations = []
+[[test]]
+name = "features"
+path = "tests/features.rs"
 
-# This feature no longer means anything.
-nightly = []
+[[test]]
+name = "marker"
+path = "tests/marker.rs"
 
-[lib]
-doc-scrape-examples = false
+[[test]]
+name = "test_size"
+path = "tests/test_size.rs"
 
-[workspace]
-members = ["benches/bench-libproc-macro", "tests/ui"]
+[[test]]
+name = "test"
+path = "tests/test.rs"
 
-[patch.crates-io]
-# Our doc tests depend on quote which depends on proc-macro2. Without this line,
-# the proc-macro2 dependency of quote would be the released version of
-# proc-macro2. Quote would implement its traits for types from that proc-macro2,
-# meaning impls would be missing when tested against types from the local
-# proc-macro2.
-#
-# GitHub Actions builds that are in progress at the time that you publish may
-# spuriously fail. This is because they'll be building a local proc-macro2 which
-# carries the second-most-recent version number, pulling in quote which resolves
-# to a dependency on the just-published most recent version number. Thus the
-# patch will fail to apply because the version numbers are different.
-proc-macro2 = { path = "." }
+[dependencies.unicode-ident]
+version = "1.0"
+
+[dev-dependencies.flate2]
+version = "1.0"
+
+[dev-dependencies.quote]
+version = "1.0"
+default-features = false
+
+[dev-dependencies.rayon]
+version = "1.0"
+
+[dev-dependencies.rustversion]
+version = "1"
+
+[dev-dependencies.tar]
+version = "0.4"
+
+[features]
+default = ["proc-macro"]
+nightly = []
+proc-macro = []
+span-locations = []
--- qemu-9.2.1/subprojects/either-1.12.0/Cargo.toml.orig	2006-07-24 02:21:28.000000000 +0100
+++ qemu-9.2.1/subprojects/either-1.12.0/Cargo.toml	1970-01-01 01:00:01.000000000 +0100
@@ -1,38 +1,54 @@
+# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
+#
+# When uploading crates to the registry Cargo will automatically
+# "normalize" Cargo.toml files for maximal compatibility
+# with all versions of Cargo and also rewrite `path` dependencies
+# to registry (e.g., crates.io) dependencies.
+#
+# If you are reading this file be aware that the original Cargo.toml
+# will likely look very different (and much more reasonable).
+# See Cargo.toml.orig for the original contents.
+
 [package]
+edition = "2018"
+rust-version = "1.37"
 name = "either"
 version = "1.12.0"
 authors = ["bluss"]
-edition = "2018"
-rust-version = "1.37"
-
-license = "MIT OR Apache-2.0"
-repository = "https://github.com/rayon-rs/either"
-documentation = "https://docs.rs/either/1/"
-readme = "README-crates.io.md"
-
 description = """
 The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.
 """
+documentation = "https://docs.rs/either/1/"
+readme = "README-crates.io.md"
+keywords = [
+    "data-structure",
+    "no_std",
+]
+categories = [
+    "data-structures",
+    "no-std",
+]
+license = "MIT OR Apache-2.0"
+repository = "https://github.com/rayon-rs/either"
 
-keywords = ["data-structure", "no_std"]
-categories = ["data-structures", "no-std"]
-
-[dependencies]
-serde = { version = "1.0", optional = true, features = ["derive"] }
-
-[features]
-default = ["use_std"]
-use_std = []
+[package.metadata.docs.rs]
+features = ["serde"]
 
-[dev-dependencies]
-serde_json = "1.0.0"
+[package.metadata.playground]
+features = ["serde"]
 
 [package.metadata.release]
 no-dev-version = true
 tag-name = "{{version}}"
 
-[package.metadata.docs.rs]
-features = ["serde"]
+[dependencies.serde]
+version = "1.0"
+features = ["derive"]
+optional = true
 
-[package.metadata.playground]
-features = ["serde"]
+[dev-dependencies.serde_json]
+version = "1.0.0"
+
+[features]
+default = ["use_std"]
+use_std = []
--- qemu-9.2.1/subprojects/arbitrary-int-1.2.7/Cargo.toml.orig	2006-07-24 02:21:28.000000000 +0100
+++ qemu-9.2.1/subprojects/arbitrary-int-1.2.7/Cargo.toml	1970-01-01 01:00:01.000000000 +0100
@@ -1,36 +1,54 @@
+# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
+#
+# When uploading crates to the registry Cargo will automatically
+# "normalize" Cargo.toml files for maximal compatibility
+# with all versions of Cargo and also rewrite `path` dependencies
+# to registry (e.g., crates.io) dependencies.
+#
+# If you are reading this file be aware that the original Cargo.toml
+# will likely look very different (and much more reasonable).
+# See Cargo.toml.orig for the original contents.
+
 [package]
+edition = "2021"
 name = "arbitrary-int"
 version = "1.2.7"
-edition = "2021"
 authors = ["Daniel Lehmann <danlehmannmuc@gmail.com>"]
 description = "Modern and lightweight implementation of u2, u3, u4, ..., u127."
+readme = "README.md"
+keywords = [
+    "integer",
+    "unaligned",
+    "misaligned",
+]
+categories = [
+    "embedded",
+    "no-std",
+    "data-structures",
+]
 license = "MIT"
 repository = "https://github.com/danlehmann/arbitrary-int"
-readme = "README.md"
-keywords = ["integer", "unaligned", "misaligned"]
-categories = ["embedded", "no-std", "data-structures"]
 
-[features]
-std = []
+[dependencies.defmt]
+version = "0.3.5"
+optional = true
+
+[dependencies.num-traits]
+version = "0.2.17"
+optional = true
+default-features = false
+
+[dependencies.serde]
+version = "1.0"
+optional = true
+default-features = false
 
-# Supports const trait implementation through const_convert and const_trait_impl. Support for those was removed
-# from more recent Rust nightlies, so this feature requires an older Rust compiler
-# (2023-04-20 is broken, 2022-11-23 works. The exact day is somewhere inbetween)
-const_convert_and_const_trait_impl = []
+[dev-dependencies.serde_test]
+version = "1.0"
 
-# core::fmt::Step is currently unstable and is available on nightly behind a feature gate
-step_trait = []
-
-# Supports defmt
+[features]
+const_convert_and_const_trait_impl = []
 defmt = ["dep:defmt"]
-
-# Supports serde
 serde = ["dep:serde"]
-
-[dependencies]
-num-traits = { version = "0.2.17", default-features = false, optional = true }
-defmt = { version = "0.3.5", optional = true }
-serde = { version = "1.0", optional = true, default-features = false}
-
-[dev-dependencies]
-serde_test = "1.0"
+std = []
+step_trait = []
--- qemu-9.2.1/subprojects/quote-1.0.36/Cargo.toml.orig	2006-07-24 02:21:28.000000000 +0100
+++ qemu-9.2.1/subprojects/quote-1.0.36/Cargo.toml	1970-01-01 01:00:01.000000000 +0100
@@ -1,36 +1,50 @@
+# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
+#
+# When uploading crates to the registry Cargo will automatically
+# "normalize" Cargo.toml files for maximal compatibility
+# with all versions of Cargo and also rewrite `path` dependencies
+# to registry (e.g., crates.io) dependencies.
+#
+# If you are reading this file be aware that the original Cargo.toml
+# will likely look very different (and much more reasonable).
+# See Cargo.toml.orig for the original contents.
+
 [package]
+edition = "2018"
+rust-version = "1.56"
 name = "quote"
-version = "1.0.36" # don't forget to update html_root_url, version in readme for breaking changes
+version = "1.0.36"
 authors = ["David Tolnay <dtolnay@gmail.com>"]
 autobenches = false
-categories = ["development-tools::procedural-macro-helpers"]
 description = "Quasi-quoting macro quote!(...)"
 documentation = "https://docs.rs/quote/"
-edition = "2018"
-keywords = ["macros", "syn"]
+readme = "README.md"
+keywords = [
+    "macros",
+    "syn",
+]
+categories = ["development-tools::procedural-macro-helpers"]
 license = "MIT OR Apache-2.0"
 repository = "https://github.com/dtolnay/quote"
-rust-version = "1.56"
-
-[dependencies]
-proc-macro2 = { version = "1.0.74", default-features = false }
-
-[dev-dependencies]
-rustversion = "1.0"
-trybuild = { version = "1.0.66", features = ["diff"] }
 
-[features]
-default = ["proc-macro"]
-# Disabling the proc-macro feature removes the dynamic library dependency on
-# libproc_macro in the rustc compiler.
-proc-macro = ["proc-macro2/proc-macro"]
+[package.metadata.docs.rs]
+rustdoc-args = ["--generate-link-to-definition"]
+targets = ["x86_64-unknown-linux-gnu"]
 
 [lib]
 doc-scrape-examples = false
 
-[workspace]
-members = ["benches"]
+[dependencies.proc-macro2]
+version = "1.0.74"
+default-features = false
+
+[dev-dependencies.rustversion]
+version = "1.0"
+
+[dev-dependencies.trybuild]
+version = "1.0.66"
+features = ["diff"]
 
-[package.metadata.docs.rs]
-targets = ["x86_64-unknown-linux-gnu"]
-rustdoc-args = ["--generate-link-to-definition"]
+[features]
+default = ["proc-macro"]
+proc-macro = ["proc-macro2/proc-macro"]
--- qemu-9.2.1/subprojects/itertools-0.11.0/Cargo.toml.orig	2006-07-24 02:21:28.000000000 +0100
+++ qemu-9.2.1/subprojects/itertools-0.11.0/Cargo.toml	1970-01-01 01:00:01.000000000 +0100
@@ -1,44 +1,44 @@
+# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
+#
+# When uploading crates to the registry Cargo will automatically
+# "normalize" Cargo.toml files for maximal compatibility
+# with all versions of Cargo and also rewrite `path` dependencies
+# to registry (e.g., crates.io) dependencies.
+#
+# If you are reading this file be aware that the original Cargo.toml
+# will likely look very different (and much more reasonable).
+# See Cargo.toml.orig for the original contents.
+
 [package]
+edition = "2018"
+rust-version = "1.36.0"
 name = "itertools"
 version = "0.11.0"
-
-license = "MIT OR Apache-2.0"
-repository = "https://github.com/rust-itertools/itertools"
-documentation = "https://docs.rs/itertools/"
 authors = ["bluss"]
-readme = "README.md"
-
-description = "Extra iterator adaptors, iterator methods, free functions, and macros."
-
-keywords = ["iterator", "data-structure", "zip", "product", "group-by"]
-categories = ["algorithms", "rust-patterns"]
 exclude = ["/bors.toml"]
+description = "Extra iterator adaptors, iterator methods, free functions, and macros."
+documentation = "https://docs.rs/itertools/"
+readme = "README.md"
+keywords = [
+    "iterator",
+    "data-structure",
+    "zip",
+    "product",
+    "group-by",
+]
+categories = [
+    "algorithms",
+    "rust-patterns",
+]
+license = "MIT OR Apache-2.0"
+repository = "https://github.com/rust-itertools/itertools"
 
-edition = "2018"
-
-rust-version = "1.36.0"
+[profile.bench]
+debug = 2
 
 [lib]
-bench = false
 test = false
-
-[dependencies]
-either = { version = "1.0", default-features = false }
-
-[dev-dependencies]
-rand = "0.7"
-criterion = "0.4.0"
-paste = "1.0.0"  # Used in test_std to instantiate generic tests
-permutohedron = "0.2"
-quickcheck = { version = "0.9", default_features = false }
-
-[features]
-default = ["use_std"]
-use_std = ["use_alloc", "either/use_std"]
-use_alloc = []
-
-[profile]
-bench = { debug = true }
+bench = false
 
 [[bench]]
 name = "tuple_combinations"
@@ -71,3 +71,31 @@
 [[bench]]
 name = "powerset"
 harness = false
+
+[dependencies.either]
+version = "1.0"
+default-features = false
+
+[dev-dependencies.criterion]
+version = "0.4.0"
+
+[dev-dependencies.paste]
+version = "1.0.0"
+
+[dev-dependencies.permutohedron]
+version = "0.2"
+
+[dev-dependencies.quickcheck]
+version = "0.9"
+default_features = false
+
+[dev-dependencies.rand]
+version = "0.7"
+
+[features]
+default = ["use_std"]
+use_alloc = []
+use_std = [
+    "use_alloc",
+    "either/use_std",
+]
--- qemu-9.2.1/linux-user/syscall.c.orig	2025-02-11 21:08:13.000000000 +0000
+++ qemu-9.2.1/linux-user/syscall.c	2025-02-12 16:42:31.186304826 +0000
@@ -358,19 +358,6 @@
 #define __NR_sys_sched_setaffinity __NR_sched_setaffinity
 _syscall3(int, sys_sched_setaffinity, pid_t, pid, unsigned int, len,
           unsigned long *, user_mask_ptr);
-/* sched_attr is not defined in glibc */
-struct sched_attr {
-    uint32_t size;
-    uint32_t sched_policy;
-    uint64_t sched_flags;
-    int32_t sched_nice;
-    uint32_t sched_priority;
-    uint64_t sched_runtime;
-    uint64_t sched_deadline;
-    uint64_t sched_period;
-    uint32_t sched_util_min;
-    uint32_t sched_util_max;
-};
 #define __NR_sys_sched_getattr __NR_sched_getattr
 _syscall4(int, sys_sched_getattr, pid_t, pid, struct sched_attr *, attr,
           unsigned int, size, unsigned int, flags);
