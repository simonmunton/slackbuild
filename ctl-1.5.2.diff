--- ctl-1.5.2/CMakeLists.txt.orig	2022-05-05 10:10:13.871573261 +0100
+++ ctl-1.5.2/CMakeLists.txt	2022-05-05 11:59:15.092484823 +0100
@@ -49,8 +49,8 @@
 add_subdirectory(unittest EXCLUDE_FROM_ALL)
 
 # Add all targets to the build-tree export set
-export( TARGETS IlmCtl IlmCtlMath IlmCtlSimd FILE "${PROJECT_BINARY_DIR}/CTLLibraryDepends.cmake" )
-export(PACKAGE CTL)
+#export( TARGETS IlmCtl IlmCtlMath IlmCtlSimd FILE "${PROJECT_BINARY_DIR}/CTLLibraryDepends.cmake" )
+#export(PACKAGE CTL)
  
 # Create a CTLBuildTreeSettings.cmake file for the use from the build tree
 file(RELATIVE_PATH CONF_REL_INCLUDE_DIR "${INSTALL_CMAKE_DIR}" "${CMAKE_INSTALL_FULL_INCLUDEDIR}")
@@ -59,6 +59,7 @@
 configure_file(config/CTLConfigVersion.cmake.in "${PROJECT_BINARY_DIR}/CTLConfigVersion.cmake" @ONLY)
 
 if ( PKG_CONFIG_FOUND )
+string(REPLACE ";" " " IlmBase_LDFLAGS_str "${IlmBase_LDFLAGS}")
 configure_file(config/CTL.pc.in "${PROJECT_BINARY_DIR}/CTL.pc" @ONLY)
 install( FILES "${PROJECT_BINARY_DIR}/CTL.pc" DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig COMPONENT dev )
 endif()
--- ctl-1.5.2/lib/IlmImfCtl/CMakeLists.txt.orig	2022-05-05 10:10:13.873573260 +0100
+++ ctl-1.5.2/lib/IlmImfCtl/CMakeLists.txt	2022-05-05 10:47:02.158467897 +0100
@@ -11,6 +11,7 @@
 
 install( FILES ImfCtlApplyTransforms.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/OpenEXR )
 
-export( TARGETS IlmImfCtl IlmCtl FILE "${PROJECT_BINARY_DIR}/CTLLibraryDepends.cmake" )
+#export( TARGETS IlmImfCtl IlmCtl FILE "${PROJECT_BINARY_DIR}/CTLLibraryDepends.cmake" )
 
-install( TARGETS IlmImfCtl DESTINATION ${CMAKE_INSTALL_LIBDIR} )
+install( TARGETS IlmImfCtl EXPORT CTLLibraryDepends DESTINATION ${CMAKE_INSTALL_LIBDIR} )
+install(EXPORT CTLLibraryDepends DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME} )
--- ctl-1.5.2/lib/IlmCtlMath/CtlPointTree.h.orig	2014-06-03 02:11:24.000000000 +0100
+++ ctl-1.5.2/lib/IlmCtlMath/CtlPointTree.h	2022-05-05 10:22:09.399539121 +0100
@@ -181,7 +181,7 @@
 	    double bl = (_points[b] - _center).length2();
 
 	    volatile double delta = fabs (al - bl);
-	    const double eps = 2.0 * Imath::limits<double>::epsilon();
+	    const double eps = 2.0 * std::numeric_limits<double>::epsilon();
 
     	    //
 	    // Impose strict weak ordering... if the lengths are the same,
--- ctl-1.5.2/lib/IlmCtl/CMakeLists.txt.orig	2022-05-05 10:10:13.872573260 +0100
+++ ctl-1.5.2/lib/IlmCtl/CMakeLists.txt	2022-05-05 10:50:14.947115513 +0100
@@ -50,4 +50,4 @@
 	CtlVersion.h
  DESTINATION include/CTL )
 
-install( TARGETS IlmCtl DESTINATION ${CMAKE_INSTALL_LIBDIR} )
+install( TARGETS IlmCtl EXPORT CTLLibraryDepends DESTINATION ${CMAKE_INSTALL_LIBDIR} )
--- ctl-1.5.2/lib/dpx/dpx.hh.orig	2014-06-03 02:11:24.000000000 +0100
+++ ctl-1.5.2/lib/dpx/dpx.hh	2022-05-05 10:29:01.632519452 +0100
@@ -297,7 +297,7 @@
 		compliance_e current_compliance;
 		endian_mode_e current_endian_mode;
 
-		std::istream::streampos header_start;
+		std::streampos header_start;
 
 	public:
 		virtual ~dpx();
--- ctl-1.5.2/configure.cmake.orig	2022-05-05 10:10:13.872573260 +0100
+++ ctl-1.5.2/configure.cmake	2022-05-05 10:18:32.850549453 +0100
@@ -1,7 +1,7 @@
 # Make Pkg-Config required.
 find_package( PkgConfig )
 
-PKG_CHECK_MODULES ( IlmBase REQUIRED IlmBase )
+PKG_CHECK_MODULES ( IlmBase REQUIRED Imath )
 if(IlmBase_FOUND)
   message( STATUS "found IlmBase, version ${IlmBase_VERSION}" )
   ###
@@ -39,6 +39,8 @@
 PKG_CHECK_MODULES ( OpenEXR REQUIRED OpenEXR )
 if (OpenEXR_FOUND)
   message( STATUS "Found OpenEXR, version ${OpenEXR_VERSION}" )
+  include_directories( ${OpenEXR_INCLUDE_DIRS} )
+  link_directories( ${OpenEXR_LIBRARY_DIRS} )
 else()
   message( WARNING "Unable to find OpenEXR libraries, disabling" )
 endif()
--- ctl-1.5.2/config/CTL.pc.in.orig	2022-05-05 10:10:13.872573260 +0100
+++ ctl-1.5.2/config/CTL.pc.in	2022-05-05 11:24:36.875017133 +0100
@@ -5,5 +5,5 @@
 Name: CTL
 Description: CTL interpreter library
 Version: @CTL_VERSION@
-Libs: -L${libdir} -lIlmCtlSimd -lIlmCtlMath -lIlmCtl @IlmBase_LDFLAGS@
+Libs: -L${libdir} -lIlmCtlSimd -lIlmCtlMath -lIlmCtl @IlmBase_LDFLAGS_str@
 Cflags: @IlmBase_CFLAGS@ -I${CTL_includedir}
--- ctl-1.5.2/ctlrender/exr_file.cc.orig	2014-06-03 02:11:24.000000000 +0100
+++ ctl-1.5.2/ctlrender/exr_file.cc	2022-05-05 10:30:01.403516600 +0100
@@ -63,6 +63,8 @@
 #include <ImfChannelList.h>
 #include <Iex.h>
 
+#include <fstream>
+
 bool exr_read(const char *name, float scale, ctl::dpx::fb<float> *pixels,
               format_t *format) {
 	std::ifstream ins;
