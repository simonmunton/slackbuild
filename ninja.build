#!/bin/bash
#
. build_funcs

TARNAME=ninja
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/new/n
#TAR_EXT=.tar.gz
VERSION=1.10.0
VERSIONEXTRA=
BUILD=1

WEBPAGE="https://ninja-build.org/"

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 #patch -p1 < ${CWD}/
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

PKGCFLAGS="-O2 -march=i686 ${CPUOPT}=i686"

if [ ${DO_CONFIGURE} == "yes" ]
then
if [ -f ./configure ]
then
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --localstatedir=/var/lib \
	    --mandir=/usr/man
elif [ -f ./CMakeLists.txt ]
then
cmake -DCMAKE_C_FLAGS:STRING="${SLKCFLAGS}" \
      -DCMAKE_CXX_FLAGS:STRING="${SLKCFLAGS}" \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DMAN_INSTALL_DIR=/usr/man \
      -DLIB_SUFFIX=${LIBDIRSUFFIX} \
      -DSYSCONF_INSTALL_DIR=/etc \
      .
fi

fi

if [ ${DO_MAKE} == "yes" ]
then
./configure.py --bootstrap
./ninja manual
#make ${NUM_JOBS} || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

#make install DESTDIR=${PKG}
mkdir -p ${PKG}/usr/bin ${PKG}/usr/share/bash-completion/completions

cp ninja ${PKG}/usr/bin
cp misc/bash-completion ${PKG}/usr/share/bash-completion/completions

strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO doc/manual.html \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "Ninja is a small build system with a focus on speed."
Ninja is yet another build system. It takes as input the 
interdependencies of files (typically source code and output 
executables) and orchestrates building them, quickly.

Ninja joins a sea of other build systems. Its distinguishing goal is 
to be fast. It is born from my work on the Chromium browser project,
which has over 30,000 source files and whose other build systems 
(including one built from custom non-recursive Makefiles) can take 
ten seconds to start building after changing one file. Ninja is under 
a second.

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
