#!/bin/bash
#
. build_funcs

TARNAME=getfem++
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/new/g
#TAR_EXT=.tar.gz
VERSION=3.1
VERSIONEXTRA=
BUILD=3

WEBPAGE="http://home.gna.org/getfem/"

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 #patch -p1 < ${CWD}/
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

if [ ${DO_CONFIGURE} == "yes" ]
then
CFLAGS="-O2 -march=i486 ${CPUOPT}=i686" \
CXXFLAGS="-O2 -march=i486 ${CPUOPT}=i686" \
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --localstatedir=/var/lib \
	    --mandir=/usr/man \
	    --enable-shared \
	    --disable-static \
	    --enable-python \
	    --enable-boost

(cd superlu
 sed -i -e 's/-lgfortranbegin//' Makefile
)
(cd src
 sed -i -e 's/-lgfortranbegin//' Makefile
)
 sed -i -e 's/-lgfortranbegin//' getfem-config
fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

make install DESTDIR=${PKG}

rm -rf ${PKG}/usr/getfem_toolbox
#rm -f ${PKG}/usr/lib/*.a

#strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "C++ library for finite element methods"
A generic and efficient C++ library for finite element methods. The 
goal is to provide a library allowing the computation of any 
elementary matrix (even for mixed finite element methods) on the 
largest class of methods and elements, and for arbitrary dimension 
(i.e. not only 2D and 3D problems). 

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
