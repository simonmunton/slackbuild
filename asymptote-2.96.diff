--- asymptote-2.96/LspCpp/src/jsonrpc/TcpServer.cpp.orig	2025-02-07 06:17:43.000000000 +0000
+++ asymptote-2.96/LspCpp/src/jsonrpc/TcpServer.cpp	2025-02-08 16:27:03.035649394 +0000
@@ -190,7 +190,7 @@
     /// The io_context used to perform asynchronous operations.
     boost::asio::io_context io_context_;
 
-    std::shared_ptr<boost::asio::io_context::work> work;
+    std::shared_ptr<boost::asio::executor_work_guard<boost::asio::io_context::executor_type>> work;
 
     std::shared_ptr<tcp_connect_session> _connect_session;
     /// Acceptor used to listen for incoming connections.
@@ -213,7 +213,8 @@
 
 {
 
-    d_ptr->work = std::make_shared<boost::asio::io_context::work>(d_ptr->io_context_);
+    d_ptr->work = std::make_shared<boost::asio::executor_work_guard<boost::asio::io_context::executor_type>>(boost::asio::make_work_guard(d_ptr->io_context_));
+
 
     // Open the acceptor with the option to reuse the address (i.e. SO_REUSEADDR).
     boost::asio::ip::tcp::resolver resolver(d_ptr->io_context_);
--- asymptote-2.96/LspCpp/src/jsonrpc/WebSocketServer.cpp.orig	2025-02-07 06:17:43.000000000 +0000
+++ asymptote-2.96/LspCpp/src/jsonrpc/WebSocketServer.cpp	2025-02-08 16:28:33.571655473 +0000
@@ -113,7 +113,7 @@
     /// The io_context used to perform asynchronous operations.
     boost::asio::io_context io_context_;
 
-    std::shared_ptr<boost::asio::io_context::work> work;
+    std::shared_ptr<boost::asio::executor_work_guard<boost::asio::io_context::executor_type>> work;
 
     /// Acceptor used to listen for incoming connections.
     boost::asio::ip::tcp::acceptor acceptor_;
@@ -217,7 +217,7 @@
 
 {
 
-    d_ptr->work = std::make_shared<boost::asio::io_context::work>(d_ptr->io_context_);
+    d_ptr->work = std::make_shared<boost::asio::executor_work_guard<boost::asio::io_context::executor_type>>(boost::asio::make_work_guard(d_ptr->io_context_));
 
     // Open the acceptor with the option to reuse the address (i.e. SO_REUSEADDR).
     boost::asio::ip::tcp::resolver resolver(d_ptr->io_context_);
--- asymptote-2.96/LspCpp/include/LibLsp/lsp/ProcessIoService.h.orig	2025-02-07 06:17:43.000000000 +0000
+++ asymptote-2.96/LspCpp/include/LibLsp/lsp/ProcessIoService.h	2025-02-08 16:44:27.307719505 +0000
@@ -8,13 +8,13 @@
 {
 public:
     using IOService = boost::asio::io_context;
-    using Work = boost::asio::io_context::work;
+    using Work = boost::asio::executor_work_guard<boost::asio::io_context::executor_type>;
     using WorkPtr = std::unique_ptr<Work>;
 
     ProcessIoService()
     {
 
-        work_ = std::unique_ptr<Work>(new Work(ioService_));
+        work_ = std::make_unique<Work>(boost::asio::make_work_guard(ioService_));
         auto temp_thread_ = new std::thread([this] { ioService_.run(); });
         thread_ = std::unique_ptr<std::thread>(temp_thread_);
     }
