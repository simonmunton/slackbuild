--- ppracer-0.3.1/src/ppgltk/FT/FTTextureGlyph.h.orig	2005-02-18 10:16:04.000000000 +0000
+++ ppracer-0.3.1/src/ppgltk/FT/FTTextureGlyph.h	2008-12-16 08:57:55.000000000 +0000
@@ -52,7 +52,7 @@
          * Reset the currently active texture to zero to get into a known state before
          * drawing a string. This is to get round possible threading issues.
          */
-        static void FTTextureGlyph::ResetActiveTexture(){ activeTextureID = 0;}
+        static void ResetActiveTexture(){ activeTextureID = 0;}
         
     private:
         /**
--- ppracer-0.3.1/configure.orig	2005-02-27 18:43:18.000000000 +0000
+++ ppracer-0.3.1/configure	2010-06-28 22:14:05.000000000 +0100
@@ -8147,16 +8147,16 @@
 PKG_CONFIG="pkg-config"
 
   if test x$with_libpng != xno && test -z "$LIBPNG"; then
-    echo "$as_me:$LINENO: checking for libpng12" >&5
-echo $ECHO_N "checking for libpng12... $ECHO_C" >&6
-    if $PKG_CONFIG --exists libpng12 ; then
+    echo "$as_me:$LINENO: checking for libpng14" >&5
+echo $ECHO_N "checking for libpng14... $ECHO_C" >&6
+    if $PKG_CONFIG --exists libpng14 ; then
         echo "$as_me:$LINENO: result: yes" >&5
 echo "${ECHO_T}yes" >&6
         PNG='png'
-		PNG_DEP_CFLAGS_PACKAGES=libpng12
-		PNG_LIBS=`$PKG_CONFIG --libs libpng12`
-		PNG_CXXFLAGS=`$PKG_CONFIG --cflags libpng12`
-		PNG_VERSION=`$PKG_CONFIG --modversion libpng12`
+		PNG_DEP_CFLAGS_PACKAGES=libpng14
+		PNG_LIBS=`$PKG_CONFIG --libs libpng14`
+		PNG_CXXFLAGS=`$PKG_CONFIG --cflags libpng14`
+		PNG_VERSION=`$PKG_CONFIG --modversion libpng14`
     else
       echo "$as_me:$LINENO: result: no" >&5
 echo "${ECHO_T}no" >&6
@@ -10191,7 +10191,7 @@
 echo
 echo PlanetPenguin Racer $VERSION
 echo
-echo libpng12 ........... $PNG_VERSION
+echo libpng14 ........... $PNG_VERSION
 
 if test "$customtcl" = "yes"; then
     echo tcl include path ... $with_tcl_inc
--- ppracer-0.3.1/src/ppgltk/images/png_reader.cpp.orig	2005-02-27 09:10:47.000000000 +0000
+++ ppracer-0.3.1/src/ppgltk/images/png_reader.cpp	2010-06-28 22:18:23.000000000 +0100
@@ -77,7 +77,7 @@
 	
 	
 	png_get_IHDR(png_ptr, info_ptr, &width, &height,
-       &bit_depth, &color_type, &interlace_type,int_p_NULL, int_p_NULL);
+       &bit_depth, &color_type, &interlace_type,NULL, NULL);
 	
 	if(bit_depth == 16)
         png_set_strip_16(png_ptr);
@@ -88,7 +88,7 @@
 		png_set_expand(png_ptr);
 		png_read_update_info(png_ptr, info_ptr);
 		png_get_IHDR(png_ptr, info_ptr, &width, &height,
-			   &bit_depth, &color_type, &interlace_type,int_p_NULL, int_p_NULL);
+			   &bit_depth, &color_type, &interlace_type,NULL, NULL);
 	}
 	
 	if( color_type == PNG_COLOR_TYPE_GRAY ||
@@ -96,7 +96,7 @@
 		png_set_gray_to_rgb(png_ptr);
 		png_read_update_info(png_ptr, info_ptr);
 		png_get_IHDR(png_ptr, info_ptr, &width, &height,
-			   &bit_depth, &color_type, &interlace_type,int_p_NULL, int_p_NULL);
+			   &bit_depth, &color_type, &interlace_type,NULL, NULL);
 	}
 		
 	this->width=width;
@@ -114,7 +114,7 @@
 	}
 	
 	png_read_end(png_ptr, info_ptr);
-	png_destroy_read_struct(&png_ptr, &info_ptr, png_infopp_NULL);
+	png_destroy_read_struct(&png_ptr, &info_ptr, NULL);
 	fclose(fp);
 }
 
