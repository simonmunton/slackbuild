#!/bin/bash
#
. ../build_funcs

TARNAME=plasma-workspace
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/new/k/kde-plasma-5.27.8
#TAR_EXT=.tar.gz
VERSION=5.27.8
VERSIONEXTRA=
BUILD=1

WEBPAGE=""

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-5.27.8 ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
# patch -p1 < ${CWD}/plasma-workspace-coloration.patch
# patch -p1 < ${CWD}/plasma-workspace-c7ba560ccaac5e469cb2d6bf66c39e1acf967454.patch
# patch -p1 < ${CWD}/plasma-workspace-48ccb433ca79e94ef705734d9cab599f01df97e8.patch
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

# This avoids compiling a version number into KDE's .la files:
QTDIR=/usr/lib${LIBDIRSUFFIX}/qt5
export QTDIR

PKGCFLAGS="-O2 -march=i686 ${CPUOPT}=i686"

mkdir _BuilD_
cd _BuilD_

if [ ${DO_CONFIGURE} == "yes" ]
then
cmake -DCMAKE_C_FLAGS:STRING="${SLKCFLAGS}" \
      -DCMAKE_CXX_FLAGS:STRING="${SLKCFLAGS}" \
      -DCMAKE_BUILD_TYPE=RelWithDebInfo \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DMAN_INSTALL_DIR=/usr/man \
      -DLIB_SUFFIX=${LIBDIRSUFFIX} \
      -DSYSCONF_INSTALL_DIR=/etc/kde \
      -DQML_INSTALL_DIR=lib${LIBDIRSUFFIX}/qt5/qml \
      -DQT_PLUGIN_INSTALL_DIR=lib${LIBDIRSUFFIX}/qt5/plugins \
      -DKDE_INSTALL_USE_QT_SYS_PATHS=ON \
      -DHAVE_SHADOW=TRUE \
      -Wno-dev \
      .. \
      2>&1 | tee _Build_config.log
fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

make install DESTDIR=${PKG}

cd ..


SLACKPAM=yes
SLKELOGIND=yes

# Use ck-launch-session in runlevel 3 if that is available,
# to start and attach a ConsoleKit session to the X session:
mkdir -p ${PKG}/etc/X11/xinit
cat ${CWD}/plasma-workspace/xinit/xinitrc.kde \
  | sed -e "s/@LIBDIRSUFFIX@/${LIBDIRSUFFIX}/g" \
  > ${PKG}/etc/X11/xinit/xinitrc.kde
chmod 0755 ${PKG}/etc/X11/xinit/xinitrc.kde

# Add a script that launches a Plasma Wayland session from the commandline:
mkdir -p ${PKG}/usr/bin
cat ${CWD}/plasma-workspace/scripts/startkwayland \
  | sed -e "s/@LIBDIRSUFFIX@/${LIBDIRSUFFIX}/g" \
  > ${PKG}/usr/bin/startkwayland
chmod 0755 ${PKG}/usr/bin/startkwayland

# Install custom "full wayland" session
pushd ${PKG}/usr/share/wayland-sessions/
sed '/^Name/d;s/^Exec=/Exec=env GDK_BACKEND=wayland QT_QPA_PLATFORM=wayland /' plasmawayland.desktop > z_plasmafullwayland.desktop
echo 'Name=Plasma (Full Wayland)' >> z_plasmafullwayland.desktop
popd

# Add a "fail-safe" version of KDE Plasma desktop session.
# Prefix the name with "z_" because SDDM is braindead:
mkdir -p ${PKG}/usr/share/xsessions
cat ${CWD}/plasma-workspace/xsession/plasma-safe.desktop \
  | sed -e "s,@PREFIX@,/usr,g" \
  >  ${PKG}/usr/share/xsessions/z_plasma-safe.desktop

# Move the polkit dbus configuration files to the proper place:
mkdir -p ${PKG}/etc
mv ${PKG}/etc/kde/dbus-1 ${PKG}/etc/

if [ "$SLACKPAM" == "no" ]; then
  # For shadow, this file needs to be setuid root just like the KDE4 version:
  if [ -f ${PKG}/usr/lib${LIBDIRSUFFIX}/kcheckpass ]; then
    chmod +s ${PKG}/usr/lib${LIBDIRSUFFIX}/kcheckpass
  fi

  # ck-launch-session is needed for a Wayland session, since we do not have PAM:
  sed -e 's/^Exec=dbus-launch/Exec=ck-launch-session dbus-launch --sh-syntax/' \
    -i ${PKG}/usr/share/wayland-sessions/plasmawayland.desktop
else
  # Install a PAM file for Plasma5 workspace:
  install -Dm644 ${CWD}/plasma-workspace/pam.d/kde ${PKG}/etc/pam.d/kde.new
  doinst_config etc/pam.d/kde.new
fi

if [ "$SLKELOGIND" == "yes" ]; then
  # Since elogind does not set DBUS_SESSION_BUS_ADDRESS we need to start
  # Plasma X11 session through dbus-run-session like Wayland is launched:
  sed -i ${PKG}/usr/share/xsessions/plasma.desktop \
      -e "s,^Exec=/,Exec=dbus-run-session /,"
fi



make_debug_files
#strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF
EOF

post_install

cd ${PKG}
su -c "chown -R root:root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
chmod +s usr/lib${LIBDIRSUFFIX}/kcheckpass ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}:${GROUP} ${PKG}"
