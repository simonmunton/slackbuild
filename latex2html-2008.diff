--- latex2html-2008/versions/html3_2.pl.orig	2002-11-29 11:49:19.000000000 +0000
+++ latex2html-2008/versions/html3_2.pl	2009-01-05 14:57:18.000000000 +0000
@@ -406,9 +406,7 @@
 	    }
 	    $celldata .= ' ' if ($celldata =~ /\\\w+$/);
 
-	    $* = 1;    # multiline matching ON
-	    $celldata =~ s/$wrap_parbox_rx/$6/g;
-	    $* = 0;    # multiline matching OFF
+	    $celldata =~ s/$wrap_parbox_rx/$6/gm;
 #	    $at_text .= $celldata;
 #	    if ( $#colspec > -1) {
 #	        $colspec[$#colspec] .= join('', "<TD ALIGN=\"LEFT\">",$celldata,'</TD>');
@@ -434,9 +432,7 @@
 	    }
 	    $celldata .= ' ' if ($celldata =~ /\\\w+$/);
 
-	    $* = 1;    # multiline matching ON
-	    $celldata =~ s/$wrap_parbox_rx/$6/g;
-	    $* = 0;    # multiline matching OFF
+	    $celldata =~ s/$wrap_parbox_rx/$6/gm;
 	    $at_text .= $celldata;
 
 	} elsif ( $char =~ /;|\&/ ) {
@@ -596,9 +592,7 @@
 
     while (/\\parbox/) {
 	local($parlength) = length($_);
-	$* = 1;    # multiline matching ON
-	s/$wrap_parbox_rx/&convert_parbox_newlines($6)/eg;
-	$* = 0;    # multiline matching OFF
+	s/$wrap_parbox_rx/&convert_parbox_newlines($6)/egm;
 
 	if ($parlength == length($_)) {
 	    print "\n*** \\parbox's remain in table!!\n";
@@ -823,9 +817,7 @@
 		}
 		$colspec = &translate_environments("$OP$tmp$CP$colspec$OP$tmp$CP");
 		$colspec = &translate_commands($colspec);
-		$* = 1;
-		while ($colspec =~ s/<(\w+)>\s*<\/\1>//g) {};
-		$* = 0;
+		while ($colspec =~ s/<(\w+)>\s*<\/\1>//gm) {};
 		$colspec = ';SPMnbsp;' if ($colspec =~ /^\s*$/);
 		$colspec = join('', $reopens, $colspec
 		        , (@$open_tags_R ? &close_all_tags() : '')
@@ -966,7 +958,7 @@
 	$ecomm = "\n\\end{$env}";
     } unless ($env =~/tex2html/);
     $_ = &revert_to_raw_tex;
-    $* = 1; s/^\s+//s; s/\s+$//s; $* = 0;
+    s/^\s+//s; s/\s+$//sm;
     $_ = $scomm . $_ . $ecomm;
     return() if (length($_) < 16);
     $global{'verbatim_counter'}++;
@@ -1057,20 +1049,19 @@
     local($seqno) = join('',"\n<TD$eqno_class WIDTH=10 ALIGN=\""
                          , (($EQN_TAGS =~ /L/)? 'LEFT': 'RIGHT')
 		         , "\">\n");
-    $* = 1;
     do { # get the equation number
 	$global{'eqn_number'}++;
 	$eqno = &translate_commands('\theequation');
-    } unless ((s/(\\nonumber|\\notag)//g)||(/\\tag/));
-    if (/\\tag(\*)?/){
+    } unless ((s/(\\nonumber|\\notag)//gm)||(/\\tag/m));
+    if (/\\tag(\*)?/m){
 	# AmS-TEX line-number tags.
 	if (defined  &get_eqn_number ) {
 	    ($eqno, $_) = &get_eqn_number(1,$_);
 	} else {
-	    s/\\tag(\*)?//;
+	    s/\\tag(\*)?//m;
 	    local($nobrack,$before) = ($1,$`);
 	    $_ = $';
-	    s/next_pair_pr_rx//o;
+	    s/next_pair_pr_rx//om;
 	    if ($nobrack) { $eqno = $2; }
 	    else { $eqno = join('',$EQNO_START, $2, $EQNO_END) };
 	    $_ = $before;
@@ -1078,7 +1069,6 @@
     } elsif ($eqno) {
 	$eqno = join('',$EQNO_START, $eqno, $EQNO_END)
     } else { $eqno = '&nbsp;' } # spacer, when no numbering
-    $* = 0;
 
     # include the equation-number, using a <TABLE>
     local($halign) = $math_class unless $FLUSH_EQN;
@@ -1255,7 +1245,7 @@
 #	    if (s/\\lefteqn$OP(\d+)$CP(.*)$OP\1$CP/ $2 /) {
 	    if (s/\\lefteqn//) {
 		$return .= "\"LEFT\" COLSPAN=\"3\">";
-		$* =1; s/(^\s*|$html_specials{'&'}|\s*$)//g; $*=0;
+		s/(^\s*|$html_specials{'&'}|\s*$)//gm;
 		if (($NO_SIMPLE_MATH)||($doimage)||($failed)) {
 		    $_ = (($_)? &process_math_in_latex(
 		        "indisplay" , '', '', $doimage.$_ ):'');
@@ -1280,7 +1270,7 @@
 
 	    # left column, set using \displaystyle
 	    $thismath = shift(@cols); $failed = 0;
-	    $* =1; $thismath =~ s/(^\s*|\s*$)//g; $*=0;
+	    $thismath =~ s/(^\s*|\s*$)//gm;
 	    if (($NO_SIMPLE_MATH)||($doimage)||($failed)) {
 		$thismath = (($thismath ne '')? &process_math_in_latex(
 		    "indisplay" , '', '', $doimage.$thismath ):'');
@@ -1300,7 +1290,7 @@
 
 	    # center column, set using \textstyle
 	    $thismath = shift(@cols); $failed = 0;
-	    $* =1; $thismath =~ s/(^\s*|\s*$)//g; $*=0;
+	    $thismath =~ s/(^\s*|\s*$)//gm;
 	    if (($NO_SIMPLE_MATH)||($doimage)||($failed)) {
 		$thismath = (($thismath ne '')? &process_math_in_latex(
 		    "indisplay" , 'text', '', $doimage.$thismath ):'');
@@ -1320,7 +1310,7 @@
 
 	    # right column, set using \displaystyle
 	    $thismath = shift(@cols); $failed = 0;
-	    $* =1; $thismath =~ s/(^\s*|\s*$)//g; $*=0;
+	    $thismath =~ s/(^\s*|\s*$)//gm;
 	    if (($NO_SIMPLE_MATH)||($doimage)||($failed)) {
 		$thismath = (($thismath ne '')? &process_math_in_latex(
 		    "indisplay" , '', '', $doimage.$thismath ):'');
--- latex2html-2008/versions/math.pl.orig	2004-01-01 06:15:01.000000000 +0000
+++ latex2html-2008/versions/math.pl	2009-01-05 15:05:36.000000000 +0000
@@ -87,7 +87,7 @@
     local($attribs, $border);
     if (s/$htmlborder_rx//o) { $attribs = $2; $border = (($4)? "$4" : 1) }
     elsif (s/$htmlborder_pr_rx//o) { $attribs = $2; $border = (($4)? "$4" : 1) }
-    $* = 1; s/^\s*|\s*$//g; $*=0;
+    s/^\s*|\s*$//gm;
     local($saved) = $_;
 #   if (s/^\\\(|^\$|^\\math|\\\)$|\$$|\\endmath//g) {}
     if (s/^$math_start_rx|${math_end_rx}$//g) {}
@@ -174,23 +174,21 @@
     local($seqno) = join('',"\n<TD$eqno_class WIDTH=10 ALIGN=\""
                          , (($EQN_TAGS =~ /L/)? 'LEFT': 'RIGHT')
 		         , "\">\n");
-    $* = 1;
     do { # include the equation number, using a <TABLE>
 	$global{'eqn_number'}++;
 	$eqno = join('', $EQNO_START
 		, &simplify(&translate_commands('\theequation'))
 		, $EQNO_END);
-    } unless ((s/(\\nonumber|\\notag)//g)||(/\\tag/));
-    if (s/\\tag(\*)?//){
+    } unless ((s/(\\nonumber|\\notag)//gm)||(/\\tag/m));
+    if (s/\\tag(\*)?//m){
 	# AmS-TEX line-number tags.
 	local($nobrack,$before) = ($1,$`);
 	$_ = $';
-	s/next_pair_pr_rx//o;
+	s/next_pair_pr_rx//om;
 	if ($nobrack) { $eqno = $2 }
 	else { $eqno = join('',$EQNO_START, $2, $EQNO_END ) }
 	$_ = $before;
     }
-    $* = 0;
 
     local($halign) = " ALIGN=\"CENTER\"" unless $FLUSH_EQN;
     if ($EQN_TAGS =~ /L/) {
@@ -398,9 +396,9 @@
 
     # remove white space at the extremities
 #   do{ $*=1; s/(^\s+|\s+$)//; $*=0; } unless ($NO_SIMPLE_MATH);
-    $*=1; s/^\s//o;s/\s$//; $*=0;
+    s/^\s//o;s/\s$//m;
     # but not if there is a comment to finish:
-    $*=1; s/($comment_mark\s*\d+)$/$&\n/; $*=0;
+    s/($comment_mark\s*\d+)$/$&\n/m;
 
     $_;
 }
@@ -1029,7 +1027,7 @@
 
 	    if (s/\\lefteqn//) {
 		$return .= "\"LEFT\" COLSPAN=\"3\">";
-		$* =1; s/(^\s*|$html_specials{'&'}|\s*$)//g; $*=0;
+		s/(^\s*|$html_specials{'&'}|\s*$)//gm;
 		if (($doimage)||($failed)) {
 		    $_ = (($_)? &process_math_in_latex(
 			"indisplay" , '', '', $doimage.$_ ):'');
@@ -1048,7 +1046,7 @@
 
 	    # left column, set using \displaystyle
 	    $thismath = shift(@cols); 
-	    $* =1; $thismath =~ s/(^\s*|\s*$)//g; $*=0;
+	    $thismath =~ s/(^\s*|\s*$)//gm;
 	    if (($doimage)||($failed)) {
 		$thismath = (($thismath ne '')? &process_math_in_latex(
 		    "indisplay" , '', '', $doimage.$thismath ):'');
@@ -1064,7 +1062,7 @@
 	    # center column, set using \textstyle
 	    $thismath = shift(@cols);
 	    if (!($#cols < 0)) {
-		$* =1; $thismath =~ s/(^\s*|\s*$)//g; $*=0;
+		$thismath =~ s/(^\s*|\s*$)//gm;
 		if (($doimage)||($failed)) {
 		    $thismath = (($thismath ne '')? &process_math_in_latex(
 			"indisplay" , 'text', '', $doimage.$thismath ):'');
@@ -1084,7 +1082,7 @@
 		&write_warnings($eqnarray_warning);
 		print "\n\n *** $eqnarray_warning \n";
 	    }
-	    $* =1; $thismath =~ s/(^\s*|\s*$)//g; $*=0;
+	    $thismath =~ s/(^\s*|\s*$)//gm;
 	    if (($doimage)||($failed)) {
 		$thismath = (($thismath ne '')? &process_math_in_latex(
 		    "indisplay" , '', '', $doimage.$thismath ):'');
@@ -1447,7 +1445,7 @@
     	}
 
 	($pre_text,$labels) = &extract_labels($pre_text);
-	local($savedRS) = $/; $/ = ''; $* = 1;
+	local($savedRS) = $/; $/ = '';
 #	if ($pre_text =~ m/^((.|\n)*)\\begin\s*(($O|$OP)\d+($C|$CP))$ams_aligned_envs_rx\3/m) {
 	if ($pre_text =~ m/^()\\begin\s*(($O|$OP)\d+($C|$CP))$ams_aligned_envs_rx\3/m) {
 	    local($env,$star,$orig,$cnt) = ($7,$8,$pre_text.$_,1);
@@ -1456,16 +1454,16 @@
 #	    local($savedRS) = $/; $/ = ''; $*=1;
 	    while ( $cnt && $found ) {
 		$found = '';
-		if ($post_pre_text =~ /\\(begin|end)(($O|$OP)\d+($C|$CP))$env$star\2/s)
+		if ($post_pre_text =~ /\\(begin|end)(($O|$OP)\d+($C|$CP))$env$star\2/sm)
 		    { $pre_text .= $`; $found = $1;
 		      $this_env = $&; $post_pre_text = $'; }
-		if ($found =~ /begin/) {
+		if ($found =~ /begin/m) {
 		    $cnt++; $pre_text .= $this_env;
-		} elsif ($found =~ /end/) {
+		} elsif ($found =~ /end/m) {
 		    $cnt--; $pre_text .= $this_env if ($cnt > 0) ;
 		}
 	    }
-	    $* = 0; $/ = $savedRS;
+	    $/ = $savedRS;
 	    $env .= 'star' if $star;
 	    local($env_cmd) = 'do_env_'.$env;
 	    # parse it further, when possible...
@@ -1504,7 +1502,7 @@
 	    $pre_text = &process_math_in_latex($mode,$style,$slevel,$pre_text)
 		if ($pre_text);
 	}
-	$* = 0; $/ = $savedRS;
+	$/ = $savedRS;
 	return($labels . $pre_text) unless ($_);
 
 	print "\nMore math:\n$_" if ($VERBOSITY > 4);
@@ -1572,7 +1570,7 @@
 	$ecomm = "\n\\end{$env}";
     } unless ($env =~/tex2html/);
     $_ = &revert_to_raw_tex;
-    $* = 1; s/^\s+//; s/\s+$//; $* = 0;
+    s/^\s+//; s/\s+$//m;
     $_ = $scomm . $_ . $ecomm;
     return() if (length($_) < 12);
     $global{'verbatim_counter'}++;
@@ -1715,20 +1713,18 @@
 	        local ($saved) = $_;
 	        $_ = $';
 	        # find the \end, including nested environments of same type.
-	        $* = 1;
 	        local($cnt, $thisbit, $which) = (1,'','');
-	        while ( /\\(begin|end)(<#\d+#>)($env|$array_env_rx)(\*|star)?\2/s ) {
+	        while ( /\\(begin|end)(<#\d+#>)($env|$array_env_rx)(\*|star)?\2/sm ) {
 		   $thisbit = $` . $&; $_ = $'; $which = $1;
 		   do {
 		        # mark rows/columns in nested arrays
-		        $thisbit =~ s/;SPMamp;/$array_col_mark/g;
-		        $thisbit =~ s/\\(\\|cr(cr)?(\b|$|\d|\W))/$array_row_mark$3/g;
+		        $thisbit =~ s/;SPMamp;/$array_col_mark/gm;
+		        $thisbit =~ s/\\(\\|cr(cr)?(\b|$|\d|\W))/$array_row_mark$3/gm;
 		   } if ($cnt > 1);
 		   $this .= $thisbit;
-		   if ($which =~ /begin/) {$cnt++} else {$cnt--};
+		   if ($which =~ /begin/m) {$cnt++} else {$cnt--};
 	           last if (!$cnt);
 	        }
-	        $* = 0;
 
 #		$this =~ s/\\cr(cr)?(\b|$|\d|\\|\W)/\\\\$2/g;
 	        local($env_cmd) = "do_env_$env".(($star)? "star" : '');
@@ -1746,11 +1742,9 @@
 			$this .= $extra;
 			$this = &process_math_in_latex($mode,$style,$slevel,$this);
 		    } else { 
-			$*=1; 
-			$star =~ s/\*/\\\*/o if ($star);
-			$this =~ s/^\\begin(<#\d+#>)$env$star\1//s;
-			$this =~ s/\\end(<#\d+#>)$env$star\1\s*$//s;
-			$*=0;
+			$star =~ s/\*/\\\*/om if ($star);
+			$this =~ s/^\\begin(<#\d+#>)$env$star\1//sm;
+			$this =~ s/\\end(<#\d+#>)$env$star\1\s*$//sm;
 			do {
 			    local($in_array) = 1;
 			    local($_) = $this;
@@ -2498,9 +2492,7 @@
 	} elsif ($5) {
 	    $supsub .= $1; $which .= (($5 =~ /b/) ? '_' : '^');
 	    local($multisub_type) = $5;
-	    $* = 1;
-	    s/\\end(($O|$OP)\d+($C|$CP))$multisub_type\1/$supsub .= $`.$&;''/e;
-	    $* = 0;
+	    s/\\end(($O|$OP)\d+($C|$CP))$multisub_type\1/$supsub .= $`.$&;''/em;
 	} else { $supsub .= "\{^\\prime\}" }
     }
     # include dummy sup/sub-scripts to enhance the vertical spacing
--- latex2html-2008/versions/html4_01.pl.orig	2004-01-01 06:15:01.000000000 +0000
+++ latex2html-2008/versions/html4_01.pl	2009-01-05 15:00:24.000000000 +0000
@@ -766,9 +766,7 @@
 	    }
 	    $celldata .= ' ' if ($celldata =~ /\\\w+$/);
 
-	    $* = 1;    # multiline matching ON
-	    $celldata =~ s/$wrap_parbox_rx/$6/g;
-	    $* = 0;    # multiline matching OFF
+	    $celldata =~ s/$wrap_parbox_rx/$6/gm;
 #	    $at_text .= $celldata;
 #	    if ( $#colspec > -1) {
 #	        $colspec[$#colspec] .= join('', "<TD ALIGN=\"LEFT\">",$celldata,'</TD>');
@@ -794,9 +792,7 @@
 	    }
 	    $celldata .= ' ' if ($celldata =~ /\\\w+$/);
 
-	    $* = 1;    # multiline matching ON
-	    $celldata =~ s/$wrap_parbox_rx/$6/g;
-	    $* = 0;    # multiline matching OFF
+	    $celldata =~ s/$wrap_parbox_rx/$6/gm;
 	    $at_text .= $celldata;
 
 	} elsif ( $char =~ /;|\&/ ) {
@@ -965,9 +961,7 @@
 
     while (/\\parbox/) {
 	local($parlength) = length($_);
-	$* = 1;    # multiline matching ON
-	s/$wrap_parbox_rx/&convert_parbox_newlines($6)/eg;
-	$* = 0;    # multiline matching OFF
+	s/$wrap_parbox_rx/&convert_parbox_newlines($6)/egm;
 
 	if ($parlength == length($_)) {
 	    print "\n*** \\parbox's remain in table!!\n";
@@ -1196,9 +1190,7 @@
 		}
 		$colspec = &translate_environments("$OP$tmp$CP$colspec$OP$tmp$CP");
 		$colspec = &translate_commands($colspec);
-		$* = 1;
-		while ($colspec =~ s/<(\w+)>\s*<\/\1>//g) {};
-		$* = 0;
+		while ($colspec =~ s/<(\w+)>\s*<\/\1>//gm) {};
 		$colspec = ';SPMnbsp;' if ($colspec =~ /^\s*$/);
 		$colspec = join('', $reopens, $colspec
 		        , (@$open_tags_R ? &close_all_tags() : '')
@@ -1338,7 +1330,7 @@
 	$ecomm = "\n\\end{$env}";
     } unless ($env =~/tex2html/);
     $_ = &revert_to_raw_tex;
-    $* = 1; s/^\s+//s; s/\s+$//s; $* = 0;
+    s/^\s+//s; s/\s+$//sm;
     $_ = $scomm . $_ . $ecomm;
     return() if (length($_) < 16);
     $global{'verbatim_counter'}++;
@@ -1440,20 +1432,19 @@
     local($seqno) = join('',"\n<TD$eqno_class WIDTH=10 ALIGN=\""
                          , (($EQN_TAGS =~ /L/)? 'LEFT': 'RIGHT')
 		         , "\">\n");
-    $* = 1;
     do { # get the equation number
 	$global{'eqn_number'}++;
 	$eqno = &translate_commands('\theequation');
-    } unless ((s/(\\nonumber|\\notag)//g)||(/\\tag/));
-    if (/\\tag(\*)?/){
+    } unless ((s/(\\nonumber|\\notag)//gm)||(/\\tag/m));
+    if (/\\tag(\*)?/m){
 	# AmS-TEX line-number tags.
 	if (defined  &get_eqn_number ) {
 	    ($eqno, $_) = &get_eqn_number(1,$_);
 	} else {
-	    s/\\tag(\*)?//;
+	    s/\\tag(\*)?//m;
 	    local($nobrack,$before) = ($1,$`);
 	    $_ = $';
-	    s/next_pair_pr_rx//o;
+	    s/next_pair_pr_rx//om;
 	    if ($nobrack) { $eqno = $2; }
 	    else { $eqno = join('',$EQNO_START, $2, $EQNO_END) };
 	    $_ = $before;
@@ -1461,7 +1452,6 @@
     } elsif ($eqno) {
 	$eqno = join('',$EQNO_START, $eqno, $EQNO_END)
     } else { $eqno = '&nbsp;' } # spacer, when no numbering
-    $* = 0;
 
     # include the equation-number, using a <TABLE>
     local($halign) = " ALIGN=\"CENTER\"" unless $FLUSH_EQN;
@@ -1641,7 +1631,7 @@
 #	    if (s/\\lefteqn$OP(\d+)$CP(.*)$OP\1$CP/ $2 /) {
 	    if (s/\\lefteqn//) {
 		$return .= "\"LEFT\" COLSPAN=\"3\">";
-		$* =1; s/(^\s*|$html_specials{'&'}|\s*$)//g; $*=0;
+		s/(^\s*|$html_specials{'&'}|\s*$)//gm;
 		if (($NO_SIMPLE_MATH)||($doimage)||($failed)) {
 		    $_ = (($_)? &process_math_in_latex(
 		        "indisplay" , '', '', $doimage.$_ ):'');
@@ -1666,7 +1656,7 @@
 
 	    # left column, set using \displaystyle
 	    $thismath = shift(@cols); $failed = 0;
-	    $* =1; $thismath =~ s/(^\s*|\s*$)//g; $*=0;
+	    $thismath =~ s/(^\s*|\s*$)//gm;
 	    if (($NO_SIMPLE_MATH)||($doimage)||($failed)) {
 		$thismath = (($thismath ne '')? &process_math_in_latex(
 		    "indisplay" , '', '', $doimage.$thismath ):'');
@@ -1686,7 +1676,7 @@
 
 	    # center column, set using \textstyle
 	    $thismath = shift(@cols); $failed = 0;
-	    $* =1; $thismath =~ s/(^\s*|\s*$)//g; $*=0;
+	    $thismath =~ s/(^\s*|\s*$)//gm;
 	    if (($NO_SIMPLE_MATH)||($doimage)||($failed)) {
 		$thismath = (($thismath ne '')? &process_math_in_latex(
 		    "indisplay" , 'text', '', $doimage.$thismath ):'');
@@ -1706,7 +1696,7 @@
 
 	    # right column, set using \displaystyle
 	    $thismath = shift(@cols); $failed = 0;
-	    $* =1; $thismath =~ s/(^\s*|\s*$)//g; $*=0;
+	    $thismath =~ s/(^\s*|\s*$)//gm;
 	    if (($NO_SIMPLE_MATH)||($doimage)||($failed)) {
 		$thismath = (($thismath ne '')? &process_math_in_latex(
 		    "indisplay" , '', '', $doimage.$thismath ):'');
--- latex2html-2008/versions/html3_1.pl.orig	2002-11-29 11:49:19.000000000 +0000
+++ latex2html-2008/versions/html3_1.pl	2009-01-05 14:55:01.000000000 +0000
@@ -78,7 +78,7 @@
     local($attribs, $border);
     if (s/$htmlborder_rx//o) { $attribs = $2; $border = (($4)? "$4" : 1) }
     elsif (s/$htmlborder_pr_rx//o) { $attribs = $2; $border = (($4)? "$4" : 1) }
-    $* = 1; s/^\s*|\s*$//g; $*=0;
+    s/^\s*|\s*$//gm;
     local($saved) = $_;
 #   if (s/^\\\(|^\$|^\\math|\\\)$|\$$|\\endmath//g) {}
     if (s/^$math_start_rx|${math_end_rx}$//g) {}
@@ -161,23 +161,21 @@
     local($seqno) = join('',"\n<TD$eqno_class WIDTH=10 ALIGN=\""
                          , (($EQN_TAGS =~ /L/)? 'LEFT': 'RIGHT')
 		         , "\">\n");
-    $* = 1;
     do { # include the equation number, using a <TABLE>
 	$global{'eqn_number'}++;
 	$eqno = join('', $EQNO_START
 		, &simplify(&translate_commands('\theequation'))
 		, $EQNO_END);
-    } unless ((s/(\\nonumber|\\notag)//g)||(/\\tag/));
-    if (s/\\tag(\*)?//){
+    } unless ((s/(\\nonumber|\\notag)//gm)||(/\\tag/m));
+    if (s/\\tag(\*)?//m){
 	# AmS-TEX line-number tags.
 	local($nobrack,$before) = ($1,$`);
 	$_ = $';
-	s/next_pair_pr_rx//o;
+	s/next_pair_pr_rx//om;
 	if ($nobrack) { $eqno = $2 }
 	else { $eqno = join('',$EQNO_START, $2, $EQNO_END ) }
 	$_ = $before;
     }
-    $* = 0;
 
     local($halign) = " ALIGN=\"CENTER\"" unless $FLUSH_EQN;
     if ($EQN_TAGS =~ /L/) {
@@ -353,7 +351,7 @@
 
     # remove white space at the extremities
 #   do{ $*=1; s/(^\s+|\s+$)//; $*=0; } unless ($NO_SIMPLE_MATH);
-    $*=1; s/^\s//o;s/\s$//; $*=0;
+    s/^\s//o;s/\s$//m;
 
     $_;
 }
@@ -970,7 +968,7 @@
 
 	    if (s/\\lefteqn//) {
 		$return .= "\"LEFT\" COLSPAN=\"3\">";
-		$* =1; s/(^\s*|$html_specials{'&'}|\s*$)//g; $*=0;
+		s/(^\s*|$html_specials{'&'}|\s*$)//gm;
 		if (($doimage)||($failed)) {
 		    $_ = (($_)? &process_math_in_latex(
 			"indisplay" , '', '', $doimage.$_ ):'');
@@ -989,7 +987,7 @@
 
 	    # left column, set using \displaystyle
 	    $thismath = shift(@cols); 
-	    $* =1; $thismath =~ s/(^\s*|\s*$)//g; $*=0;
+	    $thismath =~ s/(^\s*|\s*$)//gm;
 	    if (($doimage)||($failed)) {
 		$thismath = (($thismath ne '')? &process_math_in_latex(
 		    "indisplay" , '', '', $doimage.$thismath ):'');
@@ -1006,7 +1004,7 @@
 	    $thismath = shift(@cols);
 	    if (!($#cols < 0)) {
 #print "\nEQNARRAY:$#cols : $thismath";
-		$* =1; $thismath =~ s/(^\s*|\s*$)//g; $*=0;
+		$thismath =~ s/(^\s*|\s*$)//gm;
 		if (($doimage)||($failed)) {
 		    $thismath = (($thismath ne '')? &process_math_in_latex(
 			"indisplay" , 'text', '', $doimage.$thismath ):'');
@@ -1026,7 +1024,7 @@
 		&write_warnings($eqnarray_warning);
 		print "\n\n *** $eqnarray_warning \n";
 	    }
-	    $* =1; $thismath =~ s/(^\s*|\s*$)//g; $*=0;
+	    $thismath =~ s/(^\s*|\s*$)//gm;
 	    if (($doimage)||($failed)) {
 		$thismath = (($thismath ne '')? &process_math_in_latex(
 		    "indisplay" , '', '', $doimage.$thismath ):'');
@@ -1385,7 +1383,7 @@
     	}
 
 	($pre_text,$labels) = &extract_labels($pre_text);
-	local($savedRS) = $/; $/ = ''; $* = 1;
+	local($savedRS) = $/; $/ = '';
 #	if ($pre_text =~ m/^((.|\n)*)\\begin\s*(($O|$OP)\d+($C|$CP))$ams_aligned_envs_rx\3/m) {
 	if ($pre_text =~ m/^()\\begin\s*(($O|$OP)\d+($C|$CP))$ams_aligned_envs_rx\3/m) {
 	    local($env,$star,$orig,$cnt) = ($7,$8,$pre_text.$_,1);
@@ -1397,13 +1395,13 @@
 		if ($post_pre_text =~ /\\(begin|end)(($O|$OP)\d+($C|$CP))$env$star\2/s)
 		    { $pre_text .= $`; $found = $1;
 		      $this_env = $&; $post_pre_text = $'; }
-		if ($found =~ /begin/) {
+		if ($found =~ /begin/m) {
 		    $cnt++; $pre_text .= $this_env;
-		} elsif ($found =~ /end/) {
+		} elsif ($found =~ /end/m) {
 		    $cnt--; $pre_text .= $this_env if ($cnt > 0) ;
 		}
 	    }
-	    $* = 0; $/ = $savedRS;
+	    $/ = $savedRS;
 	    $env .= 'star' if $star;
 	    local($env_cmd) = 'do_env_'.$env;
 	    # parse it further, when possible...
@@ -1430,7 +1428,7 @@
 	    $pre_text = &process_math_in_latex($mode,$style,$slevel,$pre_text)
 		if ($pre_text);
 	}
-	$* = 0; $/ = $savedRS;
+	$/ = $savedRS;
 	return($labels . $pre_text) unless ($_);
 
 	local($post_text, $this_text, $which_text);
@@ -1494,7 +1492,7 @@
 	$ecomm = "\n\\end{$env}";
     } unless ($env =~/tex2html/);
     $_ = &revert_to_raw_tex;
-    $* = 1; s/^\s+//; s/\s+$//; $* = 0;
+    s/^\s+//; s/\s+$//m;
     $_ = $scomm . $_ . $ecomm;
     return() if (length($_) < 12);
     $global{'verbatim_counter'}++;
@@ -1637,20 +1635,18 @@
 	        local ($saved) = $_;
 	        $_ = $';
 	        # find the \end, including nested environments of same type.
-	        $* = 1;
 	        local($cnt, $thisbit, $which) = (1,'','');
-	        while ( /\\(begin|end)(<#\d+#>)($env|$array_env_rx)(\*|star)?\2/s ) {
+	        while ( /\\(begin|end)(<#\d+#>)($env|$array_env_rx)(\*|star)?\2/sm ) {
 		   $thisbit = $` . $&; $_ = $'; $which = $1;
 		   do {
 		        # mark rows/columns in nested arrays
-		        $thisbit =~ s/;SPMamp;/$array_col_mark/g;
-		        $thisbit =~ s/\\(\\|cr(cr)?(\b|$|\d|\W))/$array_row_mark$3/g;
+		        $thisbit =~ s/;SPMamp;/$array_col_mark/gm;
+		        $thisbit =~ s/\\(\\|cr(cr)?(\b|$|\d|\W))/$array_row_mark$3/gm;
 		   } if ($cnt > 1);
 		   $this .= $thisbit;
-	            if ($which =~ /begin/) {$cnt++} else {$cnt--};
+	            if ($which =~ /begin/m) {$cnt++} else {$cnt--};
 	            last if (!$cnt);
 	        }
-	        $* = 0;
 
 #		$this =~ s/\\cr(cr)?(\b|$|\d|\\|\W)/\\\\$2/g;
 	        local($env_cmd) = "do_env_$env".(($star)? "star" : '');
@@ -1668,11 +1664,9 @@
 			$this .= $extra;
 			$this = &process_math_in_latex($mode,$style,$slevel,$this);
 		    } else { 
-			$*=1; 
-			$star =~ s/\*/\\\*/o if ($star);
-			$this =~ s/^\\begin(<#\d+#>)$env$star\1//;
-			$this =~ s/\\end(<#\d+#>)$env$star\1\s*$//;
-			$*=0;
+			$star =~ s/\*/\\\*/om if ($star);
+			$this =~ s/^\\begin(<#\d+#>)$env$star\1//m;
+			$this =~ s/\\end(<#\d+#>)$env$star\1\s*$//m;
 			do {
 			    local($in_array) = 1;
 			    local($_) = $this;
@@ -2376,9 +2370,7 @@
 	} elsif ($5) {
 	    $supsub .= $1; $which .= (($5 =~ /b/) ? '_' : '^');
 	    local($multisub_type) = $5;
-	    $* = 1;
-	    s/\\end(($O|$OP)\d+($C|$CP))$multisub_type\1/$supsub .= $`.$&;''/e;
-	    $* = 0;
+	    s/\\end(($O|$OP)\d+($C|$CP))$multisub_type\1/$supsub .= $`.$&;''/em;
 	} else { $supsub .= "\{^\\prime\}" }
     }
     # include dummy sup/sub-scripts to enhance the vertical spacing
--- latex2html-2008/versions/html4_1.pl.orig	2004-01-01 06:15:01.000000000 +0000
+++ latex2html-2008/versions/html4_1.pl	2009-01-05 15:01:53.000000000 +0000
@@ -766,9 +766,7 @@
 	    }
 	    $celldata .= ' ' if ($celldata =~ /\\\w+$/);
 
-	    $* = 1;    # multiline matching ON
-	    $celldata =~ s/$wrap_parbox_rx/$6/g;
-	    $* = 0;    # multiline matching OFF
+	    $celldata =~ s/$wrap_parbox_rx/$6/gm;
 #	    $at_text .= $celldata;
 #	    if ( $#colspec > -1) {
 #	        $colspec[$#colspec] .= join('', "<TD ALIGN=\"LEFT\">",$celldata,'</TD>');
@@ -794,9 +792,7 @@
 	    }
 	    $celldata .= ' ' if ($celldata =~ /\\\w+$/);
 
-	    $* = 1;    # multiline matching ON
-	    $celldata =~ s/$wrap_parbox_rx/$6/g;
-	    $* = 0;    # multiline matching OFF
+	    $celldata =~ s/$wrap_parbox_rx/$6/gm;
 	    $at_text .= $celldata;
 
 	} elsif ( $char =~ /;|\&/ ) {
@@ -965,9 +961,7 @@
 
     while (/\\parbox/) {
 	local($parlength) = length($_);
-	$* = 1;    # multiline matching ON
-	s/$wrap_parbox_rx/&convert_parbox_newlines($6)/eg;
-	$* = 0;    # multiline matching OFF
+	s/$wrap_parbox_rx/&convert_parbox_newlines($6)/egm;
 
 	if ($parlength == length($_)) {
 	    print "\n*** \\parbox's remain in table!!\n";
@@ -1196,9 +1190,7 @@
 		}
 		$colspec = &translate_environments("$OP$tmp$CP$colspec$OP$tmp$CP");
 		$colspec = &translate_commands($colspec);
-		$* = 1;
-		while ($colspec =~ s/<(\w+)>\s*<\/\1>//g) {};
-		$* = 0;
+		while ($colspec =~ s/<(\w+)>\s*<\/\1>//gm) {};
 		$colspec = ';SPMnbsp;' if ($colspec =~ /^\s*$/);
 		$colspec = join('', $reopens, $colspec
 		        , (@$open_tags_R ? &close_all_tags() : '')
@@ -1338,7 +1330,7 @@
 	$ecomm = "\n\\end{$env}";
     } unless ($env =~/tex2html/);
     $_ = &revert_to_raw_tex;
-    $* = 1; s/^\s+//s; s/\s+$//s; $* = 0;
+    s/^\s+//s; s/\s+$//sm;
     $_ = $scomm . $_ . $ecomm;
     return() if (length($_) < 16);
     $global{'verbatim_counter'}++;
@@ -1440,20 +1432,19 @@
     local($seqno) = join('',"\n<TD$eqno_class WIDTH=10 ALIGN=\""
                          , (($EQN_TAGS =~ /L/)? 'LEFT': 'RIGHT')
 		         , "\">\n");
-    $* = 1;
     do { # get the equation number
 	$global{'eqn_number'}++;
 	$eqno = &translate_commands('\theequation');
-    } unless ((s/(\\nonumber|\\notag)//g)||(/\\tag/));
-    if (/\\tag(\*)?/){
+    } unless ((s/(\\nonumber|\\notag)//gm)||(/\\tag/m));
+    if (/\\tag(\*)?/m){
 	# AmS-TEX line-number tags.
 	if (defined  &get_eqn_number ) {
 	    ($eqno, $_) = &get_eqn_number(1,$_);
 	} else {
-	    s/\\tag(\*)?//;
+	    s/\\tag(\*)?//m;
 	    local($nobrack,$before) = ($1,$`);
 	    $_ = $';
-	    s/next_pair_pr_rx//o;
+	    s/next_pair_pr_rx//om;
 	    if ($nobrack) { $eqno = $2; }
 	    else { $eqno = join('',$EQNO_START, $2, $EQNO_END) };
 	    $_ = $before;
@@ -1461,7 +1452,6 @@
     } elsif ($eqno) {
 	$eqno = join('',$EQNO_START, $eqno, $EQNO_END)
     } else { $eqno = '&nbsp;' } # spacer, when no numbering
-    $* = 0;
 
     # include the equation-number, using a <TABLE>
     local($halign) = " ALIGN=\"CENTER\"" unless $FLUSH_EQN;
@@ -1641,7 +1631,7 @@
 #	    if (s/\\lefteqn$OP(\d+)$CP(.*)$OP\1$CP/ $2 /) {
 	    if (s/\\lefteqn//) {
 		$return .= "\"LEFT\" COLSPAN=\"3\">";
-		$* =1; s/(^\s*|$html_specials{'&'}|\s*$)//g; $*=0;
+		s/(^\s*|$html_specials{'&'}|\s*$)//gm;
 		if (($NO_SIMPLE_MATH)||($doimage)||($failed)) {
 		    $_ = (($_)? &process_math_in_latex(
 		        "indisplay" , '', '', $doimage.$_ ):'');
@@ -1666,7 +1656,7 @@
 
 	    # left column, set using \displaystyle
 	    $thismath = shift(@cols); $failed = 0;
-	    $* =1; $thismath =~ s/(^\s*|\s*$)//g; $*=0;
+	    $thismath =~ s/(^\s*|\s*$)//gm;
 	    if (($NO_SIMPLE_MATH)||($doimage)||($failed)) {
 		$thismath = (($thismath ne '')? &process_math_in_latex(
 		    "indisplay" , '', '', $doimage.$thismath ):'');
@@ -1686,7 +1676,7 @@
 
 	    # center column, set using \textstyle
 	    $thismath = shift(@cols); $failed = 0;
-	    $* =1; $thismath =~ s/(^\s*|\s*$)//g; $*=0;
+	    $thismath =~ s/(^\s*|\s*$)//gm;
 	    if (($NO_SIMPLE_MATH)||($doimage)||($failed)) {
 		$thismath = (($thismath ne '')? &process_math_in_latex(
 		    "indisplay" , 'text', '', $doimage.$thismath ):'');
@@ -1706,7 +1696,7 @@
 
 	    # right column, set using \displaystyle
 	    $thismath = shift(@cols); $failed = 0;
-	    $* =1; $thismath =~ s/(^\s*|\s*$)//g; $*=0;
+	    $thismath =~ s/(^\s*|\s*$)//gm;
 	    if (($NO_SIMPLE_MATH)||($doimage)||($failed)) {
 		$thismath = (($thismath ne '')? &process_math_in_latex(
 		    "indisplay" , '', '', $doimage.$thismath ):'');
--- latex2html-2008/versions/html4_0.pl.orig	2004-01-01 06:15:00.000000000 +0000
+++ latex2html-2008/versions/html4_0.pl	2009-01-05 14:58:55.000000000 +0000
@@ -745,9 +745,7 @@
 	    }
 	    $celldata .= ' ' if ($celldata =~ /\\\w+$/);
 
-	    $* = 1;    # multiline matching ON
-	    $celldata =~ s/$wrap_parbox_rx/$6/g;
-	    $* = 0;    # multiline matching OFF
+	    $celldata =~ s/$wrap_parbox_rx/$6/gm;
 #	    $at_text .= $celldata;
 #	    if ( $#colspec > -1) {
 #	        $colspec[$#colspec] .= join('', "<TD ALIGN=\"LEFT\">",$celldata,'</TD>');
@@ -773,9 +771,7 @@
 	    }
 	    $celldata .= ' ' if ($celldata =~ /\\\w+$/);
 
-	    $* = 1;    # multiline matching ON
-	    $celldata =~ s/$wrap_parbox_rx/$6/g;
-	    $* = 0;    # multiline matching OFF
+	    $celldata =~ s/$wrap_parbox_rx/$6/gm;
 	    $at_text .= $celldata;
 
 	} elsif ( $char =~ /;|\&/ ) {
@@ -944,9 +940,7 @@
 
     while (/\\parbox/) {
 	local($parlength) = length($_);
-	$* = 1;    # multiline matching ON
-	s/$wrap_parbox_rx/&convert_parbox_newlines($6)/eg;
-	$* = 0;    # multiline matching OFF
+	s/$wrap_parbox_rx/&convert_parbox_newlines($6)/egm;
 
 	if ($parlength == length($_)) {
 	    print "\n*** \\parbox's remain in table!!\n";
@@ -1175,9 +1169,7 @@
 		}
 		$colspec = &translate_environments("$OP$tmp$CP$colspec$OP$tmp$CP");
 		$colspec = &translate_commands($colspec);
-		$* = 1;
-		while ($colspec =~ s/<(\w+)>\s*<\/\1>//g) {};
-		$* = 0;
+		while ($colspec =~ s/<(\w+)>\s*<\/\1>//gm) {};
 		$colspec = ';SPMnbsp;' if ($colspec =~ /^\s*$/);
 		$colspec = join('', $reopens, $colspec
 		        , (@$open_tags_R ? &close_all_tags() : '')
@@ -1317,7 +1309,7 @@
 	$ecomm = "\n\\end{$env}";
     } unless ($env =~/tex2html/);
     $_ = &revert_to_raw_tex;
-    $* = 1; s/^\s+//s; s/\s+$//s; $* = 0;
+    s/^\s+//s; s/\s+$//sm;
     $_ = $scomm . $_ . $ecomm;
     return() if (length($_) < 16);
     $global{'verbatim_counter'}++;
@@ -1419,20 +1411,19 @@
     local($seqno) = join('',"\n<TD$eqno_class WIDTH=10 ALIGN=\""
                          , (($EQN_TAGS =~ /L/)? 'LEFT': 'RIGHT')
 		         , "\">\n");
-    $* = 1;
     do { # get the equation number
 	$global{'eqn_number'}++;
 	$eqno = &translate_commands('\theequation');
-    } unless ((s/(\\nonumber|\\notag)//g)||(/\\tag/));
-    if (/\\tag(\*)?/){
+    } unless ((s/(\\nonumber|\\notag)//gm)||(/\\tag/m));
+    if (/\\tag(\*)?/m){
 	# AmS-TEX line-number tags.
 	if (defined  &get_eqn_number ) {
 	    ($eqno, $_) = &get_eqn_number(1,$_);
 	} else {
-	    s/\\tag(\*)?//;
+	    s/\\tag(\*)?//m;
 	    local($nobrack,$before) = ($1,$`);
 	    $_ = $';
-	    s/next_pair_pr_rx//o;
+	    s/next_pair_pr_rx//om;
 	    if ($nobrack) { $eqno = $2; }
 	    else { $eqno = join('',$EQNO_START, $2, $EQNO_END) };
 	    $_ = $before;
@@ -1440,7 +1431,6 @@
     } elsif ($eqno) {
 	$eqno = join('',$EQNO_START, $eqno, $EQNO_END)
     } else { $eqno = '&nbsp;' } # spacer, when no numbering
-    $* = 0;
 
     # include the equation-number, using a <TABLE>
     local($halign) = " ALIGN=\"CENTER\"" unless $FLUSH_EQN;
@@ -1620,7 +1610,7 @@
 #	    if (s/\\lefteqn$OP(\d+)$CP(.*)$OP\1$CP/ $2 /) {
 	    if (s/\\lefteqn//) {
 		$return .= "\"LEFT\" COLSPAN=\"3\">";
-		$* =1; s/(^\s*|$html_specials{'&'}|\s*$)//g; $*=0;
+		s/(^\s*|$html_specials{'&'}|\s*$)//gm;
 		if (($NO_SIMPLE_MATH)||($doimage)||($failed)) {
 		    $_ = (($_)? &process_math_in_latex(
 		        "indisplay" , '', '', $doimage.$_ ):'');
@@ -1645,7 +1635,7 @@
 
 	    # left column, set using \displaystyle
 	    $thismath = shift(@cols); $failed = 0;
-	    $* =1; $thismath =~ s/(^\s*|\s*$)//g; $*=0;
+	    $thismath =~ s/(^\s*|\s*$)//gm;
 	    if (($NO_SIMPLE_MATH)||($doimage)||($failed)) {
 		$thismath = (($thismath ne '')? &process_math_in_latex(
 		    "indisplay" , '', '', $doimage.$thismath ):'');
@@ -1665,7 +1655,7 @@
 
 	    # center column, set using \textstyle
 	    $thismath = shift(@cols); $failed = 0;
-	    $* =1; $thismath =~ s/(^\s*|\s*$)//g; $*=0;
+	    $thismath =~ s/(^\s*|\s*$)//gm;
 	    if (($NO_SIMPLE_MATH)||($doimage)||($failed)) {
 		$thismath = (($thismath ne '')? &process_math_in_latex(
 		    "indisplay" , 'text', '', $doimage.$thismath ):'');
@@ -1685,7 +1675,7 @@
 
 	    # right column, set using \displaystyle
 	    $thismath = shift(@cols); $failed = 0;
-	    $* =1; $thismath =~ s/(^\s*|\s*$)//g; $*=0;
+	    $thismath =~ s/(^\s*|\s*$)//gm;
 	    if (($NO_SIMPLE_MATH)||($doimage)||($failed)) {
 		$thismath = (($thismath ne '')? &process_math_in_latex(
 		    "indisplay" , '', '', $doimage.$thismath ):'');
--- latex2html-2008/LICENSE.orig	2008-09-23 21:26:16.000000000 +0100
+++ latex2html-2008/LICENSE	2007-06-28 21:04:38.000000000 +0100
@@ -1,80 +1,339 @@
-In September 2008, this software was re-licensed to use the
-   GNU General Public License v2  (GPLv2).
-This was done at the instigation of the following people:
-
-   Tom "spot" Callaway <tcallawa@redhat.com>  Fedora Legal
-   Roland Stigge   <stigge@antcom.de>  Debian
-                   <debian-legal@lists.debian.org>
-
-and with the permission of the original author and
-copyright holder, and the most recent authors:
-
-   Roger Hartley <J.R.Hartley@education.leeds.ac.uk>
-   Nikos Drakos  <Nikos.Drakos@gartner.com>
-   Ross Moore    <ross@maths.mq.edu.au>
-   Marek Rouchal <mrouchal@arcor.de>
-   Jens Lippmann <jens.lippmann@arcor.de>
-
-A copy of the original license is included below.
-Note that many software modules and scripts that are
-included with the LaTeX2HTML software were, and always
-have been, licensed under the GPLv2.
-
-  Ross Moore, 2008-09-24
-
-
-
-Original LaTeX2HTML License
-===========================
-
-Original Copyright notice:
-LaTeX2HTML by Nikos Drakos <nikos@cbl.leeds.ac.uk>
-
-Some portions of this package are published under the
-GNU public license. These are clearly marked in the header.
-
-****************************************************************
-General License Agreement and Lack of Warranty *****************
-****************************************************************
-
-This software is distributed in the hope that it will be useful
-but WITHOUT ANY WARRANTY. The author(s) do not accept responsibility
-to anyone for the consequences of using it or for whether it serves
-any particular purpose or works at all. No warranty is made about
-the software or its performance.
-
-Use and copying of this software and the preparation of derivative
-works based on this software are permitted, so long as the following
-conditions are met:
-
-o  The copyright notice and this entire notice are included intact
-   and prominently carried on all copies and supporting documentation.
-o  No fees or compensation are charged for use, copies, or
-   access to this software. You may charge a nominal
-   distribution fee for the physical act of transferring a
-   copy, but you may not charge for the program itself.
-o  If you modify this software, you must cause the modified
-   file(s) to carry prominent notices (a Change Log)
-   describing the changes, who made the changes, and the date
-   of those changes.
-o  Any work distributed or published that in whole or in part
-   contains or is a derivative of this software or any part
-   thereof is subject to the terms of this agreement. The
-   aggregation of another unrelated program with this software
-   or its derivative on a volume of storage or distribution
-   medium does not bring the other program under the scope
-   of these terms.
-
-This software is made available AS IS, and is distributed without
-warranty of any kind, either expressed or implied.
-
-In no event will the author(s) or their institutions be liable to you
-for damages, including lost profits, lost monies, or other special,
-incidental or consequential damages arising out of or in connection
-with the use or inability to use (including but not limited to loss of
-data or data being rendered inaccurate or losses sustained by third
-parties or a failure of the program to operate as documented) the
-program, even if you have been advised of the possibility of such
-damages, or for any claim by any other party, whether in an action of
-contract, negligence, or other tortious action.
+		    GNU GENERAL PUBLIC LICENSE
+		       Version 2, June 1991
 
+ Copyright (C) 1989, 1991 Free Software Foundation, Inc.,
+ 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+			    Preamble
+
+  The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+License is intended to guarantee your freedom to share and change free
+software--to make sure the software is free for all its users.  This
+General Public License applies to most of the Free Software
+Foundation's software and to any other program whose authors commit to
+using it.  (Some other Free Software Foundation software is covered by
+the GNU Lesser General Public License instead.)  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+this service if you wish), that you receive source code or can get it
+if you want it, that you can change the software or use pieces of it
+in new free programs; and that you know you can do these things.
+
+  To protect your rights, we need to make restrictions that forbid
+anyone to deny you these rights or to ask you to surrender the rights.
+These restrictions translate to certain responsibilities for you if you
+distribute copies of the software, or if you modify it.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must give the recipients all the rights that
+you have.  You must make sure that they, too, receive or can get the
+source code.  And you must show them these terms so they know their
+rights.
+
+  We protect your rights with two steps: (1) copyright the software, and
+(2) offer you this license which gives you legal permission to copy,
+distribute and/or modify the software.
+
+  Also, for each author's protection and ours, we want to make certain
+that everyone understands that there is no warranty for this free
+software.  If the software is modified by someone else and passed on, we
+want its recipients to know that what they have is not the original, so
+that any problems introduced by others will not reflect on the original
+authors' reputations.
+
+  Finally, any free program is threatened constantly by software
+patents.  We wish to avoid the danger that redistributors of a free
+program will individually obtain patent licenses, in effect making the
+program proprietary.  To prevent this, we have made it clear that any
+patent must be licensed for everyone's free use or not licensed at all.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+		    GNU GENERAL PUBLIC LICENSE
+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+  0. This License applies to any program or other work which contains
+a notice placed by the copyright holder saying it may be distributed
+under the terms of this General Public License.  The "Program", below,
+refers to any such program or work, and a "work based on the Program"
+means either the Program or any derivative work under copyright law:
+that is to say, a work containing the Program or a portion of it,
+either verbatim or with modifications and/or translated into another
+language.  (Hereinafter, translation is included without limitation in
+the term "modification".)  Each licensee is addressed as "you".
+
+Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running the Program is not restricted, and the output from the Program
+is covered only if its contents constitute a work based on the
+Program (independent of having been made by running the Program).
+Whether that is true depends on what the Program does.
+
+  1. You may copy and distribute verbatim copies of the Program's
+source code as you receive it, in any medium, provided that you
+conspicuously and appropriately publish on each copy an appropriate
+copyright notice and disclaimer of warranty; keep intact all the
+notices that refer to this License and to the absence of any warranty;
+and give any other recipients of the Program a copy of this License
+along with the Program.
+
+You may charge a fee for the physical act of transferring a copy, and
+you may at your option offer warranty protection in exchange for a fee.
+
+  2. You may modify your copy or copies of the Program or any portion
+of it, thus forming a work based on the Program, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+    a) You must cause the modified files to carry prominent notices
+    stating that you changed the files and the date of any change.
+
+    b) You must cause any work that you distribute or publish, that in
+    whole or in part contains or is derived from the Program or any
+    part thereof, to be licensed as a whole at no charge to all third
+    parties under the terms of this License.
+
+    c) If the modified program normally reads commands interactively
+    when run, you must cause it, when started running for such
+    interactive use in the most ordinary way, to print or display an
+    announcement including an appropriate copyright notice and a
+    notice that there is no warranty (or else, saying that you provide
+    a warranty) and that users may redistribute the program under
+    these conditions, and telling the user how to view a copy of this
+    License.  (Exception: if the Program itself is interactive but
+    does not normally print such an announcement, your work based on
+    the Program is not required to print an announcement.)
+
+These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Program,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Program, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote it.
+
+Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Program.
+
+In addition, mere aggregation of another work not based on the Program
+with the Program (or with a work based on the Program) on a volume of
+a storage or distribution medium does not bring the other work under
+the scope of this License.
+
+  3. You may copy and distribute the Program (or a work based on it,
+under Section 2) in object code or executable form under the terms of
+Sections 1 and 2 above provided that you also do one of the following:
+
+    a) Accompany it with the complete corresponding machine-readable
+    source code, which must be distributed under the terms of Sections
+    1 and 2 above on a medium customarily used for software interchange; or,
+
+    b) Accompany it with a written offer, valid for at least three
+    years, to give any third party, for a charge no more than your
+    cost of physically performing source distribution, a complete
+    machine-readable copy of the corresponding source code, to be
+    distributed under the terms of Sections 1 and 2 above on a medium
+    customarily used for software interchange; or,
+
+    c) Accompany it with the information you received as to the offer
+    to distribute corresponding source code.  (This alternative is
+    allowed only for noncommercial distribution and only if you
+    received the program in object code or executable form with such
+    an offer, in accord with Subsection b above.)
+
+The source code for a work means the preferred form of the work for
+making modifications to it.  For an executable work, complete source
+code means all the source code for all modules it contains, plus any
+associated interface definition files, plus the scripts used to
+control compilation and installation of the executable.  However, as a
+special exception, the source code distributed need not include
+anything that is normally distributed (in either source or binary
+form) with the major components (compiler, kernel, and so on) of the
+operating system on which the executable runs, unless that component
+itself accompanies the executable.
+
+If distribution of executable or object code is made by offering
+access to copy from a designated place, then offering equivalent
+access to copy the source code from the same place counts as
+distribution of the source code, even though third parties are not
+compelled to copy the source along with the object code.
+
+  4. You may not copy, modify, sublicense, or distribute the Program
+except as expressly provided under this License.  Any attempt
+otherwise to copy, modify, sublicense or distribute the Program is
+void, and will automatically terminate your rights under this License.
+However, parties who have received copies, or rights, from you under
+this License will not have their licenses terminated so long as such
+parties remain in full compliance.
+
+  5. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Program or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Program (or any work based on the
+Program), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying
+the Program or works based on it.
+
+  6. Each time you redistribute the Program (or any work based on the
+Program), the recipient automatically receives a license from the
+original licensor to copy, distribute or modify the Program subject to
+these terms and conditions.  You may not impose any further
+restrictions on the recipients' exercise of the rights granted herein.
+You are not responsible for enforcing compliance by third parties to
+this License.
+
+  7. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Program at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Program by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Program.
+
+If any portion of this section is held invalid or unenforceable under
+any particular circumstance, the balance of the section is intended to
+apply and the section as a whole is intended to apply in other
+circumstances.
+
+It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system, which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+  8. If the distribution and/or use of the Program is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Program under this License
+may add an explicit geographical distribution limitation excluding
+those countries, so that distribution is permitted only in or among
+countries not thus excluded.  In such case, this License incorporates
+the limitation as if written in the body of this License.
+
+  9. The Free Software Foundation may publish revised and/or new versions
+of the General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+Each version is given a distinguishing version number.  If the Program
+specifies a version number of this License which applies to it and "any
+later version", you have the option of following the terms and conditions
+either of that version or of any later version published by the Free
+Software Foundation.  If the Program does not specify a version number of
+this License, you may choose any version ever published by the Free Software
+Foundation.
+
+  10. If you wish to incorporate parts of the Program into other free
+programs whose distribution conditions are different, write to the author
+to ask for permission.  For software which is copyrighted by the Free
+Software Foundation, write to the Free Software Foundation; we sometimes
+make exceptions for this.  Our decision will be guided by the two goals
+of preserving the free status of all derivatives of our free software and
+of promoting the sharing and reuse of software generally.
+
+			    NO WARRANTY
+
+  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
+FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
+OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
+PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
+OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
+TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
+PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
+REPAIR OR CORRECTION.
+
+  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
+REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
+INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
+OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
+TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
+YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
+PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
+POSSIBILITY OF SUCH DAMAGES.
+
+		     END OF TERMS AND CONDITIONS
+
+	    How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+convey the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the program's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License along
+    with this program; if not, write to the Free Software Foundation, Inc.,
+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+
+Also add information on how to contact you by electronic and paper mail.
+
+If the program is interactive, make it output a short notice like this
+when it starts in an interactive mode:
+
+    Gnomovision version 69, Copyright (C) year name of author
+    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, the commands you use may
+be called something other than `show w' and `show c'; they could even be
+mouse-clicks or menu items--whatever suits your program.
+
+You should also get your employer (if you work as a programmer) or your
+school, if any, to sign a "copyright disclaimer" for the program, if
+necessary.  Here is a sample; alter the names:
+
+  Yoyodyne, Inc., hereby disclaims all copyright interest in the program
+  `Gnomovision' (which makes passes at compilers) written by James Hacker.
+
+  <signature of Ty Coon>, 1 April 1989
+  Ty Coon, President of Vice
+
+This General Public License does not permit incorporating your program into
+proprietary programs.  If your program is a subroutine library, you may
+consider it more useful to permit linking proprietary applications with the
+library.  If this is what you want to do, use the GNU Lesser General
+Public License instead of this License.
--- latex2html-2008/styles/amstex.perl.orig	2002-11-29 11:49:17.000000000 +0000
+++ latex2html-2008/styles/amstex.perl	2009-01-05 15:09:31.000000000 +0000
@@ -404,7 +404,6 @@
 		, $EQNO_END);
 	}
     } else { $tag = ';SPMnbsp;' }
-    $*=0;
     if ($labels) {
 	$labels =~ s/$anchor_mark/$tag/o;
 	($labels , $scan);
--- latex2html-2008/styles/more_amsmath.perl.orig	2002-11-29 11:49:18.000000000 +0000
+++ latex2html-2008/styles/more_amsmath.perl	2009-01-05 15:14:22.000000000 +0000
@@ -94,7 +94,6 @@
 		, $EQNO_END);
 	}
     } else { $tag = ';SPMnbsp;;SPMnbsp;;SPMnbsp;' }
-    $*=0;
     if ($labels) {
 	$labels =~ s/$anchor_mark/$tag/o;
 	($labels , $scan);
@@ -285,7 +284,7 @@
 	    } else { $return .= join('', $mspace , $ecell, $erow); } 
 	} else {
 	    $thismath = $_;
-	    $* =1; $thismath =~ s/(^\s*|\s*$)//g; $*=0;
+	    $thismath =~ s/(^\s*|\s*$)//gm;
 	    if (($doimage)||($failed)) {
 	        $thismath = &process_math_in_latex("indisplay",'',''
 		    , $doimage.$thismath ) unless ($thismath eq '' );
@@ -430,7 +429,7 @@
 
 	    # columns to be set using \displaystyle
 	    $thismath = $_; 
-	    $* =1; $thismath =~ s/(^\s*|\s*$)//g; $*=0;
+	    $thismath =~ s/(^\s*|\s*$)//gm;
 	    if (($doimage)||($failed)) {
 	        $thismath = &process_math_in_latex("indisplay",'',''
 		    , $doimage.$thismath ) unless ($thismath eq '' );
@@ -767,7 +766,7 @@
 		# alternating right/left aligned
 		$scell =  (($scell eq $slcell)? $srcell : $slcell) if ($col_cnt);
 		$thismath = $_; $col_cnt++;
-		$* =1; $thismath =~ s/(^\s*|\s*$)//g; $*=0;
+		$thismath =~ s/(^\s*|\s*$)//gm;
 		if (($doimage)||($failed)) {
 		    $thismath = &process_math_in_latex("indisplay",'',''
 	 		, $doimage.$thismath ) unless ($thismath eq '' );
@@ -923,7 +922,7 @@
 	    @cols = split(/$mdlim/o);
 	    # left column, set using \displaystyle
 	    $thismath = shift(@cols); 
-	    $* =1; $thismath =~ s/(^\s*|\s*$)//g; $*=0;
+	    $thismath =~ s/(^\s*|\s*$)//gm;
 	    if (($doimage)||($failed)) {
 	        $thismath = &process_math_in_latex("indisplay",'',''
 		    , $doimage.$thismath ) unless ($thismath eq '' );
@@ -940,7 +939,7 @@
 
 	    # right column, set using \displaystyle
 	    $thismath = shift(@cols);
-	    $* =1; $thismath =~ s/(^\s*|\s*$)//g; $*=0;
+	    $thismath =~ s/(^\s*|\s*$)//gm;
 	    if (($doimage)||($failed)) {
 		$thismath = &process_math_in_latex("indisplay",'',''
 		    , $doimage.$thismath ) unless ($thismath eq '' );
--- latex2html-2008/styles/amsmath.perl.orig	2004-01-01 06:15:00.000000000 +0000
+++ latex2html-2008/styles/amsmath.perl	2009-01-05 15:09:17.000000000 +0000
@@ -458,7 +458,6 @@
 		, $EQNO_END);
 	}
     } else { $tag = ';SPMnbsp;' }
-    $*=0;
     if ($labels) {
 	$labels =~ s/$anchor_mark/$tag/o;
 	($labels , $scan);
--- latex2html-2008/styles/html.perl.orig	2002-11-29 11:49:18.000000000 +0000
+++ latex2html-2008/styles/html.perl	2009-01-05 15:11:51.000000000 +0000
@@ -236,7 +236,7 @@
     $url = &missing_braces unless
 	((s/$next_pair_pr_rx/$url = $2; ''/eo)
 	||(s/$next_pair_rx/$url = $2; ''/eo));
-    $*=1; s/^\s+/\n/; $*=0;
+    s/^\s+/\n/m;
     if ($name) { $href = &make_named_href($name,$url,$text) }
     else { $href = &make_href($url,$text) }
     print "\nHREF:$href" if ($VERBOSITY > 3);
--- latex2html-2008/styles/alltt.perl.orig	2002-11-29 11:49:17.000000000 +0000
+++ latex2html-2008/styles/alltt.perl	2009-01-05 15:08:31.000000000 +0000
@@ -50,7 +50,7 @@
     local ($before, $after, $alltt, $alltt_env);
     local ($alltt_begin) = "<alltt_begin>";
     local ($alltt_end) = "<alltt_end>";
-    local($saveRS) = $/; $*=1;undef $/;
+    local($saveRS) = $/; undef $/;
     while (/\\begin\s*{($alltt_rx)}([ \t]*\n)?/m) {
 	$alltt_env = $1;
 	$alltt = "";
--- latex2html-2008/styles/color.perl.orig	2002-11-29 11:49:18.000000000 +0000
+++ latex2html-2008/styles/color.perl	2009-01-05 15:11:33.000000000 +0000
@@ -145,7 +145,6 @@
 sub read_rgb_colors {
     local($base_file) = @_;
     local($file) = $base_file;
-    local($prev) = $*;
     local($r,$g,$b,$name,$dir);
     foreach $dir (split(/$envkey/,$LATEX2HTMLSTYLES)) {
     	$file = "$dir$dd$base_file"
@@ -154,7 +153,6 @@
 	if (-f $file) {
             if (open(COLORFILE,"<$file")) {
 		print STDOUT "\n(reading colors from $file" if $DEBUG;
-		$* = 0;	# Multiline matching OFF
 		while (<COLORFILE>) {
 	s/^\s*(\d+)\s+(\d+)\s+(\d+)\s+(\w+(\s\w+)*)\s*/
 	    ($r,$g,$b,$name)=($1,$2,$3,$4);
@@ -170,14 +168,12 @@
 	    }
 	}
     }
-    $* = $prev;		# Restore Multiline matching
     $_[0];
 }
 
 sub read_cmyk_colors {
     local($base_file) = @_;
     local($file) = $base_file;
-    local($prev) = $*;
     local($c,$m,$y,$k,$name,$dir,@colors);
     local($num_rx) = "(\\d|\\d\\.\\d*)";
     foreach $dir (split(/$envkey/,$LATEX2HTMLSTYLES)) {
@@ -187,7 +183,6 @@
 	if (-f $file) {
 	    if (open(COLORFILE,"<$file")) {
 		print STDOUT "\n(reading colors from $file";
-		$* = 0;			# Multiline matching OFF
 		@colors = (<COLORFILE>);
 		foreach (@colors) {
 		    next if (/^\s*$/);
@@ -211,7 +206,6 @@
 	    }
 	} 
     }
-    $* = $prev;		# Restore Multiline matching
     $_[0];
 }
 
--- latex2html-2008/styles/changebar.perl.orig	2002-11-29 11:49:17.000000000 +0000
+++ latex2html-2008/styles/changebar.perl	2009-01-05 15:10:41.000000000 +0000
@@ -126,11 +126,11 @@
     $_ = &translate_environments($_);
 
     # multiple ends of change-bars have icons on the same line.
-    $* = 1; local($saveRS) = $/; undef $/;
+    local($saveRS) = $/; undef $/;
     s/(($endstr[^<]*<\/$cbstyle>)\s*<BR>(<<\d+>>($cbversion_rx)?)?\s*$)/
-	if ($`) {$1} else { $endcb = 0; $2.$3 }/eg;
-    s/($cbend_rx\s*$)/ if ($`) { $1 } else { $endcb = 0; $2.$4 }/eg;
-    $* = 0; $/ = $saveRS;
+	if ($`) {$1} else { $endcb = 0; $2.$3 }/egm;
+    s/($cbend_rx\s*$)/ if ($`) { $1 } else { $endcb = 0; $2.$4 }/egm;
+    $/ = $saveRS;
 
 
     if ($this_version) {
--- latex2html-2008/styles/natbib.perl.orig	2002-11-29 11:49:18.000000000 +0000
+++ latex2html-2008/styles/natbib.perl	2009-01-05 15:14:44.000000000 +0000
@@ -1385,12 +1385,10 @@
     $citefile = $CURRENT_FILE;
     $citefiles{$bbl_nr} = $citefile;
     s/$next_pair_rx//o;
-    $* = 1;			# Multiline matching ON
 #    s/^\s*$//g;	# Remove empty lines (otherwise will have paragraphs!)
 #    s/\n//g;	# Remove all \n s --- we format the HTML file ourselves.
 #    $* = 0;			# Multiline matching OFF
-    s/\\newblock/\<BR\>/g;	# break at each \newblock
-    $* = 0;			# Multiline matching OFF
+    s/\\newblock/\<BR\>/gm;	# break at each \newblock
     s/\\penalty\d+//mg;		# Remove \penalty declarations
 
     local($this_item,$this_kind, $title);
--- latex2html-2008/styles/webtex.perl.orig	2002-11-29 11:49:18.000000000 +0000
+++ latex2html-2008/styles/webtex.perl	2009-01-05 15:16:30.000000000 +0000
@@ -121,29 +121,29 @@
     if($WEBEQ_IMG_ONLY) { return (1,$no_applet) };
 
     local($savedRS, $failed, $env_id, $_) = ($/,'','',$orig);
-    $/=''; $* = 1;
-    if ($mode =~ /inline/) {
-	if (/^\s*\\\(/) { $failed = 1 }
+    $/='';
+    if ($mode =~ /inline/m) {
+	if (/^\s*\\\(/m) { $failed = 1 }
 	else {
 	    $_ = &revert_to_raw_tex($_);
-	    $_ =~ s/^\s*\$?/\$/s;
-	    $_ =~ s/\$?$/\$/s;
+	    $_ =~ s/^\s*\$?/\$/sm;
+	    $_ =~ s/\$?$/\$/sm;
 	    $env_id .= $WEBEQ_INL if $USING_STYLES;
 	}
-    } elsif ($mode =~ /display/) {
-	if (/^\s*\$\$/) { $failed = 1 }
+    } elsif ($mode =~ /display/m) {
+	if (/^\s*\$\$/m) { $failed = 1 }
 	else {
 	    $_ = &revert_to_raw_tex($_);
-	    $_ =~ s/^\s*(\\\[|\$\$)?/\\\[/s;
-	    $_ =~ s/(\$\$|\\\])?\s*$/\\\]/s;
+	    $_ =~ s/^\s*(\\\[|\$\$)?/\\\[/sm;
+	    $_ =~ s/(\$\$|\\\])?\s*$/\\\]/sm;
 	    $env_id .= $WEBEQ_DIS if $USING_STYLES;
 	}
     } else {
 	print " *** Unknown WebTeX mode, no applet ***";
-	$/ = $savedRS; $* = 0;
+	$/ = $savedRS;
 	return (0,$no_applet)
     }
-    $/ = $savedRS; $* = 0;
+    $/ = $savedRS;
     return (0,$no_applet) if $failed;
 
     ($failed,$_) = &check_only_webtex($_);
@@ -324,7 +324,7 @@
     local($mml_code) = join('',<MML>);
     close MML;
 
-    local($savedRS) = $/; $*=0; $/='';
+    local($savedRS) = $/; $/='';
     $mml_code =~ s/^\s*<P><CENTER>\n?//s;
     $mml_code =~ s/\s*<applet code="[^"]*" width=(\d+) height=(\d+) align=(\w+)>\s*/
 	$width=$1;$height=$2;$align=$3;''/e;
--- latex2html-2008/styles/htmllist.perl.orig	2002-11-29 11:49:18.000000000 +0000
+++ latex2html-2008/styles/htmllist.perl	2009-01-05 15:13:18.000000000 +0000
@@ -96,26 +96,25 @@
     local($imagemark,$mark,$item_len,$desc_len,$mark_len,$mark_size);
     $imagemark = &set_htmllist_marker($bullet) if ($bullet);
 
-    $* = 1;
     local($Maxlength) = 99999;
     local($i,@items_done);
     print "[";
     while (1) {
 	print "*";
 	$item_len = $mark_len = $desc_len = $Maxlength;
-	$desc_len = length($`) if (/$item_description_rx/);
-	$mark_len = length($`) if (/\\htmlitemmark/);
-	$item_len = length($`) if (/\\item$delimiter_rx/);
+	$desc_len = length($`) if (/$item_description_rx/m);
+	$mark_len = length($`) if (/\\htmlitemmark/m);
+	$item_len = length($`) if (/\\item$delimiter_rx/m);
 	# exit when none of them match
 	last if ($item_len == $Maxlength && $mark_len == $Maxlength
 	    && $desc_len == $Maxlength);
 	if ($mark_len < $item_len && $mark_len < $desc_len) {
-	    if (/\\htmlitemmark/) {
+	    if (/\\htmlitemmark/m) {
 		$_ = $&.$';
 		push(@items_done,&translate_commands($`));
 		$mark = &missing_braces unless (
-		    (s/\\htmlitemmark$any_next_pair_pr_rx/$mark=$2;''/eo)
-		    ||(s/\\htmlitemmark$any_next_pair_rx/$mark=$2;''/eo));
+		    (s/\\htmlitemmark$any_next_pair_pr_rx/$mark=$2;''/eom)
+		    ||(s/\\htmlitemmark$any_next_pair_rx/$mark=$2;''/eom));
 		$imagemark = &set_htmllist_marker($mark) if ($mark);
 #		$mark_size = $ImageSizeMarks{$mark};
 #		$mark = "$ICONSERVER/$ImageMarks{$2}.gif" if ($ImageMarks{$2});
@@ -123,12 +122,12 @@
 #		$imagemark =~ s/~/&#126;/g;	# Allow ~'s in $ICONSERVER
 	    }
 	} elsif ($item_len < $desc_len) {
-	    /\\item$delimiter_rx/;
+	    /\\item$delimiter_rx/m;
 	    push(@items_done,&translate_commands($`),
 		    "<DT>$imagemark\n<DD>$1");
 		$_=$';
 	} else  {
-	    /$item_description_rx\s*($labels_rx8)?\s*/;
+	    /$item_description_rx\s*($labels_rx8)?\s*/m;
 	    push(@items_done,&translate_commands($`),
 		"<DT>$imagemark" 
 		. (($9)? "<A NAME=\"$9\">\n<B>$1<\/B><\/A>" : "\n<B>$1<\/B>" ) 
@@ -136,7 +135,6 @@
 		$_=$';
 	}
     }
-    $* = 0;
     $_ = join('',@items_done, $_); undef @items_done;
 
     #RRM: cannot have anything before the first <LI>
@@ -148,7 +146,7 @@
 	$preitems =~ s/<P( [^>]*)?>//g;
 	$preitems = "\n".$preitems if $preitems;
     }
-    $/ = $savedRS; $* = 0;	# Multiline matching OFF
+    $/ = $savedRS; 
 
     $_ = '<DT>'.$_ unless (/^\s*<D(D|T)/);
     print "]";
--- latex2html-2008/styles/makeidx.perl.orig	2002-11-29 11:49:18.000000000 +0000
+++ latex2html-2008/styles/makeidx.perl	2009-01-05 15:13:39.000000000 +0000
@@ -189,7 +189,7 @@
     # ! -> \001
     # @ -> \002
     # | -> \003
-    $* = 1; $str =~ s/\n\s*/ /g; $* = 0; # remove any newlines
+    $str =~ s/\n\s*/ /gm; # remove any newlines
     # protect \001 occurring with images
     $str =~ s/\001/\016/g;
 
--- latex2html-2008/IndicTeX-HTML/itrans.perl.orig	2002-11-29 11:48:59.000000000 +0000
+++ latex2html-2008/IndicTeX-HTML/itrans.perl	2009-01-05 15:17:37.000000000 +0000
@@ -405,13 +405,13 @@
 	    } else {
 		if ($this_par =~ /^\\/) {
 		    #catch 'paragraphs' that are just TeX macros
-		    local($savedRS) = $/; $/ = ''; $* = 1;
-		    if ($this_par =~ /^(\s*\\\w+)+$/s ) {
+		    local($savedRS) = $/; $/ = '';
+		    if ($this_par =~ /^(\s*\\\w+)+$/sm ) {
 			# save them for the next paragraph
 			$saved_par .= $this_par."\n\n";
-			$/ = $savedRS; $* = 0; next;
+			$/ = $savedRS; next;
 		    }
-		    $/ = $savedRS; $* = 0;
+		    $/ = $savedRS;
 		}
 		if ($saved_par) {
 		    #include any saved macros
--- latex2html-2008/latex2html.pin.orig	2004-01-08 06:15:01.000000000 +0000
+++ latex2html-2008/latex2html.pin	2009-01-05 14:49:57.000000000 +0000
@@ -6436,6 +6436,42 @@
     ($next, $pat);
 }
 
+sub get_next_optional_argument_m {
+    local($next, $pat);
+    s/$optional_arg_rx/$next=$1;$pat=$&;''/eom
+	if (/\s*[[]/m && (! $`)); # if the first character is a [
+    #remove trailing spaces and/or comments
+    s/^($comment_mark(\d+\n?)?|$EOL)//gosm;
+
+    # if  nested inside {}s  we need to get more tokens  
+    if ($pat) {
+	# check for \item, indicating something has gone wrong
+	if ($pat =~ /\\item\b/ ) {
+	    print "\n*** optional argument badly formed:\n" . $pat . "\n\n";
+	    $_ = $pat . $_;
+	    return('','');
+	}
+	# check for being nested inside {}s
+	local($found) = $pat;
+	while ($found =~ s/$O(\d+)$C[\s\S]*$O\1$C//gm) {
+	    if ($found =~ /$O(\d+)$C/m) {
+		local($br_id) = $1;
+		if (s/$O$br_id$C//m) {
+		    $found .= $`.$&;
+		    $pat .= "]".$`.$&;
+		    $next .= "]".$`.$&;
+		    $_ = $';
+		    s/^([^]]*)\]/$next.=$1;$pat.=$&;''/em;
+		    $found .= $&;
+		} else { last } # give up if no closing brace
+	    }
+	}
+    } else {
+	s/^\s*\[\]/$pat=$&;''/em; # This is not picked by $optional_arg_rx
+    }
+    ($next, $pat);
+}
+
 #JCL(jcl-del) - use new form of $single_cmd_rx.
 sub get_next_tex_cmd {
     local($next, $pat);
@@ -10618,19 +10654,19 @@
 sub do_cmd_parbox {
     local($_) = @_;
     local($args, $contents, $dum, $pat);
-    $* = 1;			# Multiline matching ON
-    ($dum,$pat) = &get_next_optional_argument; # discard this
-    ($dum,$pat) = &get_next_optional_argument; # discard this
-    ($dum,$pat) = &get_next_optional_argument; # discard this
+    #$* = 1;			# Multiline matching ON
+    ($dum,$pat) = &get_next_optional_argument_m; # discard this
+    ($dum,$pat) = &get_next_optional_argument_m; # discard this
+    ($dum,$pat) = &get_next_optional_argument_m; # discard this
     $args .= $pat if ($pat);
-    $pat = &missing_braces unless (
-	(s/$next_pair_pr_rx/$pat=$2;''/eo)
-	||(s/$next_pair_rx/$pat=$2;''/eo));
+    $pat = &missing_braces_m unless (
+	(s/$next_pair_pr_rx/$pat=$2;''/eom)
+	||(s/$next_pair_rx/$pat=$2;''/eom));
     $args .= "{".$`.$pat."}";
-    $contents = &missing_braces unless (
-	(s/$next_pair_pr_rx/$contents=$2;''/eo)
-	||(s/$next_pair_rx/$contents=$2;''/eo));
-    $* = 0;			# Multiline matching OFF
+    $contents = &missing_braces_m unless (
+	(s/$next_pair_pr_rx/$contents=$2;''/eom)
+	||(s/$next_pair_rx/$contents=$2;''/eom));
+    #$* = 0;			# Multiline matching OFF
     $args .= "{".$`.$contents."}";
     if ($NO_PARBOX_IMAGES) {
 	$contents = join ('', &do_cmd_par(), $contents, '</P>' );
@@ -11445,8 +11481,8 @@
 #    $/ = $savedRS; 
 #
 
-    $* = 1;			# Multiline matching ON
-    if (($tag =~ /DL/)&&$labels) {
+    #$* = 1;			# Multiline matching ON
+    if (($tag =~ /DL/m)&&$labels) {
 	local($label,$aft,$br_id);
 	s/\\item\b[\s\r]*([^\[])/do {
 		$label = $labels; $aft = $1;
@@ -11454,9 +11490,9 @@
 		$label = &translate_environments(
 			"$O$br_id$C$label$O$br_id$C");
 		join('',"\\item\[" , $label, "\]$aft" );
-	    }/eg;
+	    }/egm;
     }
-    $* = 0;			# Multiline matching OFF
+    #$* = 0;			# Multiline matching OFF
 
     # This deals with \item[xxx] ...
     if ($tag =~ /DL/) {
@@ -13173,9 +13209,9 @@
 	my $padding = ($after =~ /^[a-zA-Z]/s)? ($cmd =~ /\W$/ ? '':' '):'';
 
 	if ($raw_arg_cmds{$cmd} && defined &$wrapper) {
-            $* = 1;
+            #$* = 1;
 	    ($wrap, $_) = &$wrapper("\\$cmd$star", $padding . $after);
-            $* = 0;
+            #$* = 0;
 	    # ...but don't leave an unwanted space at the beginning
 	    $_ =~ s/^ //s if($padding && $wrap !~ /\w$/m
 	    	&& (length($_) == length($after)+1) );
@@ -15044,6 +15080,31 @@
     $next;
 }
 
+sub missing_braces_m {
+#    local($cmd) = @_;
+    local($next, $revert, $thisline);
+    local($this_cmd) = $cmd;
+    $this_cmd =~ s/^\\//m unless ($cmd eq "\\");
+    &write_warnings("\n? brace missing for \\$this_cmd");
+    if (/^[\s%]*([^\n]*)\n/m ) {
+	$thisline = &revert_to_raw_tex($1)
+    } else { 
+	$thisline = &revert_to_raw_tex($_); 
+    }
+    print "\n\n*** no brace for \\$this_cmd , before:\n$thisline";
+    s/^\s*//m;
+    if ($_ =~ s/$next_token_rx//m) { $next = $& };
+    $next =~ s/$comment_mark(\d+\n?)?//gm;
+#    $next = &translate_commands($next) if ($next =~ /^\\/);
+    if ($next =~ /^\\(\W|\d|[a-zA-z]*\b)/m) {
+	$revert = $next = "\\".$1;
+    } elsif ($next =~ /\W/) {
+	$revert = &revert_to_raw_tex($next);
+    } else { $revert = $next };
+    print "\n*** using \"$revert\" as the argument instead; is this correct?  ***\n\n";
+    $next;
+}
+
 #RRM:
 #     &styled_text_chunk  provides an interface for pieces of styled text,
 # within a single paragraph. The visual markup can be obtained through either
