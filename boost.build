#!/bin/bash
#
. build_funcs

TARNAME=boost
TARNAMEEXTRA=
TARDIR=~/tmp/new/b
#TAR_EXT=.tar.gz
VERSION=1_70_0
VERSIONEXTRA=
BUILD=1

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}_${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}
PKGDBG=/tmp/package-${PKGNAME}-debug

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
mv ${TARNAME}_${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
# patch -p1 < ${CWD}/boost-1_57_0.diff
  cp bootstrap.sh bootstrap.sh.bak
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

cp bootstrap.sh.bak bootstrap.sh

PYTHON_VERSION=$(python -c 'import sys; print(sys.version[:3])')
PYTHON3_VERSION=$(python3 -c 'import sys; print(sys.version[:3])')

if [ ${DO_CONFIGURE} == "yes" ]
then
./bootstrap.sh \
  --prefix=/usr \
  --with-toolset=gcc \
  --with-icu \
  --with-python=/usr/bin/python2 || exit 1
fi

# use "--layout=system" to make without version numbers
# remove link=shared to build both static and shared libs
LINK_TYPE="link=shared"

if [ ${DO_MAKE} == "yes" ]
then
./b2 \
  ${NUM_JOBS} \
  --layout=system \
  --build-dir=build-python2 \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --build-type=minimal \
  toolset=gcc \
  variant=release \
  debug-symbols=off \
  ${LINK_TYPE} \
  threading=multi \
  runtime-link=shared \
  python=${PYTHON_VERSION} \
  cflags="${SLKCFLAGS}" \
  cxxflags="${SLKCFLAGS} ${EXTRA_CXXFLAGS}" \
  stage || exit 1
fi

if [ ${DO_INSTALL} == "yes" ]
then
./b2 \
  ${NUM_JOBS} \
  --layout=system \
  --build-dir=build-python2 \
  --prefix=${PKG}/usr \
  --libdir=${PKG}/usr/lib${LIBDIRSUFFIX} \
  --build-type=minimal \
  toolset=gcc \
  variant=release \
  debug-symbols=off \
  ${LINK_TYPE} \
  threading=multi \
  runtime-link=shared \
  python=${PYTHON_VERSION} \
  cflags="${SLKCFLAGS}" \
  cxxflags="${SLKCFLAGS} ${EXTRA_CXXFLAGS}" \
  install || exit 1
fi

# one more run to build libboost_python3..
sed -e '/using python/ s@;@: /usr/include/python${PYTHON_VERSION/3*/${PYTHON_VERSION}m} ;@' \
  -i bootstrap.sh

if [ ${DO_CONFIGURE} == "yes" ]
then
./bootstrap.sh \
  --with-toolset=gcc \
  --with-icu \
  --with-python=/usr/bin/python3 \
  --with-libraries=python || exit 1
fi

if [ ${DO_MAKE} == "yes" ]
then
./b2 \
  ${NUM_JOBS} \
  --layout=system \
  --build-dir=build-python3 \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --build-type=minimal \
  toolset=gcc \
  variant=release \
  debug-symbols=off \
  ${LINK_TYPE} \
  threading=multi \
  runtime-link=shared \
  python=${PYTHON3_VERSION} \
  cflags="${SLKCFLAGS}" \
  cxxflags="${SLKCFLAGS} ${EXTRA_CXXFLAGS}" \
  stage || exit 1
fi

if [ ${DO_INSTALL} == "yes" ]
then
./b2 \
  ${NUM_JOBS} \
  --layout=system \
  --build-dir=build-python3 \
  --prefix=${PKG}/usr \
  --libdir=${PKG}/usr/lib${LIBDIRSUFFIX} \
  --build-type=minimal \
  toolset=gcc \
  variant=release \
  debug-symbols=off \
  ${LINK_TYPE} \
  threading=multi \
  runtime-link=shared \
  python=${PYTHON3_VERSION} \
  cflags="${SLKCFLAGS}" \
  cxxflags="${SLKCFLAGS} ${EXTRA_CXXFLAGS}" \
  install || exit 1
fi

#mkdir -p ${PKGDBG}/usr/lib${LIBDIRSUFFIX}
#mv ${PKG}/usr/lib${LIBDIRSUFFIX}/*-d.so* ${PKGDBG}/usr/lib${LIBDIRSUFFIX}

#strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  LICENSE* AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  index.htm boost.png *.css  \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

mkdir -p ${PKGDBG}/install

#-----handy-ruler-for-slack-desc-width-------------------------------|
#PKGNAME=${PKGNAME}-debug \
#make_slack_desc << EOF "Boost template library debug version"
#Debug versions of the Boost libraries.
#
#EOF
#
#mv ${PKG}/install/slack-desc ${PKGDBG}/install

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "Boost template library"
Boost provides free peer-reviewed portable C++ source libraries. The
emphasis is on libraries which work well with the C++ Standard
Library, in the hopes of establishing "existing practice" for
extensions and providing reference implementations so that the Boost
libraries are suitable for eventual standardization. (Some of the
libraries have already been proposed for inclusion in the C++
Standards Committee's upcoming C++ Standard Library Technical Report.)

EOF

post_install

cd ${PKG}
su -c "chown -R root:root ${PKG} ${PKGDBG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}:${GROUP} ${PKG}"
