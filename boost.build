#!/bin/bash
#
. build_funcs

TARNAME=boost
TARNAMEEXTRA=
TARDIR=~/tmp/new/b
#TAR_EXT=.tar.gz
VERSION=1_34_0
VERSIONEXTRA=
BUILD=1

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}_${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
mv ${TARNAME}_${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 #patch -p1 < ${CWD}/
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

#PATH=`pwd`/tools/jam/src/bin.linuxx86:${PATH}

#PYTHON_VERSION=`python -V 2>&1 | gawk '{print $2}' | cut -d. -f1,2`

#export PYTHON_VERSION

if [ ${DO_CONFIGURE} == "yes" ]
then
./configure --prefix=/usr
fi

if [ ${DO_MAKE} == "yes" ]
then

# use LIBS="--layout=system" to make without version numbers
make LIBS="--layout=system" || exit

fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

# use LIBS="--layout=system" to make without version numbers
make install LIBS="--layout=system" \
	    PREFIX=${PKG}/usr \
	    EPREFIX=${PKG}/usr \
	    LIBDIR=${PKG}/usr/lib \
	    INCLUDEDIR=${PKG}/usr/include

(cd ${PKG}/usr/include; ln -s boost*/boost boost)

(cd ${PKG}/usr/lib
 for f in `ls | grep -v ${VERSION%_*}`
 do
    inode=`ls -li "${f}" | awk '{print $1}'`
    HLINKS=`find . \! -name "$f" -inum ${inode}`

    if [ -n "${HLINKS}" ]; then
      # We have hard-links! Remove them now.
      for i in ${HLINKS}
	do
	  rm -f ${f}
	  ln -s ${i} ${f}
	done
    fi
 done
)


#strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  LICENSE* AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  index.htm boost.png *.css doc more wiki status people libs \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

(cd ${PKG}/usr/doc/${TARNAME}-${VERSION}/libs
 rm -rf date_time/{build,src,test,xmldoc,test}
 rm -rf filesystem/{build,src,test}
 rm -rf graph/{build,src,test}
 rm -rf iostreams/{build,src,test}
 rm -rf program_options/{build,src,test}
 rm -rf python/{build,src,test,pyste}
 rm -rf regex/{build,src,test,performance,tools}
 rm -rf serialization/{build,src,test,*ide}
 rm -rf signals/{build,src,test}
 rm -rf test/{build,src,test,tools}
 rm -rf thread/{build,src,test}
 rm -rf wave/{build,src,test}
)

fix_docs

mkdir -p ${PKG}/install
cat <<EOF > ${PKG}/install/slack-desc
# HOW TO EDIT THIS FILE:
# The "handy ruler" below makes it easier to edit a package description.  Line
# up the first '|' above the ':' following the base package name, and the '|'
# on the right side marks the last column you can put a character in.  You must
# make exactly 11 lines for the formatting to be correct.  It's also
# customary to leave one space after the ':'.

          |-----handy-ruler------------------------------------------------------|
${PKGNAME}: ${PKGNAME} ${VERSION}
${PKGNAME}:
${PKGNAME}: Boost provides free peer-reviewed portable C++ source libraries.  The
${PKGNAME}: emphasis is on libraries which work well with the C++ Standard
${PKGNAME}: Library, in the hopes of establishing "existing practice" for
${PKGNAME}: extensions and providing reference implementations so that the Boost
${PKGNAME}: libraries are suitable for eventual standardization. (Some of the
${PKGNAME}: libraries have already been proposed for inclusion in the C++
${PKGNAME}: Standards Committee's upcoming C++ Standard Library Technical Report.)
${PKGNAME}:
${PKGNAME}:
${PKGNAME}:
EOF

post_install

cd ${PKG}
su -c "chown -R root.root *; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
