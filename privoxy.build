#!/bin/bash
#
. build_funcs

TARNAME=privoxy
TARNAMEEXTRA=
TARSEP="-"
TARDIR=~/tmp/new/p
#TAR_EXT=.tar.gz
VERSION=3.0.11-stable
VERSIONEXTRA=-src
BUILD=1

WEBPAGE="http://www.privoxy.org/"

#TAR_PROG=
#TAR_OPTS=
#PKGNAME=
#PKGVERSION=
#BUILD_SUFFIX=
#ARCH=noarch


FULL_TARNAME=${TARDIR}/${TARNAME}${TARNAMEEXTRA}${TARSEP}${VERSION}${VERSIONEXTRA}${TAR_EXT}

pre_unpack

PKG=/tmp/package-${PKGNAME}

if [ ! -f ${FULL_TARNAME} ]
then
  echo Can\'t find ${FULL_TARNAME}
  exit
fi

if [ ! -d ${TARNAME}-${VERSION} ]
then 
${TAR_PROG} ${TAR_OPTS} ${FULL_TARNAME}
#mv ${TARNAME}-${VERSION} ${TARNAME}-${VERSION}

if [ ! -d ${TARNAME}-${VERSION} ]
then 
  echo "${TARNAME}-${VERSION} directory not found"
  exit
fi

(cd ${TARNAME}-${VERSION}
 #patch -p1 < ${CWD}/

 autoheader
 autoconf
)
fi

pre_configure

cd ${TARNAME}-${VERSION}

fix_perms

privoxyuser=privoxy
privoxygroup=privoxy

if [ ${DO_CONFIGURE} == "yes" ]
then
CFLAGS="-O2 -march=i486 ${CPUOPT}=i686" \
CXXFLAGS="-O2 -march=i486 ${CPUOPT}=i686" \
./configure --prefix=/usr \
            --sysconfdir=/etc/privoxy \
            --localstatedir=/var \
	    --mandir=/usr/man
fi

if [ ${DO_MAKE} == "yes" ]
then
make ${NUM_JOBS} || exit
fi

if [ ${DO_INSTALL} != "yes" ]
then
  exit
fi

make install DESTDIR=${PKG}

doinst_addusergrp ${privoxyuser} ${privoxygroup} noshell

mkdir -p ${PKG}/etc/rc.d
sed -e "s@%PROGRAM%@privoxy@" \
    -e "s@%SBIN_DEST%@/usr/sbin@" \
    -e "s@%CONF_DEST%@/etc/privoxy@" \
    -e "s@%USER%@${privoxyuser}@" \
    -e "s@%GROUP%@${privoxygroup}@" \
    slackware/rc.privoxy.orig > ${PKG}/etc/rc.d/rc.privoxy.new

chmod +x ${PKG}/etc/rc.d/rc.privoxy.new
doinst_same_perm etc/rc.d/rc.privoxy
doinst_config etc/rc.d/rc.privoxy.new

for f in config trust user.action user.filter
do
  mv ${PKG}/etc/privoxy/$f ${PKG}/etc/privoxy/$f.new
done
doinst_config etc/privoxy/{config.new,trust.new,user.action.new,user.filter.new}

mkdir -p ${PKG}/etc/logrotate.d
cat > ${PKG}/etc/logrotate.d/privoxy << EOF
/var/log/privoxy/logfile {
        daily
        rotate 5
        compress
        delaycompress
        missingok
        notifempty
        sharedscripts
        postrotate
                /etc/rc.d/rc.privoxy reload > /dev/null
        endscript
}
EOF

cat >> ${PKG}/install/doinst.sh << EOF

chown -R ${privoxyuser}.${privoxygroup} var/log/privoxy

EOF

cat >> ${PKG}/install/doinst.sh << EOF
if [ ! -e etc/rc.d/rc.local ]; then
        echo "#!/bin/sh" > etc/rc.d/rc.local
        chmod 755 etc/rc.d/rc.local
fi
if [ ! -e etc/rc.d/rc.local_shutdown ]; then
        echo "#!/bin/sh" > etc/rc.d/rc.local_shutdown
        chmod 755 etc/rc.d/rc.local_shutdown
fi
run=\`grep "/etc/rc.d/rc.privoxy" etc/rc.d/rc.local\`
if [[ "\${run}" == "" ]]; then
        echo "" >> etc/rc.d/rc.local
        echo "# start privoxy" >> etc/rc.d/rc.local
        echo "if [ -x /etc/rc.d/rc.privoxy ]; then" >> etc/rc.d/rc.local
        echo "  /etc/rc.d/rc.privoxy start" >> etc/rc.d/rc.local
        echo "fi" >> etc/rc.d/rc.local

        echo "" >> etc/rc.d/rc.local_shutdown
        echo "# stop privoxy" >> etc/rc.d/rc.local_shutdown
        echo "if [ -x /etc/rc.d/rc.privoxy ]; then" >> etc/rc.d/rc.local_shutdown
        echo "  /etc/rc.d/rc.privoxy stop" >> etc/rc.d/rc.local_shutdown
        echo "fi" >> etc/rc.d/rc.local_shutdown
fi
EOF

strip_binaries

fix_links

compress_manpages

compress_info

cp -a \
  AUTHORS COPYING* INSTALL NEWS PLANS README* TODO \
  ${PKG}/usr/doc/${TARNAME}-${VERSION}

fix_docs

#-----handy-ruler-for-slack-desc-width-------------------------------|
make_slack_desc << EOF "non-caching web proxy with advanced filtering"
Privoxy is a non-caching web proxy with advanced filtering 
capabilities for enhancing privacy, modifying web page data, managing 
HTTP cookies, controlling access, and removing ads, banners, pop-ups 
and other obnoxious Internet junk. Privoxy has a flexible 
configuration and can be customized to suit individual needs and 
tastes. Privoxy has application for both stand-alone systems and 
multi-user networks.

Privoxy is based on Internet Junkbuster (tm).

EOF

post_install

cd ${PKG}
su -c "chown -R root.root ${PKG}; \
find . -type d -exec chmod 755 {} \; ; \
makepkg -l y -c n ${PKGDIR}${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${BUILD_SUFFIX}.tgz; \
chown -R ${USERNAME}.${GROUP} ${PKG}"
